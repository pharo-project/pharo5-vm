(name 'VMMaker-oscog-IgorStasenko.307' message 'Deprecated old display primitives.Things for the X11DisplayPlugin.Pair programmed with Ronie' id 'cd384952-0c30-47fd-ab71-c29a846a2c91' date '16 January 2014' time '2:34:07.604 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-LucFabresse.306' message 'SerialPlugin fix"ByName:" primitives convert a String object to a char*but it missed the last \0 characterTested on Linux.Since the same plateform code is used on Linux and OsX, it should also work on OsX.' id 'b418dddb-81b0-4a39-94bb-71b052ada061' date '27 September 2013' time '10:04:12.418 am' author 'LucFabresse' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.305' message '- merged with Eliot''s 333' id '104f0cf5-63b8-4950-a20f-3619262b10e1' date '17 September 2013' time '3:19:20.064 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.304' message '- added DisplayPlugin' id '49dd2159-e228-423a-bd8d-7e51cd9323aa' date '21 August 2013' time '5:25:50.461 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.303' message '- merged with Eliot''s 314' id '2facc2ec-9943-43f4-b0cd-9504c874df9d' date '31 July 2013' time '3:17:27.253 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.302' message '- merged with Eliot''s' id '99d6632c-06ac-4f19-b842-b6807ad969e9' date '10 July 2013' time '2:35:56.127 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-GuillermoPolito.243' message 'fixing extension handling' id '72f3c5f0-eef2-4802-8042-603e6821dd5d' date '19 June 2013' time '4:31:57.034 pm' author 'GuillermoPolito' ancestors ((name 'VMMaker-oscog-GuillermoPolito.242' message 'fixing extension handling' id '85dc4488-f9fd-45ac-834f-a0792438e3e5' date '19 June 2013' time '2:54:45.742 pm' author 'GuillermoPolito' ancestors ((name 'VMMaker-oscog-GuillermoPolito.241' message 'moving to use filesystem' id 'b67733cc-447a-478d-b979-eb90acc9e04f' date '17 June 2013' time '6:37:02.254 pm' author 'GuillermoPolito' ancestors ((name 'VMMaker-oscog-GuillermoPolito.240' message 'changing references from FileDirectory to FileSystem' id '262dff38-4bb7-450f-afaf-a4ba4c648554' date '17 June 2013' time '4:16:37.382 pm' author 'GuillermoPolito' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.239' message '- merged with Eliot''s' id '82137893-018c-467a-8b71-cfc71ef91f33' date '12 June 2013' time '3:59:23.041 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.238' message '- print: macro now resolves to printf("%s", ...) so debian guys do not complain.' id '5b4d9796-0c4c-4496-9513-42c47f6c0aa8' date '14 May 2013' time '5:03:09.451 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.237' message '- merged with Eliot''s 285' id 'bfc18b7f-3847-432f-a19c-6988d5f6e2e7' date '16 April 2013' time '4:36:02.907 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.236' message '- merged with Eliot''s. More becomeForward: fixes. ' id '1dbdb1d5-7f43-44db-9cec-f2095b90345e' date '12 March 2013' time '10:43:57.384 am' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.235' message '- it is possible to build stackvm again' id '0387ce7c-0822-46ef-ba1e-9bade5722098' date '8 March 2013' time '5:36:38.541 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.234' message '- merged with Eiot''s 270, to fix the become problem (looks solved now)' id '26b9f698-94a5-45ed-bf30-28f2bf8f3912' date '6 March 2013' time '2:13:03.474 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.233' message '- merged with Eliot''s 266- it tries to fix a recurrent crash of cog when becoming objects' id '5ad9f706-8aa4-4220-9b40-7ac77621a6e2' date '21 February 2013' time '12:04:23.993 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.232' message '- fix a bug on StackInterpreter read ' id '50b036ca-d070-4b0e-a6f0-0f60f870f6cc' date '15 February 2013' time '5:21:26.78 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.231' message '- merged with Eliot''s 264- added <api> to isIntegerValue: and firstFixedField: to ensure is exported (then supress warnings)' id 'a9e39f38-e1fa-4851-a3a3-1a0f1f7a4062' date '13 February 2013' time '3:59:35.838 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.230' message '- fixed a SerialPlugin typo (Thanks Luc)' id '63ec32ab-a5a1-4a4e-b9d9-39e8b871f3e1' date '18 January 2013' time '12:13:03.095 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.229' message '- merged with Eliot''s 255' id '43696581-c092-46f0-9f9f-37c42fd11a1b' date '17 January 2013' time '4:34:38.074 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.228' message '- merged with Eliot 227 version' id 'a2751bbe-713b-4ed3-94e3-4cd469f13f43' date '11 December 2012' time '2:30:45.751 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.166' message '- SerialPlugin now understands *ByName primitives' id '5773fcb9-2982-4507-8a9e-4308ec33731e' date '2 November 2012' time '1:56:26.517 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.165' message '- added SystemInfoPlugin to retrieve some information about the platform (mainly for security reasons)' id 'b9ded301-c60c-437f-bd59-9e8256726624' date '31 October 2012' time '5:59:24.762 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.164' message '- added file plugin permissions and link support' id 'd77dee73-00f5-4d00-847b-00646b08329d' date '25 September 2012' time '9:20:45.153 am' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-IgorStasenko.163' message 'version 5.0' id 'a1918c43-f510-4c31-9fad-a6b545744445' date '26 July 2012' time '4:20:32 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.162' message '- changed the readImageFromFile: f HeapSize: desiredHeapSize StartingAt: imageOffsetto use sqImageFileReadEntireImage() function' id 'e4554f9a-cc90-4826-a807-ac282b782fe4' date '26 July 2012' time '3:56:10 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.161' message 'FilePlugin now answers posix permissions' id '8e0c22c3-b48d-4d8d-a7f9-8a75dc246f28' date '22 June 2012' time '4:57:52.269 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.160' message 'SocketPlugin with primitives for ipv6' id 'bec8cdf0-4e06-4975-8c02-e882fadf4df3' date '30 May 2012' time '3:58:23.003 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-DamienCassou.159' message '- Merge' id '835a579a-0d80-4719-bd53-c46a46dc881c' date '28 May 2012' time '3:02:26.452 pm' author 'DamienCassou' ancestors ((name 'VMMaker-oscog-DamienCassou.158' message '- Merge' id '4f96b9a3-dff6-42d0-a0d3-d3b05cf739e9' date '28 May 2012' time '3:00:21.316 pm' author 'DamienCassou' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.157' message 'fix on FFI for mingw' id 'a0bb1fe3-aac7-084b-8d5b-2252b9cf5b05' date '25 April 2012' time '8:56:43.314 am' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.156' message 'IOSPlugin recategorized' id '4e26e7e1-2fcc-41ff-9a0e-3bbb1149df62' date '13 April 2012' time '11:25:59 am' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.155' message 'merged with latest from Eliot (emm.154)' id 'c53d1f34-009e-425c-9f88-398f8d39c5e8' date '5 April 2012' time '10:57:51 am' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.150' message 'small fix on IOSPlugin' id '51a055ae-057b-499c-93eb-2639822e6e6f' date '2 April 2012' time '10:29:49 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.149' message 'merged with latest sources from Eliot' id 'e68d4460-2c51-44da-8704-607dce543851' date '20 February 2012' time '5:56:31 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.144' message '-#primitiveGetNextEvent now processing complex evenbts (for touch events)-#readImageFromFile:HeapSize:StartingAt: now uses sqImageFileReadEntireImage-IA32ABIPlugin>>#primInIOProcessEventsFlagAddress now has a preprocessor directive, because it is not being used with __APPLE__ platforms' id '5248dc9f-6e7c-499e-a1d6-3e29d9726539' date '18 February 2012' time '10:37:50 am' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-IgorStasenko.143' message '- clean merge with VMMaker.oscog-eem.142' id '25049516-19fb-3647-9ca4-6328c656f3f0' date '7 February 2012' time '4:28:02 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.140' message '-merged with Eliot''s 139. Everything seems to work' id '1961b8af-fb68-4813-89a9-67f2401441d0' date '18 November 2011' time '6:03:18 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.139' message '-merged with Dave''s latest' id '5aa53979-d7d8-4ca3-91fe-cfc3b4109c33' date '11 November 2011' time '2:12:44 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.138' message 'attempt to integrate Eliot changes (not sure it works)-removed generation of __buildInfo in header files (it was causing compile errors... maybe my problem, but I don''t know how to solve it other way)-fix on LargeIntegersPlugin... already not sure about it, but now seems to work. ' id '11b27e15-98a3-4d17-8e9a-c718e641c0de' date '11 November 2011' time '2:06:05 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.124' message 'integrated BytesPerWorld changes by Dave' id 'b8813537-9a89-4053-a61a-b744d186f63e' date '17 October 2011' time '9:53:29 am' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-IgorStasenko.123' message '- promoted #noInlineTemporary:in: to StackInterpreter, so Stack VMs can be built :)' id 'f8c5573e-7fd1-4959-91fc-e0c24d967e03' date '30 August 2011' time '7:32:35 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.122' message '- merge with VMMaker.oscog-eem.121- fix #newObjectHash to use ShiftForWord instead of BytesPerWord' id 'a1c25a96-23ed-4db8-8364-e0abb3dbe880' date '25 August 2011' time '12:45:59 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.116' message 'merge with VMMaker.oscog-eem.115' id '1bf4792f-f38b-4ab7-bea7-2183236f9221' date '9 August 2011' time '2:17:02 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-EstebanLorenzano.109' message 'changing imports of TestOSAPlugin to make it compile in latest SDK''s' id 'd5000300-0cf5-581f-1100-0000b8f4581f' date '29 July 2011' time '5:31:05 pm' author 'EstebanLorenzano' ancestors ((name 'VMMaker-oscog-IgorStasenko.108' message 'merge with oscog-eem.107' id '384f4108-f1f4-4954-8357-0b3005cb81e2' date '20 July 2011' time '7:13:45 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.96' message '- integrated rule 41 into BitBltSimulation(this rule is a must for freetype)' id 'a4be9bc4-ad6c-d947-b90c-23c30ec9a41b' date '12 July 2011' time '9:28:23 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.95' message '- merge with oscog-emm.94' id '84e8bbbc-a3dc-e84d-a2b2-ac33a6012b34' date '7 July 2011' time '12:15:17 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.92' message '- merge with  VMMaker.oscog-eem.90(now Cog VMs should work stable again)' id '9823f129-7da4-4aee-967f-2bce7feb6770' date '30 June 2011' time '11:28:44 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.91' message '- merge with eem.89- added fix to initialize pool vars before they added to code generator' id 'd8240a62-1c3a-4322-8917-61a229d662ce' date '30 June 2011' time '4:52:32 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.90' message '- resave after unsuccessfull upload' id '4a45c83b-1191-4cb1-bd3f-6db3c50175da' date '29 June 2011' time '2:56 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.89' message 'Summary of mergeVMMaker.oscog-eem.88 with VMMaker-oscog-IgorStasenko.68- preserving ClipboardExtendedPluginFloat class>>fromIEEE64BitWord: anInteger???use of methodReturnValue: is coolpreserved #primitiveImageFormatVersion(most probably will remove it as well)typo in #primitiveMPEG3GetTime: fileHandle # result , instead of #result (parser doesn''t barks however)(whole Mpeg3Plugin is cleaner in .dtl branch)storeImageSegmentInto: segmentWordArray outPointers: outPointerArray roots: arrayOfRootscopied from ObjectMemory to NewObjectMemory.. why?this feature is broken anyways.. so i cannot care lessccgValBlock: valStringstill contains #fixTemps in Eliot''s branch- new finalization is still not integrated in Eliot''s branch- readImageFromFile: f HeapSize: desiredHeapSize StartingAt: imageOffsetstill using old sqAllocateMemory() in Eliot''s branch instead of#allocateMemory:minimum:imageFile:headerSize: added by Esteban- primLoadModule and primitiveDisableModuleLoading are not integrated in Eliot''s branchVMMakerTool class>>initializemenu registration fix from Mariano are not integrated in Eliot''s branch' id 'ecc061fe-cfeb-4a0c-895a-e5bbf3b0071a' date '1 January 2001' time '1:13:48 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.68' message 'If Ephemeron''s key is almost-collectable (reachable only by ephemeron itself), then it is reported to image side. Key won''t be nilled out as in previous implementation.So, image can use ephemerons for pre-morten finalization.Then VM continues tracing ephemeron as object with all strong slots, and if there are other ephemerons which need to be reported as well, same procedure will be done for them.It will loop until no other ephemerons with almost-collectable keys can be found and nothing left to be traced.http://code.google.com/p/cog/issues/detail?id=44' id '8da616a1-519c-41d9-a16b-d7082a60ad31' date '2 June 2011' time '4:08:13 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.67' message '- Ephemerons support for Cog.Seehttp://code.google.com/p/cog/issues/detail?id=44for image-side changes & tests.' id '99d89e06-acf0-4994-8967-c4af78940d70' date '24 May 2011' time '4:22:13 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-MarianoMartinezPeck.66' message 'Adapt VMMakerTool so that it doesnt try to register in the menu if TheWorldMenu is not present, like the case of Pharo. This change was already integrated in the main trunk of VMMaker but since Eliot forked VMMaker-oscog before that, it was not there. It doesn''t affect Squeak' id '97bab5b0-51d6-4deb-8b58-5bcedd4747dc' date '23 April 2011' time '2:17:26 pm' author 'MarianoMartinezPeck' ancestors ((name 'VMMaker-oscog-MarianoMartinezPeck.65' message 'blah' id '944f5c54-f2f5-4cc7-b693-b4db9320cff8' date '23 April 2011' time '1:50:19 pm' author 'MarianoMartinezPeck' ancestors ((name 'VMMaker-oscog-dtl.64' message 'Re-save from VMMaker-oscog-EstebanLorenzano.62 because VMMaker-oscog-dtl.61 and VMMaker-oscog-dtl.60 were saved without correct ancestry. This version incorporates the changes from VMMaker-oscog-EstebanLorenzano.62, VMMaker-oscog-dtl.61, and VMMaker-oscog-dtl.60.Name: VMMaker-oscog-EstebanLorenzano.62-added ClipboardExtendedPlugin as a regular plugin (taken from the InterpreterVM branch) I don''t know if it works right now, but at least it compiles :)Name: VMMaker-oscog-dtl.61A second batch of updates from VMM trunk, primarily cosmetic but also a class comment update and a couple of methods that had not previously been pragmatized in oscog.Name: VMMaker-oscog-dtl.60These changes are methods from the main VMM branch for which <#var:#type:> declarations have been formatted with proper spacing. By updating these in the oscog branch, all of these methods are identical in both branches. All changes are cosmetic (no functional changes to the methods).' id 'c1d30608-30ec-50b7-208a-31f7a46c1508' date '21 April 2011' time '8:24:32.46 pm' author 'dtl' ancestors ((name 'VMMaker-oscog-dtl.59' message 'Merge VMMaker-oscog.dtl.58, and add #primitiveImageFormatVersionAdd primitiveMillisecondClockMask, an optional named primitive used in conjunction with primitiveMillisecondClock for duration calculations. The image assumes a value for this constant that is assumed to correspond to the actual value used in the VM. This primitive permits the VM to report the actual value being used.Add primitiveImageFormatVersion, an optional named primitive answering the image format number of the current image. This is the value stored in the first word of an image file header when the image is saved, and possibly modified on image load if the VM adds or removes capabilities for the running image. This primitive was added to VMMaker trunk in VMMaker-dtl.169. Rationale: supports float word order handing for image segments, reference http://lists.squeakfoundation.org/pipermail/vm-dev/2011-April/007712.html' id 'c1d30608-042d-4bb7-20ca-2bf7a46c1508' date '17 April 2011' time '10:32:55.018 pm' author 'dtl' ancestors ((name 'VMMaker-oscog-dtl.58' message 'Merge VMMaker-oscog.dtl.57Generate C code for #repeat.Implementation by Igor Stasenko and Nicolas Cellier.' id 'c1d30608-04b3-a5b7-20ca-2bf7a46c1508' date '17 April 2011' time '10:22:12.174 pm' author 'dtl' ancestors ((name 'VMMaker-oscog-dtl.57' message 'Merge VMMaker-oscog.dtl.56Add tests from VMMaker trunk to document various issues and verify presence of primitives.' id 'c1d30608-042d-4bb7-20ca-2bf7a46c1508' date '17 April 2011' time '10:18:26.028 pm' author 'dtl' ancestors ((name 'VMMaker-oscog-IgorStasenko.56' message '- another attempt to make MC to upload correct merge...' id 'afdffb53-fcd5-4daa-b7a2-2a812cb0b112' date '4 April 2011' time '3:49:59 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog.54' message 'Fix FFI via fixing includesBehavior:ThatOf: so that classes nolonger are considered to inherit from nil.Merge with VMMaker-oscog-IgorStasenko.53.' id '73c095bd-7fa5-4ef9-b9fc-60378cae64c7' date '1 April 2011' time '12:19:38.454 pm' author 'eem' ancestors ((name 'VMMaker-oscog-IgorStasenko.53' message '- republish overridden package + merge oscog.52' id 'fb4c7e81-ea2e-1b45-a461-e382537797a0' date '20 March 2011' time '11:40:20 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog.52' message 'Merge with oscog-49-51 &  Esteban-50' id 'a2810aac-4423-6740-b70e-7e821b979cb4' date '18 March 2011' time '12:45:14 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.50' message '- minor fixes to make Win32 StackVM compile' id 'f8306ed6-5876-614f-9753-88de476ecd8f' date '17 March 2011' time '6:42:52 am' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-IgorStasenko.Stasenko.49' message '- merge with oscog.47' id '279087d0-4ec6-421d-950c-cfed0cabf5ea' date '10 February 2011' time '2:32:56 pm' author 'IgorStasenko' ancestors ((name 'VMMaker-oscog-Igor.Stasenko.48' message '- removed #fixtemps to avoid patching when loading in Pharo images' id 'f7e6dcaf-4550-4c45-9a5d-4882abbbc294' date '3 February 2011' time '3:57:32.379 pm' author 'Igor.Stasenko' ancestors ((name 'VMMaker-oscog-Igor.Stasenko.47' message '- merge with oscog.46- fixed the Interpreter''s classvars- removed duplicated sharedpools' id '0695e608-2043-419a-b5b8-d4b6a5cbaea5' date '20 January 2011' time '8:21:04.413 pm' author 'Igor.Stasenko' ancestors ((name 'VMMaker-oscog-Igor.Stasenko.43' message '- merge with oscog.42' id '4e82870b-d4c2-4083-8cff-e35ae022c87d' date '2 January 2011' time '5:43:00.526 pm' author 'Igor.Stasenko' ancestors ((name 'VMMaker-oscog-Igor.Stasenko.38' message '- added a type definition for readImageFromFile....' id '6cd6eeee-5691-40d3-9dca-46aaed01d49a' date '6 December 2010' time '2:46:52.417 pm' author 'Igor.Stasenko' ancestors ((name 'VMMaker-Igor.Stasenko.37' message 'integration of finalization enhancements for Cog VM(ignore the Interpreter changes, when merging)' id '6fcf9560-ff1b-fc47-9e20-044051722a5b' date '6 October 2010' time '8:36:31.112 pm' author 'Igor.Stasenko' ancestors ((name 'VMMaker-oscog.36' message 'LargeIntegersPlugin	minor simplification to digitSubLarge:with:Simulator:	Fix SmartSyntaxPluginSimulator; the receiver: spec	applies to the receiver, not the result, bozo!!	Fix simulation of 64-bit integer arithmetic which didn''t	truncate the result to 64 bits, hence failing to fail for	results that overflow 64 bits.	Allow simulator to avoid booleanCheat: for comparing	bytecode traces obtained by runSimulated:contextAtEachStep:' id '79f2435a-ad54-4d89-be04-cd4efaad1ede' date '4 October 2010' time '7:15:15.628 pm' author 'eem' ancestors ((name 'VMMaker-oscog.35' message 'Simulation support for SmartSyntaxPlugins, and hencesimulation of LargeIntegersPlugin.Stream-line firstIndexableField: and use it to implementLargeIntegersPlugin>>unsafeByteOf:at:.Utilities menu for StackInterpreterSimulator.Nuke obsolete & partial smart syntax simulation support.Revert CroquetPlugin (no support for vertex optimization yet).' id 'cf41affd-7225-42c5-8fa7-257721d041aa' date '3 October 2010' time '8:06:40.851 pm' author 'eem' ancestors ((name 'VMMaker-oscog.34' message 'Warning: this may have difficulty loading into an image withVMMaker already loaded and you''ll almost certainly need torecompile the package if you try this.Refactor to move ObjectMemory into objectMemory inst varin StackInterpreter and subclass CoInterpreter.Move the bulk of the core primitives to InterpreterPrimitives,to allow eventual sharing of primitives between Cog and theInterpreter..Fix typo in method arg check in primitiveObject:perform:withArguments:lookedUpIn:for objects-as-methods.Correct the sendTrace bit flags defs.Various minor cleanups/polish.Simulator:	provide a menu on the bytecode count pane with useful	expressions.  It''s now a tool :)' id 'ec174a95-5f42-4fe0-88f0-4baff13dd3ce' date '1 October 2010' time '7:28:02.134 am' author 'eem' ancestors ((name 'VMMaker-oscog.33' message 'OSCogVM:  Support object-as-method:	Eagerly evaluate the interpreter version of a primitive	to ease the object-as-method implementation and to	improve interpreter performance.	Refuse to enter anything that isn''t a CompiledMethod	into the method-lookup cache to avoid open PICs having	to check for valid compiled methods.	Have various places check for isOopCOmpiledMethod:	rather than isCompiledMethod: to allow SmallIntegers to	be used as methods.Interpreter:	Have various places check for isOopCOmpiledMethod:	rather than isCompiledMethod: to allow SmallIntegers to	be used as methods.Slang:	support super sends by expanding them at translation	time.  This allows CoInterpreter>>addMethodToCache	to avoid cacheing non-compiled methods via a super	send, avoiding duplicating SrackInterpreter''s method.' id '733b7c50-b973-4ca0-9831-5c84d09032bf' date '25 September 2010' time '7:13:51.32 pm' author 'eem' ancestors ((name 'VMMaker-oscog.32' message 'OSCogVM:	Fix Float < & <=; the NaN inversions for < & <= were mixed up.	(symptom was that 0 asFloat printed as -0.0, since 0.0 < 0 was true).' id '610266ce-1a35-4d42-8ff9-b30ed3736b19' date '21 September 2010' time '8:12:11.158 pm' author 'eem' ancestors ((name 'VMMaker-oscog.31' message 'Refactor the booleanCheat to remove code duplication.Saves 1.3k in the deployment Cog build (and > 3k in debug).Avoid annoying (and bogus) "removed booleanCheatTruebecause it refers to local variabls of interpret" messageby expanding cCode: [] inSmalltalk: [] forms during translation,and using this form in the relevant senders of booleanCheat:.' id 'd80799cf-0dd2-40dd-b3a6-f8bca14bdc3d' date '19 September 2010' time '11:41:32.864 am' author 'eem' ancestors ((name 'VMMaker-oscog.29' message 'CogVM:	Fix machine-code floating point comparisons for nan cases (< & <=).	Provide tests for CmpCqR CmpRdRd et al.	Nuke primitiveIdentityDictionaryLookup; it is unused and ties	down the system too much (putting e.g. a hash algorithm in the VM).' id 'c043454b-2bd2-4f79-8308-9c6c82ecf645' date '18 September 2010' time '9:48:12.321 pm' author 'eem' ancestors ((name 'VMMaker-oscog.28' message 'CogVM:	Fix machine-code float divide to fail for / 0.0.	Revert mistaken bytecodePrim >= & <= NaN change.Slang:	Improve TSendNode printing (parenthesize)' id 'abd2e918-6a30-45ec-b5ed-11a563fb8c04' date '18 September 2010' time '11:48:46.03 am' author 'eem' ancestors ((name 'VMMaker-oscog.27' message 'CogVM:Fix bad bug in CompiledMethod>>flushCache/primitiveFlushCacheByMethod.Original code failed to flush the primitive embedded in the machine codemethod, causing it to run the previous primitive.Fix bad bug in the Cogit''s primitiveDoPrimitiveWithArgs.  Because of theway the process primitives "return" (they don''t, they longjmp) thepopRemappableOop wasn''t always executed, causing the remamp bufferto overflow.With these two fixes things like the following now work:	thisContext runSimulated:		[(1 to: 10)			do:[:aClass| (Delay forMilliseconds: 100) wait]			displayingProgress: ''Processing...'']Nuke the unused checking primitive stack interface (shouldPopArgs et al).Nuke unused inst vars.' id '7bc4e8e8-b779-4140-8698-5cde0d003c0f' date '12 September 2010' time '8:47:08.966 am' author 'eem' ancestors ((name 'VMMaker-oscog.26' message 'CogVM:	Work-around compiler bugs for the most negative 64-bit value	in signed64BitIntegerFor: & signed64BitValueOf:		Fix primitiveDoNamedPrimitiveWithArgs for unimplemented	prims.' id '8f0241dd-f8f9-4ae4-a736-bb81484acebf' date '9 August 2010' time '9:37:22.635 pm' author 'eem' ancestors ((name 'VMMaker-oscog.25' message 'CogVM:	simulator labels for PIC disassembly and transcript setters.' id '42e63e35-9e32-452c-8b69-325a901fa3ac' date '18 July 2010' time '6:33:39.508 pm' author 'eem' ancestors ((name 'VMMaker-oscog.24' message 'Reclaim Integer>>hex8 as a VMMaker extension.  NowOSCog tracks trunk hex is base but hex8 is an extension.' id '0d90e593-b232-45e1-bb88-a35f2908fa77' date '17 July 2010' time '6:09:12.283 pm' author 'eem' ancestors ((name 'VMMaker-oscog.23' message 'CogVM: Take alloca from stddef.h.  malloc.h is an anachronism.' id '1a50a139-43f0-421d-bc43-590dd9343bc4' date '15 July 2010' time '8:04:47.457 pm' author 'eem' ancestors ((name 'VMMaker-oscog.22' message 'CogVM:	Safer long-running primitive monitoring (i.e. avoid races	when remapping the longRunningPrimitiveCheckMethod)	Make the interpreter''s include of malloc.h specific to WIN32.' id '3720c759-295d-4183-b86d-651155593f83' date '15 July 2010' time '6:36:24.035 pm' author 'eem' ancestors ((name 'VMMaker-oscog.21' message 'ReentrantFFIPlugin:	Fix struct return, indexing return type spec corrrectly and not	being confused between the struct return size and whether return	is via registers or not.  Backwards-compatibility access	to the ffi error code.Various: use pop:thenPush: in a few places.' id 'f46d3ba4-c310-454b-9be7-30c6341f4486' date '13 July 2010' time '5:41:07.299 pm' author 'eem' ancestors ((name 'VMMaker-oscog.20' message 'CogVM:	New plugin primitive support used by the ReentrantFFIPlugin.	Slang:	Support for generating ancilliaryStructClasses and	outputting preambleCCode in generated pugins	used by the ReentrantFFIPlugin.' id '528a9b5e-293c-4fac-9430-1eabdb0d278d' date '11 July 2010' time '9:01:15.075 am' author 'eem' ancestors ((name 'VMMaker-oscog.19' message 'CogVM:	Fix primitiveObjectPointsTo for multiple of 4 length methods.FFI Plugin:	Add ReentrantFFIPlugin that can replace the existing FFI	(currently only x86) and doesn''t need any assembler	support.  Skeletons for PPC and ARM provided for brave	souls looking for fun work.' id 'e2e1dd83-f427-4df3-a971-aababe804331' date '9 July 2010' time '3:53:09.969 pm' author 'eem' ancestors ((name 'VMMaker-oscog.18' message 'BitBltSImulation:	Juan Vuletich''s fixes for combination rules that need to be	handled as RGBA, not RGB.  Fixes font rendering in 4.1 images.CogVM:	FIx symbolicMethod:''s initial latest continuation (simulator)	CogMethodSurrogate>>isZero for simulation	set-up the quitBlock to close simulation window' id '66fabf9e-52f4-43aa-a0fc-023e1c0e686e' date '3 July 2010' time '7:15:06.701 pm' author 'eem' ancestors ((name 'VMMaker-oscog.17' message 'CogVM:	Fix off-by-one error in assigning inst vars of contexts	via primitiveInstVarAtPut (!!).  Fixes Seaside continuation	tests.	Add printCallStackOfContext:.	Add missing markAndTracePrimTraceLog for stack simulation.	Add evaluation of atEachStepBlock to stack simulator run methods' id 'b0ce2f1b-0e18-48d8-a490-4b8ca8476ec7' date '26 June 2010' time '4:01:09.844 pm' author 'eem' ancestors ((name 'VMMaker-oscog.16' message 'Fix bogus definition of pointerForOop turning up in cogit.c' id 'f8b8c00f-be77-4358-a537-ac5dd4e27747' date '24 June 2010' time '1:18:56.592 pm' author 'eem' ancestors ((name 'VMMaker-oscog.15' message 'CogVM:	Fix horrible bug in trace logs.  In Smalltalk the following isguaranteed to be +ve:	traceLogIndex - 3 \\ TraceBufferSizebut when translated to C:	traceLogIndex - 3 % TraceBufferSizeit can be negative and in the following cause an uncheckedout-of-bounds array access. So	(traceLog at: traceLogIndex - 3 \\ TraceBufferSize) = 0 ifTrue: [^nil].can incorrectly assume the trace log is empty if traceLogIndex haswrapped back to zero.	Remove use of debugging trace log for interpreter primitivessince the fast prim trace log suffices.	Extend leak checking to become.Slang:	Fix expansion of expressions in at: and at:put:.	Refactor generateInterpreterFile and generateCogitFile to	provide buildCodeGeneratorFoInterpreter/Cogit for testing	translations.	Nuke unused class VMMakerWithFileCopying and some	unused methods.' id 'b249221a-e45b-43cd-b2c9-2d27d301d54f' date '24 June 2010' time '11:50:33.542 am' author 'eem' ancestors ((name 'VMMaker-oscog.14' message 'CogVM:  Fix saving frames above interior frame for co-routining in  non-local return.  Remove unnecessary check in B3DAccelleratorPlugin>>stackMatrix:' id 'd50a4520-06c6-490c-8d24-900eff2ef35e' date '23 June 2010' time '12:11:20.782 pm' author 'eem' ancestors ((name 'VMMaker-eem.13' message 'Fix integration snafu, def of CogBytecodeDescriptor is missing stackDelta.' id '0c877df2-55ee-4df4-af59-182dc4ef54b5' date '22 June 2010' time '10:01:14.365 pm' author 'eem' ancestors ((name 'VMMaker-oscog.12' message 'Fix co-routining and cannotReturn: crashes.  Key is to arrangethat when baseFrameReturn returns to a frame in the middleof a stack page the frames above it (which may be in use incoroutining) are preserved, i.e. by movign them to anotherpage.Fix simple blocks with temps.  JIT compiles simple blockswithout a stack frame and so the stack must balance.  TheJTI must strip any leading pushNils that initialize tempsotherwise these will be interpreted as return addressescausing a jump into la la land.Various typos and niceties from mainline Cog.' id 'a34fa6af-c3a0-453e-8450-8525342057ac' date '22 June 2010' time '9:51:54.206 pm' author 'eem' ancestors ((name 'VMMaker-oscog.11' message 'Merge with VMMsaker-eem.586.  Safe printing for theprimitive trace log during GC.' id 'be4a73de-01d1-40ad-b3ff-77d8021a563d' date '5 June 2010' time '4:33:30.604 pm' author 'anon' ancestors ((name 'VMMaker-oscog.10' message 'Fix the simulator GUI.  Use hideScrollBarsIndefinitely vs theolder hideScrollBarIndefinitely.Fix simulator instance creation.' id 'a08ffe0a-7187-4abc-8708-7ee13ea51993' date '5 June 2010' time '4:09:54.322 pm' author 'anon' ancestors ((name 'VMMaker-oscog.9' message 'Merge with VMMaker-eem.584.CogVM:	Fix bug with machine code references to objects in become ops.Make sure the youngReferrers list is pruned in mapObjectReferencesInMachineCodeForXXXGCotherwise youngReferrers can get duplicate entries which screws upremapping of obj refs in machine code during GC.	Mo'' betta asserts around the youngReferrers list and more leak	checking of generated code.	Extend the leak check to the traceLog and fix a bounds	bug there-in.	Make some bounds types in the method zone unsigned and cleanup some comparisons.' id '81fee503-8623-4423-a33b-03d641642608' date '31 May 2010' time '2:48:01.871 pm' author 'eem' ancestors ((name 'VMMaker-oscog.8' message 'Check-in the package under the correct name.' id 'b336429e-652e-4551-8d38-a00ef67eaa61' date '26 May 2010' time '5:52:47.396 pm' author 'eem' ancestors ((name 'VMMaker-eem.580' message 'Merge with VMMaker-eem.576.  Move some SmartSyntaxPlugin VMMaker extensions from Collections and Kernel into the VMMaker package' id '3a4059dc-7b56-4d59-b329-2b6b93cb6a22' date '26 May 2010' time '5:42:59.574 pm' author 'eem' ancestors ((name 'VMMaker-oscog.7' message 'Merge with VMMaker-eem.576.CogVMs:	Implement the unimplemented case in primitiveTerminateTo ofterminating from other than the top frame to a context in the middleof the current stack page.Slang:	Use fixed pitch in formatting comments.' id 'a29b614d-a5a3-4be2-aba0-cf25c0849573' date '24 May 2010' time '3:30:41.141 pm' author 'eem' ancestors ((name 'VMMaker-oscog.6' message 'Slang: fix source comparison of surrogate accessor classes (''foo'' asText ~= ''foo'' asString).' id '56f401ef-95e6-49db-86e2-a16440351b83' date '23 May 2010' time '6:49:36.289 pm' author 'eem' ancestors ((name 'VMMaker-oscog.5' message 'Nuke the threaded VM classes' id '1de0683f-d6c9-431e-8f99-d51bc2f6bbb9' date '23 May 2010' time '3:49:27.924 pm' author 'eem' ancestors ((name 'VMMaker-oscog.4' message 'Bow to the inevitable and make the order of UnsafeAlien and invokeCallback:stack:registers:jmpbuf: in the specialObjectsArray match those in the outside world.' id '11c542bf-9412-4f54-b18f-c02bdd16e7c3' date '22 May 2010' time '3:14:24.042 pm' author 'eem' ancestors ((name 'VMMaker-oscog.3' message 'Delete GIF & PNG reader plugins' id 'b3041ea3-bd92-483d-b2fc-c8935e262205' date '21 May 2010' time '3:38:25.662 pm' author 'eem' ancestors ((name 'VMMaker-oscog.2' message 'Delete GIF & PNG reader plugins' id '95bfcf73-0971-4dae-acf3-ffb7ed39098c' date '21 May 2010' time '3:35:26.34 pm' author 'eem' ancestors ((name 'VMMaker-oscog.1' message 'Initial cut at an open-source Cog VMMaker containing the StackInterpreter and Cogit VMs.' id '223219a8-cb66-4dcd-862d-d647a8c9dad5' date '21 May 2010' time '3:04:19.887 pm' author 'eem' ancestors ((name 'VMMaker-eem.573' message 'Slang:	code generation stability and compatibility with e.g. Squeak4.1.Sort locals in method temp declaration order.Be explicit about string sort order, using case-sensitive sorting.Enumerate methods in sorted ordewr in doBasicInlining:.' id 'b9916283-87c7-44c2-99b7-eeffc2ff0f34' date '21 May 2010' time '2:27:24 pm' author 'eem' ancestors ((name 'VMMaker-eem.572' message 'CogVM:	Make ancilliaryStructClasses initialize ProcessorClass as necessary.KlattSynthesizerPlugin	Merge with dtl''s initialization changes for refactored constant pools' id 'f820c1f5-ff93-478a-88d1-31787d705f27' date '20 May 2010' time '4:31:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.571' message 'Make ObjectMemory prim err table init code cope with a shortspecialObectsArray, and delete space between leading minus and digitds of a negative constant, to get Cog VMMaker to load in Squeak4.1.StackVM: Fix comment in primitiveVMParameter' id '6128e379-a1a4-4672-81ee-fac963731575' date '20 May 2010' time '3:22:17 pm' author 'eem' ancestors ((name 'VMMaker-eem.569' message 'Stack & Cog VM: fix typo in signed64BitValueOf: which makes it functionfor values with digitLength > 7.Adopt the Alien IA32ABI plugin.' id '00138af5-7bf9-402a-be33-b4868ef6140a' date '10 May 2010' time '6:50:59 pm' author 'eem' ancestors ((name 'VMMaker-eem.566' message 'CogVMs: VMMaker side of primitiveClockLogAddresses.  Get prim arg count right.' id '7a6084f0-685f-4601-b3a2-34bb4fa63116' date '10 May 2010' time '12:36:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.565' message 'CogVM: Argh, primitiveFailed != primitiveFail.' id 'b4af9a43-6256-40c3-bf87-7b35af0d2804' date '10 May 2010' time '12:00:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.564' message 'CogVMs: VMMaker side of primitiveClockLogAddresses that generatesinstead of barfing.' id 'ba60f73e-bdf4-435b-b8ef-5d5320316f49' date '10 May 2010' time '11:39:39 am' author 'eem' ancestors ((name 'VMMaker-eem.563' message 'CogVMs: VMMaker side of primitiveClockLogAddresses' id '6fc2b0e3-bc4c-4736-b22d-5627dfdaab56' date '10 May 2010' time '11:36:28 am' author 'eem' ancestors ((name 'VMMaker-ar.557' message 'Coercing float to doubles. Real men do cast!' id '67b26c02-8015-1f45-b488-772156f79414' date '5 May 2010' time '5:16:11 pm' author 'ar' ancestors ((name 'VMMaker-ar.556' message 'Bit-identitcality tweaks. In loops iterating over (pairs of) 32bit floats, always cast the float explicitly to ''double'' to give the C compiler no false idea of ''oh, you''re operating on vectors of single precision floats I don''t need to expand to double precision''. You do, stupid compiler, you do.' id '4bc8b32e-de23-9f43-864b-28c1b44e092e' date '5 May 2010' time '4:37:22 pm' author 'ar' ancestors ((name 'VMMaker-ar.555' message 'Update WebAuthPlugin to include Kerberos service principal name.' id '3b4141a3-9414-0c43-ad84-a0b25d1b092b' date '30 April 2010' time '11:28:02 am' author 'ar' ancestors ((name 'VMMaker-eem.554' message 'CogVM:	turn on prim trace log by default.' id '2df6d048-7c47-4fa1-8da2-af1af869245e' date '28 April 2010' time '3:23:29 pm' author 'eem' ancestors ((name 'VMMaker-qwaq.553' message 'CogVM:	provide a function version of recordPrimTrace for C support code.' id '3cc25748-6a66-444e-b73e-d13048efc3ef' date '28 April 2010' time '2:09:42 pm' author 'qwaq' ancestors ((name 'VMMaker-eem.552' message 'CogVM:	make sure primTraceLog is remapped during GC.  Fix limit	wrapping bug in remapping the vanilla trace log.' id '8d7c6f73-8e29-4733-93f9-8eb15a3d3765' date '28 April 2010' time '1:02 pm' author 'eem' ancestors ((name 'VMMaker-eem.551' message 'CogVM:	fast (inlined) tracing of primitives.	Fixed simulation rot so the simulator ups and runs again' id '382a89f7-656a-4471-babb-c6b04b955a35' date '26 April 2010' time '8:51:39 pm' author 'eem' ancestors ((name 'VMMaker-eem.550' message 'Correct a bug in the implicit yield on preemption changes.  A resumedprocess (be it via primitiveResume or by signalling a semaphore orexiting a critical section) must go to teh back of its run queue.  Onlya preempted process should go to the front of its run queue ifpreemptionYields.' id 'dab672e7-605b-4a02-98b5-22198b6ae71d' date '23 April 2010' time '12:36:56 pm' author 'eem' ancestors ((name 'VMMaker-eem.549' message 'Fix initialization snafu so that yield on preemption flag does getset from the image header.' id 'cc93c400-6c0c-4f26-b4ad-33965cbeeb98' date '22 April 2010' time '5:35:01 pm' author 'eem' ancestors ((name 'VMMaker-eem.548' message 'Provide a persistent flag controlling whether preemption causes aprocess to be put to the back of its run queue, forcing an implicit yield.If set, flag prevents preempting from causing an implicit yield, off bydefault, preserving current VMs semantics (preemption does force animplicit yield).  Flag is bit 2/value 4 of Smalltalk vmParameterAt: 48.' id 'f8ef6a6e-38b7-45b6-933b-cfc8db6d8e16' date '22 April 2010' time '5:07:47 pm' author 'eem' ancestors ((name 'VMMaker-ar.547' message 'Rename NativeAuthPlugin to WebAuthPlugin for more clarity about what it applies to.' id 'f98fdb86-ba25-7141-b928-6c189049be77' date '26 March 2010' time '6:01:11 pm' author 'ar' ancestors ((name 'VMMaker-eem.546' message 'CogVM: fix snafu in printOnTrace' id '68e140ab-4409-4e56-b809-549baf70e3a9' date '26 March 2010' time '1:17:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.544' message 'CogVM:	add tracing of interpreter primitives.Stack VM:	safer activation printingPlugins:	Add support code so that threaded FFI plugins translate correctly' id '5029f9d9-90ce-42b3-8246-da56ff0e6b42' date '26 March 2010' time '11:26:29 am' author 'eem' ancestors ((name 'VMMaker-eem.543' message 'FFIPlugin: merge with current state of threaded FFI plugin on Oinq' id '36b419e9-ddf4-4469-8b0c-5032f1a480b2' date '25 March 2010' time '8:00:54 pm' author 'eem' ancestors ((name 'VMMaker-jcg.541' message 'SoundPlugin.  Fix bug in #primitiveSoundEnableAEC:, and add new #primitiveSoundSupportsAEC to test whether the OS/hardware supports echo-cancellation.' id '1ad887ce-ed9d-e645-aafd-abfdfcfc6b2f' date '24 March 2010' time '5:44:16 pm' author 'jcg' ancestors ((name 'VMMaker-jcg.540' message 'New SoundPlugin primitive to enable/disable echo-cancellation: primitiveSoundEnableAEC().' id '055e93ba-d9ca-9e4d-93e8-afc91a6d1df8' date '24 March 2010' time '2:26:56 pm' author 'jcg' ancestors ((name 'VMMaker-ar.539' message 'Initial checkin for NativeAuthPlugin to support NTLM and Negotiate auth on Windows clients.' id 'd0312b04-9f36-fc44-b009-36a1339543aa' date '23 March 2010' time '6:44:39 pm' author 'ar' ancestors ((name 'VMMaker-jcg.538' message 'Revert "bug-fix" from -jcg.536.  The change that we made was actually already being done by the platform-specific code.' id 'a525081c-ed3a-4dc8-8bea-e0c8c9bcd67d' date '23 March 2010' time '3:16:31 pm' author 'jcg' ancestors ((name 'VMMaker-jcg.537' message 'Remove SoundPlugin>>primitiveSoundSetRecordBufferFrameCount:.  It''s not longer called from Squeak, and the support code has been removed from SVN.' id '6ce03a23-878a-4042-b594-704e56ccec87' date '22 March 2010' time '5:41:02 pm' author 'jcg' ancestors ((name 'VMMaker-jcg.536' message 'Fix an ancient SoundPlugin bug that can result in a buffer-overflow.' id '0d3db5d3-4d9f-c745-8ab8-e4afd0c1e331' date '22 March 2010' time '5:27:12 pm' author 'jcg' ancestors ((name 'VMMaker-eem.535' message 'CogVM:	integrate missing CoInterpreter>>methodReturnValue:.  Move	isYoung: up where it belongs.  Add a debug utility (clearTraceLog).' id '0420a353-80ac-43e1-ad73-6b0888d21c8b' date '17 March 2010' time '2:28:29 pm' author 'eem' ancestors ((name 'VMMaker-eem.534' message 'VMMaker:	add a doit that takes the platform dir as an arg to avoid an error' id 'fdda7205-8dc4-4e36-802b-ea290feb7560' date '10 March 2010' time '7:35:58 pm' author 'eem' ancestors ((name 'VMMaker-eem.533' message 'VMMaker:	Update Andreas'' doit to use the platform ''Cross''' id '49da5067-9650-4cf0-823f-bf114406d38f' date '10 March 2010' time '7:27:14 pm' author 'eem' ancestors ((name 'VMMaker-ar.532' message 'Remove the inline definition of void error(char*) from interp.c -- it is now a responsibility of the support code to provide a proper implementation.' id 'c0ac95d7-57ed-114e-8b30-762da0a9ee8f' date '10 March 2010' time '2:53:37 pm' author 'ar' ancestors ((name 'VMMaker-eem.531' message 'Stack & Cog VMs:	Fix primitiveFindNextUnwindContext/findNextUnwindContextUpTo:so that if called with nil as its argument it doesn''t die horribly tryng topick apart the context nil isn''t.' id '4939a66c-d355-4ab8-afae-84fe980487a1' date '9 March 2010' time '7:22:08 pm' author 'eem' ancestors ((name 'VMMaker-ar.530' message '- Change endPCOfMethod: not to rely on the trailer implementation- Add a doit allowing to generate source code programmatically' id '3fe70d21-7c92-9c4f-ba85-9d29f54b4bcb' date '8 March 2010' time '2:40:35 pm' author 'ar' ancestors ((name 'VMMaker-eem.529' message 'StackInterpreter & CoInterpreter:	primitiveContextSize needs to write back the head frame pointersto be able to find the stack pointer of a frame on the active page.' id '784f5163-06ea-4e67-b7ff-9604209cec92' date '3 March 2010' time '1:37:45 pm' author 'eem' ancestors ((name 'VMMaker-eem.528' message 'CogVM:	Fixes for coroutines (incomplete, but these fix the seg faults)' id '0d017a4c-f217-4ecc-ace6-4def5513e089' date '1 March 2010' time '11:01:38 am' author 'eem' ancestors ((name 'VMMaker-eem.527' message 'Stack VM:	support for a max external semaphore table size (vm parameter 49)	to allow the VM to pre-allocate space for lock-free signalling.	ioSynchronousCheckForEvents hook to allow the VM to provide a	synchronous ticker.' id 'b3d697ec-4a77-4f1f-956b-b9bc5fd9bf75' date '4 February 2010' time '4:01:14 pm' author 'eem' ancestors ((name 'VMMaker-eem.526' message 'CogVM:	Fix asserts in ceBaseFrameReturn:' id '39bf94f3-5c24-477f-8dfd-c28af9db9b51' date '2 February 2010' time '6:26:17 pm' author 'eem' ancestors ((name 'VMMaker-eem.525' message 'Stack & Cog VMs:	Add an assert to markAndTrace to ensure argument is sane.Crashes on linux client indicate markAndTraceStackPage can pass inbogis (apparently stack) addresses.' id 'e237da7e-ac49-4fe6-9d3b-ddcb95d667e6' date '2 February 2010' time '3:36:33 pm' author 'eem' ancestors ((name 'VMMaker-eem.524' message 'VMMaker:	changes for the single src tree CrossPlatformVMMaker.	make save/load include the Interpreter class name. ' id '9b748596-0986-4ca7-ac5b-b7a050a08431' date '15 January 2010' time '6:15:10 pm' author 'eem' ancestors ((name 'VMMaker-eem.522' message 'Stack & Cog VMs:	routines to access cogCodeBase & write back exception stack	pointers for backtracing Cog code.	Made primitiveVoidReceiver compile.	Nuked pair of obsolete versions of renamed routines.' id 'e6179577-4343-49f8-85eb-0f225917de04' date '10 January 2010' time '6:15:36 pm' author 'eem' ancestors ((name 'VMMaker-eem.521' message 'Add a couple of primitives to cradsh the VM for testing back traces.' id '87c91111-5af9-49e6-bbfc-1208fdf1b7af' date '9 January 2010' time '8:39:25 pm' author 'eem' ancestors ((name 'VMMaker-eem.520' message 'CogVM:	fix primitiveProfileSemaphore so profileSemaphore is assigned insetting to nil case.' id 'e0ff2219-db76-4ad6-9225-0e87a7e1c96e' date '19 December 2009' time '11:14:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.518' message 'Add primitiveHeartbeatFrequency to allow monitoring of the heartbeat.' id '8f71e93d-97b2-4632-9140-64ba15b37e3e' date '14 December 2009' time '10:42:13 am' author 'eem' ancestors ((name 'VMMaker-eem.516' message 'Stack & Cog VMs:	add time spent in GC to long-running primitive result.  Derived	from Oinq VMMaker-eem.515' id '1347c907-3c6d-461a-954f-e790880b9434' date '10 December 2009' time '3:01:55 pm' author 'eem' ancestors ((name 'VMMaker-eem.512' message 'CogVM:	avoid crashes due to arbitrary bytes appended to CompiledMethods	by the image (e.g. for source pointers or encoded temporary names).	Cogit scanMethod now finds the end of a method by finding the last	return bytecode, using forward branches to track reachable	continuations.' id '42a80b86-f8fd-482d-bab9-3aa8ced89b28' date '27 November 2009' time '2:56:56 pm' author 'eem' ancestors ((name 'VMMaker-eem.510' message 'Stack & Cog VMs	fix bounds check of errorCode in primitive error table.' id '39a434f4-26e9-48d8-b749-61e2c4e7818a' date '23 November 2009' time '9:31:47 pm' author 'eem' ancestors ((name 'VMMaker-eem.504' message 'Stack & Cog VMs:	get sense of assert right in sweepPhaseForFullGC.Cog VM:	send freeMethod to the right receiver in simulation (methodZone	not cogit)' id '05baf7a1-04cc-4263-8aa6-c207243b441f' date '12 November 2009' time '11:18:11 am' author 'eem' ancestors ((name 'VMMaker-qwaq.503' message 'Stack & Cog VMs:	undo the poorly thought-through modification to sweepPhase	for incrementalGC.  Use the modification for fullGC.  i.e. revert	sweepPhase and move the new version to sweepPhaseForFullGC.' id 'a6e56999-8fb2-4cad-9d31-565f950ef422' date '9 November 2009' time '1:36:43 pm' author 'qwaq' ancestors ((name 'VMMaker-eem.502' message 'CogVM:	fix bad bug in inline cache miss handling where a closed PIC is	created and the PIC reentered to dispatch.  Old code forgot to	reload ClassReg.  Compiling with the Intel 11.x compiler on Mac	uncovered this bug.CogVM/StackVM:	fix long-running primitive check	a) to not break primitivePropertyFlags: and hence no longer	    break callbacks	b) to avoid false positives	c) to answer milliseconds in the primitive instead of heartbeats	Fix hole in primitiveChangeClass/adoptInstance that didn''t check	indexable pointer objects correctly.Simulators:	bring logOf{Bytes,Sends}{Write,Verify}:  up to date.	use transcript inst var so openAsMorph works' id '1a7ee12c-ef8b-4631-ba33-515fcfc4bf25' date '23 October 2009' time '3:57:40 pm' author 'eem' ancestors ((name 'VMMaker-eem.500' message 'Stack & Cog VMs:	Eliminate unnecessary counting activity in sweepPhase, and always	set compStart to the lowest free chunk found in sweepPhase''s scan.	Comment typoes (mention freeBlock, should mention freeStart)Cog MT VM:	cedeToHigherPriorityThreads must set the current thread''s	priority to avoid highestPriorityThreadIfHigherThan: finding	the current thread.Cog VM:	fix off by one error in simulator''s idea of where the	methodCache sits in memory.' id 'c802278f-071f-432a-aefa-303c757a365b' date '6 October 2009' time '3:26:19 pm' author 'eem' ancestors ((name 'VMMaker-eem.499' message 'CogMTVM:	added fullGC lock quick hack for preventing full GC during	threaded prims.	Write the DisownVMLockOutFullGC flag to interp.cFile Plugin:	do a fullGC in primitiveFileStdioHandles to ensure stdio handles	are old and hence enable use of DisownVMLockOutFullGC in	sqFilePluginBasicPrims.cStack VM:	write prim err code defines to interp.cSlang:	support addressOf: operator to eliminate a few cCode:''s.' id 'e127ba8c-99e1-499b-b780-bb810d5e4466' date '5 October 2009' time '3:41:40 pm' author 'eem' ancestors ((name 'VMMaker-eem.498' message 'Cog MT VM	Make reenterInterpreter part of the per-thread state that is	swapped on thread VM ownership change.' id '32f80ffd-d1d3-4ef6-8a16-c43576a1e23c' date '2 October 2009' time '4:49:56 pm' author 'eem' ancestors ((name 'VMMaker-eem.497' message 'Cog MT VM:	fix stupid bugs in highestPriorityThreadIfHigherThan:' id 'e394f42e-a052-464d-8562-d16e2fa24203' date '2 October 2009' time '3:27:20 pm' author 'eem' ancestors ((name 'VMMaker-eem.496' message 'Cog MT VM:	Implement getVMThread for signalSemaphoreWithIndex:.Cog VM	Beef up the assertValidExecutionPointe:r:s:imbar: assertSlang:	translate cascades correctly.	Don''t generate plugins.ext or plugins.int if they haven''t changed	to avoid linux builds rerunning configure on every source gen' id 'acef30dc-e397-433c-9899-399516cdba29' date '2 October 2009' time '3:04:23 pm' author 'eem' ancestors ((name 'VMMaker-eem.495' message 'Cog MT VM:	use void * for stack pointer types for easier C debugging	include cointerprmt.h instead of cointerp.h.	thread-safe simulation of stack pointer cut=back on longjmp' id '2dfc8879-4f5a-4006-b374-951893231e05' date '1 October 2009' time '4:44:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.494' message 'Cog MT VM:	use void * for stack pointer types for easier C debugging	include cointerprmt.h instead of cointerp.h.	thread-safe simulation of stack pointer cut=back on longjmp' id '7c18b44e-dad0-445a-b379-c8f31893824d' date '1 October 2009' time '4:39:44 pm' author 'eem' ancestors ((name 'VMMaker-eem.493' message 'Cog MT VM:	more careful management of per-thread register state in	Cogit>>simulateLeafCallOf: means stack is not overwritten	when tryLockVMOwner and unlockVMOwner are invoked from	other than the current VM thread.	Simulation of the stdin listener example is now reliable.' id '414e346b-37db-4c2f-81e4-2b8bf36d8588' date '1 October 2009' time '10:09:40 am' author 'eem' ancestors ((name 'VMMaker-eem.492' message 'Stack & Cog VMs	add primitiveUpdateTimezone.	print process priority in printAllStacks et al.Cog MT VM:	Put activeProcess to sleep when ceding to other threads (!!).	implement correct simulation of ceCaptureCStackPointers &	add asserts for checking a thread''s C stack pts are valid.	fix simulation of leaf calls (used for try-lock/unlock) so they	don''t crash the Bochs plugin by attempting to execute an	out-of-bounds instruction.	Move save of CStackPointer/CFramePointer from disownVM to	preemptDisowningThread.	simulate cutting back processor stack pointers on longjmp	back to enterSmalltalkExecutive, and avoid C stack growth.	comment typosCog VM:	Fix package loading snafu with RootBit & RootBitDigitLengthSlang:	Don''t inline cmacro: methods.' id 'd099b65e-331c-41db-83f9-366a7251cf55' date '30 September 2009' time '3:48:19 pm' author 'eem' ancestors ((name 'VMMaker-eem.491' message 'Merge of Oinq with Homebase.Add the threaded stdio example, which works sporadically.Stragglers for the varous separate commits recently.' id 'c8b46551-7038-43e8-8904-35dbfb285752' date '25 September 2009' time '5:00:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.485' message 'Cog MT VM:	remember to write back head frame pointers to page when	ceding to other threads.  As a result, the input example runs	sporadically in the simulator.	dropping some debug printing/halts.Cog VM:	bounds-check stack accesses in the simulator.' id '845c33f2-b71b-4422-bc16-0923967b58b9' date '22 September 2009' time '5:22:06 pm' author 'eem' ancestors ((name 'VMMaker-eem.484' message 'Cog MT VM:	refactor cedeToHigherPriorityThreads so that the instrucitonPointer	is saved before giving up the VM.	Initialize the C stack pointers per-thread correctly in the simulator.	(This code is clumsy!)Cog VM:	Better instruction pointer printing in frame printing' id '85c0e644-8314-445c-94d3-c79366b1a1c6' date '22 September 2009' time '4:08:38 pm' author 'eem' ancestors ((name 'VMMaker-eem.483' message 'Cog MT VM:	Share the processor alien between threads.  Piggy-back off	CogThreadManager''s thread-local storage to save the register	state for each process.  Ensure state is current on entering or	returning to code simulation ceEnterCogCodePopReceiverReg	& handleCallOrJumpSimulationTrap: around simulateCogCodeAt:	allocate 4k chunks of stack per threasd (no asserts to check if	in correct segment yet).' id 'ba5e94be-fc01-4656-84a8-ea93f4f14d03' date '18 September 2009' time '3:36:15 pm' author 'eem' ancestors ((name 'VMMaker-eem.482' message 'CogVM:	Use >= numSmallIntegerBits instead of > numSmallIntegerBits - 1	in machine code bitShift: primitive.CogMTVM:	don''t push instructionPointer around preemptDisowningThread/ownVM,	and instead save it in the CogVMThread.' id '57b4950c-7eff-4d71-add0-831255960306' date '18 September 2009' time '11:16:25 am' author 'eem' ancestors ((name 'VMMaker-eem.481' message 'Cog MT VM	cedeToHigherPriorityThreads updates activeProcess & stackPage	with the state of the top context before searching for a higher	priority thread, and ceeding if found.	preemptDisowningThread pushes the instructionPointer and	updates stackPage''s pointers to refer to the top frame.	threadSchedulingLoop remembers to store the newly awoken	highest-priority process in the scheduler''s activeProcess slot.	if preempted, ownVM: pops instructionPointer after	externalSetStackPageAndPointersForSuspendedContextOfProcess:	so matching the push in preemptDisowningThread.	N.B.  All callers of externalSetStackPageAndPointersForSuspendedContextOfProcess:	pop the instructionPointer immediately after so this must be refactored.' id '25e14357-0a9e-475b-8c3f-e5ae9afbc133' date '17 September 2009' time '5:51:37 pm' author 'eem' ancestors ((name 'VMMaker-eem.479' message 'CogVM:	fix bug in machine code SmallInteger>>bitShift: prim that	computes -1 bitShift: 31 as 0 (!!)	collect profile sampel on primitive failure side of	cePrimReturnEnterCogCode trampoline as well as success,	since now profiler collects samples before calling the primitive,	a sample collected afterwardfs is still in the primitive, even	though it failed.  For example, BochsIA32Plugin runs code until	an execution error, so can have done substantial work before	failing.	Fixed bug in mapStackPages where top frame''s saved ip may	not be set, which is fine because instructionPointer is updated.BalloonEngineSimulation	speed up simulator by remembering previous BitBltSimulator	instead of creating a new one on each copyBits.' id '70c50a8f-4009-4767-a08a-42d65902d27d' date '17 September 2009' time '1:06:51 pm' author 'eem' ancestors ((name 'VMMaker-eem.478' message 'Cog & Stack VMs:	don''t use == when comparing stack pages because in the JIT	stack pages are surrogates for pages in memory, so using ==	is wrong.	Don''t use == for comparing objects or frame and stack	pointers as these could conceivably be large integers.' id '139cc060-b62d-4100-96f4-5d2099b6fde4' date '17 September 2009' time '9:53:14 am' author 'eem' ancestors ((name 'VMMaker-eem.477' message 'Cog MT VM	implement simulation of the stdio handles for debugging MTFFI	in the simulator	Add an assert to mapStackPages that tracks a bug caused by	using == to compare stack pages instead of =.	Implement primitiveRelinquishProcessor and make it	force an interrupt check.  Make ioRelinquishProcessorForMicroseconds:	reverse the top-left of the display when simulating.	Add CFramePointer save/restore to CogVMThreads	Add event peeking to stackLimitFromMachineCode to get	input working.Stack & Cog VMs:	fix simulator''s smashing of stackLimit to (char*)-1.  It needs to	be unsigned to be greater than any possible stack pointer.	Fix some self longAt:''s that should be stackPages longAt:''s.Slang:	allow cCode:inSmalltalk: to take a block as its first argument.' id '3d42252e-54f4-4899-b2aa-123a667c4e95' date '17 September 2009' time '9:37:47 am' author 'eem' ancestors ((name 'VMMaker-eem.476' message 'CogVM:	Make QSystemProfiler profile code conditional based on whether	the profile semaphore has been installed or not (i.e. throw	away and lazily recompile code when switching profiling on or off).	Speed up simulator by not printing addresses in	handleCallOrJumpSimulationTrap:Stack VM:	stop space leak by having primitiveProfileSemaphore nil	profileMethod and profileProcess.' id 'b140afd5-aff1-45fb-a4bf-b69306ffb96a' date '14 September 2009' time '7:58:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.475' message 'CogVM:	handle the dreaded SmallInteger minVal / -1 overflow case in	SmallInteger / // & quo: machine code prims' id 'bdd624ab-6429-4a63-96cf-282fdb8387ea' date '14 September 2009' time '10:06:42 am' author 'eem' ancestors ((name 'VMMaker-eem.474' message 'Merge with VMMaker-eem.472.CogVM:	Added machine code primitives for / // quo: & \\.	Changed interp.h so that MT & vanilla sources can be generated	and compiled in same vm tree.Stack & Cog VMs:	Made GC and code flush timings use microseconds internally.	Slight speed up & simulator fix for signed64BitValueOf:	printStringOf: prints hex for integers and byte arrays.' id 'f05eebea-acd8-4158-9228-0bfb304f8e83' date '13 September 2009' time '1:50:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.473' message 'CogVM:	machine code store check must use unsigned comparisons for	both comparisons, bozo.' id 'b3b03aff-44f5-4f4f-a0e2-abad87b4e32c' date '2 September 2009' time '6:18:15 pm' author 'eem' ancestors ((name 'VMMaker-eem.471' message 'CogVM:	fix signed comparison bug in generated store check.  Must use	unsigned comparisons in both comparisons, not just one (!!).	Fixed warning in genPrimitiveIdentityHashStack & Cog VMs:	Added primitiveOriginalMillisecondClock' id '1c3a9b6d-395c-4aae-b63e-ff4c05c6665f' date '2 September 2009' time '5:44:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.469' message 'CogVM:	Add machine code primitiveIdentityhash	Add heartbeat count to info collected by long-running primitive	check.	conditionalize threaded support trampolines so the non-threaded	Cog VM still builds.All VMs:	Use defined HashBitsOffset HashBits symbolic constants	instead of bare integers.Slang:	Parameterise comment writing with BitstreamVersSans so that	method comments are not refrmatted when using a different	system text style.' id '04b4787a-10c4-4a5d-ac37-cef2c433cb49' date '1 September 2009' time '10:17:49 am' author 'eem' ancestors ((name 'VMMaker-eem.468' message 'Merge with VMMaker-eem.467CogVM:	functional long-running primitive check.' id '3fbbff8d-ae94-4cf7-bb12-d92f407f2a11' date '28 August 2009' time '3:48:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.462' message 'CogVM:	Fix bug in clearCogCompiledCode; must void youngReferrers.Cog & Stack VMs	Replace 30-bit millisecond clock with 64bit microsecond clock.	Primitives to signal at UTC microseconds, get UTC & local	microseconds.	Add a primitive to void VM state (#214)	broken support for long-running primitives	drop get/setNextWakeupTick[:] and replaced with	get/setNextWakeupUsecs[:].	nuked unused iolowResMSecs' id '32154d35-1ac2-4852-9741-77e5a55a10ba' date '26 August 2009' time '4:16:13 pm' author 'eem' ancestors ((name 'VMMaker-eem.461' message 'CogVM:	provided a parameter to control sizse of methods compiled to	machine code.  Changed default size to 60 literals or less.	Added flagging of interpreted methods via bit 2 (4) of	vmParameterAt: 48.  VM sets flag bit of a method''s header if	flagging in effect.	Fixed bug in setImageHeaderFlagsFrom: to avoid setting	processHasThreadId incorrectly.' id '4744a22e-dcee-4d94-b7e8-f3585a82158b' date '20 August 2009' time '11:09:17 am' author 'eem' ancestors ((name 'VMMaker-eem.460' message 'CogVM:	threadSchedulingLoop: must pop the instructionPointer a la	transferTo:[from:].' id '3597bced-851e-4193-bc2b-ba9d0a503533' date '18 August 2009' time '5:22:45 pm' author 'eem' ancestors ((name 'VMMaker-eem.459' message 'StackVM:	inline temporary:in: for faster marryFrame:SP:CogVM:	implement missing storeAndPopTemporaryVariableBytecode	to use itemporary:in:put: instead of temporary:in:put:.	Restore missing currentVMThread.	Fix bugs in GC simulation (newMethodOrNull: is nil, not 0, when	undefined).	CogVMThread>>new should be initialize (doh!)' id '39c05365-ad05-420e-8b1d-5be8300b644f' date '18 August 2009' time '4:35:24 pm' author 'eem' ancestors ((name 'VMMaker-eem.458' message 'restored GeniePlugin with DTL''s fix to eliminate extra temps' id '4737c835-4bf8-4a5d-87ce-5bfce805949e' date '18 August 2009' time '2:36:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.457' message 'CogVM:	deferred all the process manipulation (setting myList to the	ProcessInExternalCodeTag, marrying frame and saving	context in process) to preemption time.	Added disowningVMThread to remember the disowning	thread that may be preempted.StackVM:	Refactored transferTo: extracting code to make new active	context executable to externalSetStackPageAndPointersForSuspendedContextOfProcess:	Fixed a couple of bugs in the simulator.  On the Cog VM the	StackVM simulates faster than at a crawl.All VMs:	Store nil in myList of new active process in transferTo:[from:]' id '9b27278c-06a6-4be6-8359-a7a743b77e99' date '18 August 2009' time '1:19:14 pm' author 'eem' ancestors ((name 'VMMaker-eem.456' message 'CogVM:	Thread management starting to work.  Can do 3+4=7 through	listener making read calls on stdin without blocking the image.		Added point to switch threads in the midde of transferTo:from:		that is stubbed out in CoInterpreter but longjmps back to		the threadShedulingLoop in CoInterpreterMT.		CogVMThread keeps a stack of "awolProcesses" that are		in external code.		Use of an OSSemaphore is now of that in a CogVMThread		rather than a copy to a local variable (doh!).		ExecutingExternalCodeFlag bites the dust. It can''t fly.		Refactored to get rid of optionallyStartThreadSubsystem.	Fixed assert in activateInterpreterMethodFromMachineCode	that would complain if a methods primitive is not implemented	by the VM (e.g. next & nextPut:).Stack & Cog VM:	Print process oop when printing all stacks.Slang:	Don''t complain about <doNotGenerate> methods being already	defined; they''re going to be filtered out anyway.' id '80401821-35c1-4f89-9b47-4723b4f91d2b' date '17 August 2009' time '3:06:55 pm' author 'eem' ancestors ((name 'VMMaker-eem.455' message 'CogVM:	Thread management starting to work.  Can do 3+4=7 through	listener making read calls on stdin without blocking the image.		Added point to switch threads in the midde of transferTo:from:		that is stubbed out in CoInterpreter but longjmps back to		the threadShedulingLoop in CoInterpreterMT.		CogVMThread keeps a stack of "awolProcesses" that are		in external code.		Use of an OSSemaphore is now of that in a CogVMThread		rather than a copy to a local variable (doh!).		ExecutingExternalCodeFlag bites the dust. It can''t fly.		Refactored to get rid of optionallyStartThreadSubsystem.	Fixed assert in activateInterpreterMethodFromMachineCode	that would complain if a methods primitive is not implemented	by the VM (e.g. next & nextPut:).Stack & Cog VM:	Print process oop when printing all stacks.Slang:	Don''t complain about <doNotGenerate> methods being already	defined; they''re going to be filtered out anyway.' id '585d08b5-fa0e-4db4-ac61-014453e1d67c' date '17 August 2009' time '3:05:57 pm' author 'eem' ancestors ((name 'VMMaker-eem.454' message 'CogVM:	restructured simulation and initialization so threaded VM can	invoke threadSchedulingLoop:startingVM: on start-up.VMMaker	Add "settersReturnValue ^true" to VMStructType class.' id '3cdf2d4b-1b4d-4db2-abdb-6f1190431f0f' date '12 August 2009' time '4:45:19 pm' author 'eem' ancestors ((name 'VMMaker-eem.453' message 'Stack & Cog VMs:	add and use activeProcess throguhout process prims etc.	fix "reciever" to "receiver" in commentsCog MT VM:	Flesh-out thread scheduler.  First cut of ownVM/disownVM	(invalid because process scheduling issues have yet to be	thought-through, but still good progress here).  Discard bogus	ProcessesExecutingExternalCodeList scheme (a runnable proc	can happily live on the runnable processes list, so can''t move	to ProcessesExecutingExternalCodeList). See class	comment of CogThreadManager.	Make threads array hold pointers to CogVMThreads instead of	be composed of them.  Hence growing list no longer affects	holders of CogVMThreads in the array.	Use XCHG instead of CMPXCHG for low-level lock.	Hang CogVMSimulator off CoInterpreterMT and implement	a perform:withArguments:inSuperclass: based switch to elide	CoInterpreterMT methods when simulating CoInterpreter.	See CogVMSimulator>>optionallyStartThreadSubsystemCog VM:	Move removal of Cogit & CogMethodZone simulation variables	to declareCVars: where they belong.	Speedup simulation by deferring printing addresses until	report time.	Fix CoInterpreter class>>exportAPISelectors to work in a	subclass (CoInterpreterMT).FFI Plugin:	nuked ffiArgClass; it isn''t used.Threaded FFI Plugin:	Work in progress.  Clone of FFIPlugin. Uses disownVM/ownVM	in right places.  Still needs to be made reentrant by using	alloca to hold all per-call state (see	http://lists.squeakfoundation.org/pipermail/vm-dev/2009-August/002889.html)' id 'f94c18b0-5be9-4b00-a412-74a2d9aec2ee' date '7 August 2009' time '3:57:42 pm' author 'eem' ancestors ((name 'VMMaker-eem.449' message 'All VMs:	made HeaderTypeExtraBytes a class var defined once only	refactored exportAPISelectors to make overriding easier	deleted ClassTranslatedMethodCogVM:	added first cut of multi-threaded VM with changes coralled	in CoInterpreterMT and its support classes CogVMThread	and CogThreadManager.  See CogThreadManager''s class	comment for design doc.	needs updated source tree (checkin to follow)' id 'ff1abdd7-bd16-41a8-9898-582d8d196788' date '17 July 2009' time '9:18:56 pm' author 'eem' ancestors ((name 'VMMaker-eem.448' message 'All VMs:	fix stack offset bugs in zero-arg primitives in File Security	and Socket plugins.CogVM:	fix bug in failing to round up size of a PIC.  Added concomitant	asserts.	improve x86 code quality by using ModRegInd instead of	ModRegRegDisp8 with a 0 displacement byte (which threw	up PIC size bug).	Added CMPXCHG & LOCK instructions for compare-and-swap	for threaded VM, and used to implement ceTryLockVMOwner.	fixed bug in lookupAddress: for disassembly.	fixed some cCoerceSimple:''s for simulation & commented the	ones that shouldn''t be fixed.	Added initial CogthreadManager with design doc in class	comment.	Fixed simulation bug in	rewriteMethodCacheEntryForExternalPrimitiveToFunction:.	fixed typoes & nuked unused accessor' id '1c4b43cf-9e70-4d5c-8a12-2a45d601f9bb' date '10 July 2009' time '2:13:04 pm' author 'eem' ancestors ((name 'VMMaker-eem.447' message 'CogVM:	fix Python callback crash.  callbackEnter needs to deal with the	case where the call-out frame is flushed to the heap and is	faulted back in.  In this case instructionPointer won''t be set	to ceReturnToInterpreterPC, nor its value saved in the frame.	So callbackEnter must check and if necessary make it so.' id '51afeb48-7c83-400e-98df-a7f85e7a91b6' date '7 July 2009' time '8:49:29 pm' author 'eem' ancestors ((name 'VMMaker-eem.446' message 'CogVM:	~10% faster Compiler recompileAll by checking if a cog	method has the selector to be flushed before making a pass	over machine code to unlink it.		Time millisecondsToRun: [Compiler recompileAll]		149277 - 158512 / 1585.12 -5.82605733319875		146565 - 168610 / 1686.10 -13.07455073839037' id 'fa2057d1-8681-40eb-9eec-d61abb25a868' date '27 June 2009' time '11:39:44 am' author 'eem' ancestors ((name 'VMMaker-eem.445' message 'CogVM:	Removed restriction on compiling methods that contain new	literals, and on linking to methods when a receiver''s class is	new, or when a selector is new.	Fixed bugs in machien code traversal (during GC & during	unlinking) where previosly freed machine code methods would	be traversed if valid.	Fixed bugs where freed methods and/or PICs would not be	removed from the youngReferrers and/or open PICs lists.	typoes (referers => referrers).Slang:	provide doNotGenerate: pragma for eliding varables (e.g.	because they''re only used for simulation).VMMaker:	log a timestamp to the VMMaker transcript so one can tell	when the sources were last generated.' id '7fbfd87d-61cd-40f7-b91d-3a26f39b0f98' date '26 June 2009' time '3:45:44 pm' author 'eem' ancestors ((name 'VMMaker-eem.444' message 'CogVM:	correct fix in VMMaker-eem.436.  The map enumeration code	needs a flag so that it only elides the skip to the next bytecode	the first time it needs to and not every time.  Fixes symptom	where a context for a method that starts with bytecode 132	has bogus pcs, showing it always at the first bytecode.	less warnings.' id 'b0159ed6-e631-468e-9fe8-9cf167cbe8af' date '25 June 2009' time '1:51:48 pm' author 'eem' ancestors ((name 'VMMaker-eem.443' message 'Stack & Cog VMs:	catch attempts to return to terminated contexts (pc = nil) as	cannotReturns.	renamed baseReturn to baseFrameReturn to match ceBaseFrameReturn.	comment typoe.CogVM:	Keep contexts that can''t return in a can''t return state so that	e.g. proceeding causes a resend of cannotReturn: (until we	provide e.g. a cannotResume selector).  At least this works for	both returns other than ^-return in a block.	less warnings' id 'aacc8282-57a3-4f3b-99dd-aa01ff815ca2' date '24 June 2009' time '4:13:33 pm' author 'eem' ancestors ((name 'VMMaker-eem.442' message 'CogVM:	need to void the openPICList when clearing compiled code.  if	not the system crashes soon after a save.' id '94ba7dcb-9822-4a41-8d61-838b99fd0886' date '24 June 2009' time '11:40:47 am' author 'eem' ancestors ((name 'VMMaker-eem.441' message 'CogVM:	keep open PICs on a list so they can be shared.  Link a	newly polymorphic send site to an open PIC if one exists	with the same selector.  Stats show such sites are on their	way to becomming megamorphic anyway and this saves	lots of interim closed PIC updatets.	fewer warnings.' id '2e722d03-ed81-44b8-8df7-2697919b19a2' date '22 June 2009' time '7:38:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.440' message 'CogVM:	revive simulator after recent primitiveExternalCall changes.	add some cog method printing & collecting conveniences' id '00447bdc-02e4-4631-998f-0da8ea00a2bb' date '22 June 2009' time '10:41:24 am' author 'eem' ancestors ((name 'VMMaker-eem.439' message 'CogVM:	Fix bug where recompile all causes mustBeBoolean for	result of Quaternion>>#= in Dictionary>>scanFor:.	Bug was a copy-paste error in functionForPrimitiveExternalCall:	that used the global newMethod in place of the arg methodObj.	Changed primitiveExternalCall machine code cacheing to	substitute primitiveFail instead of primitiveExternalCall when	voiding the cached function.	Split the externalPrimCallOffsets table into two, adding	externalPrimJumpOffsets.  Only the latter is used but the split	is correct.' id '9b267085-8fba-45f7-90c6-e34180f3ea6a' date '21 June 2009' time '3:18:47 pm' author 'eem' ancestors ((name 'VMMaker-eem.438' message 'CogVM:	Fixed BalloonEngine>>primFlushNeeded: bogus failure bug.  The fix	is to primitiveExternalCall''s cache entry rewriting logic that no longer	depends on lkupClass & messageSelector, but instead on the new	lastMethodCacheProbeWrite, set by addNewMethodToCache:.  If	newMethod is at lastMethodCacheProbeWrite + MethodCacheMethod	then the cache entry can safely be rewritten.	Less warnings by using CogBlockMethod * more in places that used	CogMethod * previously, & by typing arg in checkOopIntegrity:....	First support for threads.  VM gets a processHasThreadId flag that	states that Process''s 4th inst var (after myList) is a threadId slot.Stack & Cog VM:	cleaned up primitiveVMParameter by making the various getCogFoo	methods answer SmallIntegers.	Added some error codes used in primitiveExternalCall;		PrimErrBadMethod & PrimErrNamedInternalStackVM:	use inner/convenience ioLoadFunction:From: in place of outer/mouthful	ioLoadExternalFunction:OfLength:FromModule:OfLength:Slang:	comment typoe' id '70e25f3e-e644-468a-b462-a8c6d1606aa9' date '20 June 2009' time '12:18:04 pm' author 'eem' ancestors ((name 'VMMaker-eem.437' message 'CogVM:	Fix bug where base frame return and context inst var access	can invalidate the instructionPointer if they provoke a code	compaction.	Fix bug where ensureMethodIsCogged: didn''t count or time	code compactions, or update the stack correctly.	Added asserts to code compaction to check that any updated	instruction pointers are valid, and to callbacks to check	primFailCode is zero on return to C.	Fixed compilation warning for primitiveTerminateTo.	Fixed another simulated coercion for the youngReferrers	list.	Added code to allow stress testing compactions by forcing a	compaction on every ensureMethodIsCogged:.' id '75ecd689-db60-45a8-94e7-a1d76c36ee17' date '18 June 2009' time '7:51:44 pm' author 'eem' ancestors ((name 'VMMaker-eem.436' message 'CogVM:	All machine code pcs with bytecode pcs map to the following	bytecode except the first bytecode/stackCheckOffset. Special	case that before traversing the map.' id '6401253a-d89d-49fb-971b-95ce823a7ca7' date '17 June 2009' time '11:34:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.435' message 'CogVM:	moved use of CPUID for serializing on instruction modification	to a subclass.  I RTFM and it''s not needed unless code and	data reside at different virtual/linear addresses.	Added support for generating MFENCE.' id '2d47727d-698f-422a-9f40-3fb27e5ffd25' date '17 June 2009' time '9:07:46 pm' author 'eem' ancestors ((name 'VMMaker-eem.434' message 'CogVM:	^-return in block pc needs to map to a bytecode pc' id 'c5e5f033-0f67-4e15-ac3b-2d5de9cad6a9' date '17 June 2009' time '9:47:58 am' author 'eem' ancestors ((name 'VMMaker-eem.433' message 'CogVM:	rationalized pc mapping increment to following bytecode	into one place for both HasBytecodePC and IsSendCall.	fixed checkIsStillMarriedContext:currentFP: to avoid assert	fail.Stack & Cog VMs:	added an "xray" primitive to inspect internal state of a context	for tests to be able to check that conditions are as assumed.' id 'be9d14cf-8beb-4562-a46f-d5315ada6a75' date '16 June 2009' time '10:27:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.432' message 'CogVM:	Fixed map enumeration of bytecodes for case where first	bytecode is a block creation.	Abstracted out common code for nextBytecodePC of a	bytecode descriptor' id '62b59a58-f14b-4b77-ae31-629c403bb225' date '16 June 2009' time '5:35:42 pm' author 'eem' ancestors ((name 'VMMaker-eem.431' message 'StackVM:	Fixed simulator w.r.t. float order flags.  In C 1 = true, but not	in Smalltalk.CogVM:	Fixed bug in encode/decode of machine code pcs in blocks.	pc is relative to block method not enclosing home method.	Fixed bug in ceMustBeBoolean: which pushed wrong return pc.	Fixed bug in pc mapping for mustBeBoolean which mapped to	the jump bytecode instead of the following bytecode.	Fixed bug in ceSend:super:to:numArgs: where mapping of	"don''t link" arg count to real arg count was wrong.	Some refactoring of pc mapping to help assert checks (yet	to be written).	Fixed simulator for processing young referrers list.' id '5cd82b4f-2480-4c55-9930-c4ce31c4d4eb' date '16 June 2009' time '12:38:53 pm' author 'eem' ancestors ((name 'VMMaker-eem.430' message 'All VMs:	Moved prim err code defines to VMBasicConstants to share	defs with the InterpreterPlugin hierarchy.	Recompile after loading!CogVM:	Fix bad bug in genPrimReturnEnterCogCodeTrampoline.  Old	code assigned Smalltalk stack pointer into CStackPointer on	primitive failure of a named primitive.	Removed redundant argCount arg from	activateInterpreterMethodFromMachineCode:.	Added two variables to record last C frame on entering	machine code for debugging.  These are only assigned to	if the -dpcso (debugPrimCallStackOffset) arg is non-zero.StackVM:	added prim err codes to method execution prims.' id 'b7284700-512e-4898-b9b4-a293764d1b04' date '15 June 2009' time '12:38:04 pm' author 'eem' ancestors ((name 'VMMaker-eem.429' message 'All VMs:	document the contract between executeNewMethod and the	perform and executeMethod primitives.  Fix unsafe code	in primitiveExecuteMethod.  Fix check of newMethod instead	of the method argument in primitiveExecuteMethodArgsArray.	Make failed read primFailCode ~= 0, not > 0, since i.e.	primitiveDoNamedPrimitiveWithArgs uses negative err codesCogVM:	Fix primitiveExitCriticalSection to only call	forProcessPrimitiveReturnToExecutivePostContextSwitch: if	there is a switch.	add an assert to activateInterpreterMethodFromMachineCode:	for the BallonEngine prim fail bug hunt.	pass method to ceInterpretMethodFromPIC:receiver:' id '8a87f976-7405-4a88-a04e-f9429606e56f' date '12 June 2009' time '11:41 am' author 'eem' ancestors ((name 'VMMaker-eem.428' message 'Balloon Engine:	setup primitive shell changed to answer specific error codes	for failures.  NEEDS Balloon-eem.17 FIRST.  Don''t forget to evaluate 	BalloonEngineConstants initPrimitiveConstantsafter loadStack VM:	fixed snafu with checkCodeIntegrity => checkCodeIntegrity:	renamed StackInterpreter stub to match.' id 'fe6e9252-5326-47dd-ab02-8157b4134c3f' date '8 June 2009' time '10:52:42 am' author 'eem' ancestors ((name 'VMMaker-eem.427' message 'CogVM:	repeatedly recompiling a method for block activation that can''t	be compiled (e.g. because it contains a new reference) is a bad	idea; it hurts.  Don''t do that.	this is the same as Oinq:VMMaker-eem.427 without the	BalloonEngine changes' id 'd9a8bfc9-8492-4739-a113-f7fd6400d836' date '5 June 2009' time '3:22:17 pm' author 'eem' ancestors ((name 'VMMaker-eem.423' message 'All VMs:	remove duplication in noteAsRoot:headerLoc:Cog VM:	doc & polish' id 'cf07f786-e964-44b2-9d57-07282128ddb4' date '4 June 2009' time '10:52:52 am' author 'eem' ancestors ((name 'VMMaker-eem.422' message 'CogVM:	documented trampoline return pc/instructionPointer behaviour.	fixed stack offset bug in cePushActiveContext.	moved ceCheckForInterrupts''s pop of return pc into	instructionPointer from C to the trampoline (it''s quicker that way ;) )	fixed some trampoline name typoes and a comment typoe' id '5b8324b2-037a-480b-a0e1-617959f4003f' date '2 June 2009' time '8:44:18 pm' author 'eem' ancestors ((name 'VMMaker-eem.421' message 'Stack & Cog VMs:	No need to include the pushed copied values in the outer	context when a frame is married tyo create a closure within it.' id '7c7e5465-d636-46b4-b858-037319e0adfd' date '2 June 2009' time '4:16:06 pm' author 'eem' ancestors ((name 'VMMaker-eem.420' message 'All VMs:	asserts to check context stack pointer store/fetch is in bounds.Cog VM:	If, when a closure is created in a machine-code activation,	the frame is married we must not include the pushed return	pc in the context''s stack contents.  if we do we may store a	stack pointer value that is one too big and subsequently	causes the smashing of the following object''s header when	the context is e.g. remapped and its end is determined from	the stack pointer.' id '71dce4ac-6b2b-49cd-a487-5099448bbffb' date '2 June 2009' time '3:53:10 pm' author 'eem' ancestors ((name 'VMMaker-eem.419' message 'Stack & Cog VMs:	move post-markPhase leak check to post-sweepPhase.	add asserts to mapStackPages to ensure written-through	pointers are on page.' id '85f08a8d-722a-4aed-851e-46c3f134f6fc' date '2 June 2009' time '11:41:30 am' author 'eem' ancestors ((name 'VMMaker-eem.418' message 'All VMs:	refactor remap code so that forward block dereference is in	one method (remappedObj:), not three.  Add assert for valid	result of remappedObj:.Cog VM:	add a couple of functions with which to check that asserts are	enabled checkAssertsEnabledInCogit/CoInterpreter.' id '466403ef-eeb2-45e9-9587-958717c52ad2' date '2 June 2009' time '9:54 am' author 'eem' ancestors ((name 'VMMaker-eem.417' message 'All VMs:	fix leak checker''s determination of the length of a compiled method	Procedurally abstract the various passes of the leak checker.	Put an assert check for a valid object on both ends of remap	(creating the forwarding entry and dereferencing a forwarding pointer)CogVM:	Pass in fullGC flag to code integrity check to avoid bogus	young but not so marked assert failures on full GC' id 'ee5ac7ff-ffa3-4b85-95c5-feb520781f12' date '1 June 2009' time '4:56:51 pm' author 'eem' ancestors ((name 'VMMaker-eem.416' message 'All VMs:	run leak check on start-up if it is turned on for fullGC' id 'd3c6e9b5-dc78-4068-8516-405e7b98f3c4' date '29 May 2009' time '5:26:47 pm' author 'eem' ancestors ((name 'VMMaker-eem.415' message 'All VMs:	revert non-bug in leak checker.	Add assert to catch bogus oops stored in contexts when	updating their state from the stack.' id '4ca6fb81-b1fc-47c5-afc3-36d7ce13fee3' date '29 May 2009' time '5:16:55 pm' author 'eem' ancestors ((name 'VMMaker-eem.414' message 'All VMs:	fix off-by-one error in leak checker that causes it not to check	the last accessible field (top of stack) in a context.	clean-up primitiveStoreStackp (stackp access over complex cuz	context is stable; stackp is an int so use signed comparisons)' id '270ab01d-f5e3-4a7b-817d-75bfe2fe1e4f' date '29 May 2009' time '2:41 pm' author 'eem' ancestors ((name 'VMMaker-eem.413' message 'All VMs:	export buildInfo for debug backtrace as __interpBuildInfo and	__cogitBuildInfo.CogVM:	bug fix for profiler (Slang snafu):		#primitiveYield => #primitiveYield asSymbol	Make getCurrentBytecocde check for being in an interpreter	frame.' id '80b24ac5-735c-4871-bc9a-57012daca320' date '29 May 2009' time '10:25:23 am' author 'eem' ancestors ((name 'VMMaker-eem.412' message 'CogVM:	beef-up the "is a method header in fact a pointer to a Cog method"	assert.' id 'ec79b352-74d5-4b4e-9ab4-669db7935823' date '28 May 2009' time '4:40:35 pm' author 'eem' ancestors ((name 'VMMaker-eem.411' message 'CogVM:	instruction pointer access in [external]instVar:ofContext: must	write-back stack page pointers before using	mustMapMachineCodePC:context: since it uses	ensureMethodIsCogged: which may cause code compaction	and trace the current page incorrectly if headFP/headSP	are stale.' id '6f2ab522-d046-49aa-86b1-087402f78c51' date '27 May 2009' time '2:10:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.410' message 'CogVM:	test for 64-bit nextProfileTick should or both 32-bit halves, not	add otherwise there''s a slim chance of a missed tick.' id '9b9f1554-8dd0-4026-94d6-57d61cce60b5' date '26 May 2009' time '7:58:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.409' message 'CogVM:	copy bug fix for ceBaseFrameReturn: made in VMMaker-eem.353	into the interpreter''s version baseReturn. Must free page before makeBaseFrameFor:	because creating a machine code frame involves ensureMethodIsCogged:	which may cause code compaction and trace the dead page being	returned from unless it is freed.' id '6cf420d0-fb46-4ae6-a298-16afd1d2126a' date '26 May 2009' time '6:31:10 pm' author 'eem' ancestors ((name 'VMMaker-eem.408' message 'All VMs:	Add an adoptInstance primitive for more convenient class	change.Stack & Cog VMs:	Eliminate redundant (and obstructive) checks for receiver	being a semaphore in primitiveSignal & primitiveWait.' id 'a41d25de-a71b-4119-af3e-6b7a996cad3a' date '26 May 2009' time '10:53:03 am' author 'eem' ancestors ((name 'VMMaker-eem.407' message 'All VMs	fixed bug in leak map check introduced when I sped up the	leak check.	leak check now checks root table and replaces validateRoots.	leak check now checks interpreter oops, extraRootsTable	& remapBuffer.Cog VM:	check for heap validity before & after GC.Context VM:	nuked unread inst var methodClass' id 'babce608-2408-42b6-9f06-dc369946b2f3' date '21 May 2009' time '2:50:13 pm' author 'eem' ancestors ((name 'VMMaker-eem.406' message 'Stack & Cog VMs:	made leak checking in GC controlled by checkForLeaks flag	also accessible from command line -leakcheck[:] n' id '3faf94bd-3d61-4105-9109-e6c876c104df' date '20 May 2009' time '4:27:01 pm' author 'eem' ancestors ((name 'VMMaker-eem.405' message 'All VMs:	Fixed signature of addGCRoot: & removeGCRoot:. varLoc	shoudl be sqInt *, not usqInt *.Cog VM:	Fixed callback entry bug.  enterSmalltalkExecutive must cope	with an instructionPointer of ceReturnToInterpreterPC in an	interpreted method.	Made simulated strncmp funcitonal enough to simulate	findString:.' id '1304cd81-e29b-49a1-9d77-3ef55345a61a' date '19 May 2009' time '10:07:12 am' author 'eem' ancestors ((name 'VMMaker-eem.404' message 'All VMs:	Fix primitiveLoadImageSegment so that it doesn''t interpret an	image version change as a byte-order reversal.Stack & Closure VMs:	Fix primitiveLoadImageSegment so that it swaps floats when	loading from an older image version that holds floats in big-	endian order into a version that holds them in little-endian order.' id '58c14d3b-1262-4098-aaf6-4c70a7a0bcbb' date '16 May 2009' time '9:08:05 am' author 'eem' ancestors ((name 'VMMaker-eem.403' message 'FilePlugin:	primitiveFileStdioHandles which answers an array of SQFile/	fileIDs for stdin,stdout & stderr as available.  Depends on	platform support in r5514 (trunk) & r5513 (cog branch).' id '4b62f020-51e2-4caa-b3a7-2c3a1ccefb66' date '14 May 2009' time '4:20:59 pm' author 'eem' ancestors ((name 'VMMaker-eem.402' message 'Cog & Stack VMs:	fixed primitiveObjectPointsTo for married contexts.  Now		thisContext pointsTo: thisContext sender	is true, etc.	primitivePerformWithArgs/primitivePerformInSuperclass are	now varargs primitives and so can be used for a mirror	perform (for the debugger).	Mirrors now complete at the VM level (and in my current	image''s debugger; will check-in once the changes propagate	to the Stack VM build)' id '81e80434-1ffa-4e92-ac12-4402ff77dac1' date '13 May 2009' time '11:24:39 am' author 'eem' ancestors ((name 'VMMaker-eem.401' message 'ClosureVM:	Fix broken redefinition of primitiveEquivalentToStackVM:	Fix broken redefinition of primitiveIdentical.	Make primitiveObjectPointsTo correct w.r.t. contexts	Less warnings in primitiveTerminateToCogVM	Make primitiveObjectPointsTo correct w.r.t. contexts & machine-code methods.	Less warnings in primitiveTerminateTo' id '59104adf-7567-4b34-ba82-b6cd5fd95f5c' date '12 May 2009' time '4:45:09 pm' author 'eem' ancestors ((name 'VMMaker-eem.400' message 'CogVM:	code compaction stats (number and total milliseconds)	less warnings in CoInterpreterStackVM:	less warnings in StackInterpreter' id '038ffb6a-bdba-4265-9920-01309e85e3cb' date '11 May 2009' time '3:55:10 pm' author 'eem' ancestors ((name 'VMMaker-eem.399' message 'CogVM:	Bug fix to interpreter method activation.  If an interpreted	method invokes a machince-code primitive that invokes an	interpreter method (e.g. block value, where the primitive is	compiled to machine code but with an as-yet-to-be-compiled	target) then the return pc (in instructionPointer) will be the	ceReturnToInterpreterPC and so activateMethod and	activateNewClosureMethod:numArgs:mayContextSwitch: must	check for this and substitute the saved pc because	ceReturnToInterpreterPC is vaid only between an interpreted	caller and a machine-code callee.	Reduced number of alloca''s on compile from three to two.	Restored mistakenly nuked trampoline.' id 'e36b75e5-e005-4021-9bca-6fad39841101' date '10 May 2009' time '4:07:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.398' message 'StackVM:	renamed primitiveEquivalent to primitiveIdentical and made it	varargs for mirror prims (perf not an issue because #== is	effectively inlined via a special selector).' id 'e0b36c12-a929-44f5-af83-09a119568c0e' date '8 May 2009' time '12:18:28 pm' author 'eem' ancestors ((name 'VMMaker-eem.397' message 'CogVM:	typoe in getCogCodeSize' id '44e990e2-8a1f-4e47-ae38-15068da5c47a' date '7 May 2009' time '5:24:37 pm' author 'eem' ancestors ((name 'VMMaker-eem.396' message 'CogVM:	access actual and desired cog code size in vmParameter prims' id '1cfca76b-8483-49df-af5d-e17a1ea05087' date '7 May 2009' time '4:49:52 pm' author 'eem' ancestors ((name 'VMMaker-eem.395' message 'CogVM:	Sample the profileMethod in process primitives before they context switch' id '6e15a952-b148-4d73-82a6-f79509cfa8dd' date '7 May 2009' time '12:16:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.394' message 'CogVM:	excised an unused trampoline' id '80e7b1ca-fab3-4e5b-b81f-ca04518df964' date '7 May 2009' time '8:44:01 am' author 'eem' ancestors ((name 'VMMaker-eem.393' message 'StackVM:	cosmetic changes only (comments & loss of an <api>)CogVM:	bug fix for callbacks.  Old code didn''t handle the movement of	the machine code for a callout during a callback so that when	the callout eventually returned it would execute bogus code.	Fix is to "sideways call" external primitives & FFI calls such	that they always return to cePrimReturnEnterCogCode, a	function that replicates the post-primitive call code at slightly	higher cost because it has to derive the argument count from	newMethod.	Renamed Push & Pop to PushR & PopR since for the above	PushCw was added.	Dropped unused support for setting messageSelector in a	primitive call.	Simulation support for jumps into runtime for simulating	"sideways call"' id '18dc53e3-2f1f-40a3-b909-27b116557c17' date '6 May 2009' time '8:34:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.392' message 'StackVM:	Need to not vm-profile label checkProfileTick: to avoid C	compiler errors.' id 'bb7fc0d0-9d06-46fc-8fc9-898d2406f7c7' date '5 May 2009' time '1:59:18 pm' author 'eem' ancestors ((name 'VMMaker-eem.391' message 'StackVM:	simplified QSystemProfiler VM profiling.  slowPrimitiveResponse	now simply samples, omitting the context switch.	The access primitives nil method and process implying that	to fully clean-up one should invoke Smalltalk profileSample	and Smalltalk profilePrimitive until they answer nil, e.g.		[Smalltalk profileSample isNil] whileFalse.		[Smalltalk profilePrimitive isNil] whileFalse.CogVM:	correctly profile non-machine-code primitives invoked from	machine code (i.e. SmallInteger, Float and BlockClosure value	primitives et al are not profiled, just as special selector prims	are not in the interpreter).	edits to reduce C compiler warnings' id '945da079-0e57-4323-a1bf-39ff90732214' date '5 May 2009' time '1:12:43 pm' author 'eem' ancestors ((name 'VMMaker-eem.390' message 'CogVM:	Bug fix in enterCallback/enterSmalltalkExecutive.  reenterInterpreter	setjmp needs to be done irrespective of whether the callback	directly enters machine code or the interpreter.  Old code just	did setjmp for the interpreted case.	callbackEnter also needs to save/restore the reenterInterpreter	jmpbuf around the callback, not just the C stack pointers.Slang:	added support for a <volatile> pragma which declares all local	variables as volatile (needed for callbackEnter).Stack VM:	put assertion checks of leak map in incrementalGC and allocated object	vaidity in allocation under control of DoExpensiveAssertChecks.	Fixed abscence of bounds checking bug in reverseDisplayFrom:to:	for toggle full screen, which temporarily sets display bits to nil.	Sped up leak check by avoiding firstAccessibleObject:/nextAccessibleObject:.	typoes' id 'c47b6b42-5ed8-4b05-820b-82c60ae13111' date '4 May 2009' time '8:22:53 pm' author 'eem' ancestors ((name 'VMMaker-eem.389' message 'CogVM:	Bug fix for wild write.  Frameless optimization for		instVar := LiteralVariable	was incorrectly using ReceiverResultReg as a temporary.	This was trashing the GLTrue association when running	TStripData>>modeGLTriangles.	Made GC/unlink phase single-pass.StackVM:	Bug fix for printAllStacks broken when I added checking for	Mutex''es.		Streamlined leak map check code.	Made leak map check during incrementalGC depend on	DoExpensiveAssertChecks.	Provided findString: for locating symbols in debugging.' id '3efda368-f1c2-472c-ab73-64acd231b54b' date '29 April 2009' time '5:54:18 pm' author 'eem' ancestors ((name 'VMMaker-eem.388' message 'CogVM:	Bug fix to GC of machine code.  Need to mark-and-trace	references to literals and at least unlink sites that have	unmarked classes in inline caches on (full) GC.  Also no need	to keep class in inline cache at super send or open PIC send	sites.	Need to include NewObjectMemory''s <api> methods in	CoInterpreter''s exportAPISelectors.' id '78a612f0-73a4-485a-b6b2-c074fcd07dfc' date '28 April 2009' time '9:39:50 pm' author 'eem' ancestors ((name 'VMMaker-eem.387' message 'StackVM:	Faster context instantiation for Closure creation.  Avoid the	specialObejctsArray indirectin and format fetch for MethodContext	since it is compact and its format is known.	Use fooNonInt: in a few more places.	Cleaner code for determining stack pointer of married frame,	allowing Cog to override correctly.	Add an assert for overflowing incorrectly-sized contexts on	updating frame spouses.	Correct some signed comparisons to be unsigned in various	object enumerations, etc.CogVM:	Bug fix to eliminate incorrect use of StackInterpreter''s frame	receiver offset (FoxReceiver) instead of machine-code or	interpreter offsets (FoxIFReceiver & FoxMFReceiver) as	appropriate.	Bug fix to GC of trace log.	Add block creation and code compaction to tracing events	for debugging.	Some additional asserts.	Some more unsigned comparisons to fix various asserts.	typoes.' id '6e878971-62e6-4746-b495-e34343382127' date '28 April 2009' time '1:52:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.386' message 'CogVM:	bug fix in storing primitive error code.  old code answered	negative error codes as 0, which broke tryNamedPrimitive:for:withArgs: when compiled.' id '6c4a485f-96a1-42f3-94ed-126e39b94aae' date '25 April 2009' time '11:20:15 am' author 'eem' ancestors ((name 'VMMaker-eem.385' message 'StackVM:	load/store image segment now handle platform-order floats.	bug fix to stack page handling when assigning to contexts	such that the upper frames on an old stack segment must	move to a new stack page.  Now the current stack page is	restored as most-recently-used-page.	Tweaks using various fooNonInt: variants where appropriate	(e.g. oopHasAcceptableClass: in load image segment).CogVM:	store image segment now avoids writing cog references in	the method headers of cogged methods.' id 'eeb15449-74db-4918-a296-d38c09c76927' date '24 April 2009' time '3:36:14 pm' author 'eem' ancestors ((name 'VMMaker-eem.384' message 'Slang:	Ensure CoInterpreter is initialized whenever the Cogit is generated.	If one runs e.g. the Stack VM in the simulator and then  generates	the Cogit without initializing CoInterpreeter then the Cogit can be	generated with invalid values for constants such as FoxThisContext (ouch).StackVM:	bug fix to primitiveStoreStackp.  Ensure stackPage is most recently	used page always.	bug fix to storeMaybeContextReceiverVariable:withValue:.  receiver	may not be a context.	Use isContextNonInt: where appropriate.  Reorganize	doubleExtendedDoAnythingBytecode to avoid duplicating	storeMaybeContextReceiverVariable:withValue:CogVM:	Use isContextNonInt: where appropriate.' id '6d517f23-3a5b-4b20-904d-92f62544afc5' date '23 April 2009' time '3:09:01 pm' author 'eem' ancestors ((name 'VMMaker-eem.383' message 'Warning: this is another "recompile after loading" check-in that moves hash-related constants from ObjectMemory classPool to VMSqueakV3ObjectRepresentationConstants classPool.StackVM:	fix bug in assigning fields of contexts which could cause the	stack page list to be malformed.	fix bug in positive64BitValueOf: which would fail for 8-byte	values (self sizeof: #sqLong is translated as sizeof("sqLong"),	which is 7 bytes in size).	Maintain Floats in platform-order (also requires a platforms	putsch yet to be checked-in).  This involves an image format	roll since older VMs will not recognize the flag in the image	header that defines the float format.CogVM:	Added floating-point support with primitives for = ~= > < >= <=,	* / + - sqrt asFloat.  Uses SSE2 instructions; tests for their prescence	at start-up and disables primitives if missing (but does presume	CPUID is available, i.e. Pentium or later)' id '898dcaad-ba85-489e-a5ce-781e0dad6d3f' date '21 April 2009' time '1:59:05 pm' author 'eem' ancestors ((name 'VMMaker-eem.382' message 'StackVM & CogVM	drop an unnecessary store check on context switch' id '41ab251b-a0cf-4402-9ae5-936d49e3a08d' date '14 April 2009' time '10:03:53 pm' author 'eem' ancestors ((name 'VMMaker-eem.381' message 'CogVM:	neater method metadata map. Use 0 as the tag for displacement-	only bytes and an effectively shifted extension byte for	larger displacements.  This representation will simplify	lazy unlinking.' id '243d8a1d-41f2-4b2b-8ece-a4745adde646' date '14 April 2009' time '1:53:09 pm' author 'eem' ancestors ((name 'VMMaker-eem.380' message 'StackVM:	speed up primitiveNextInstance (apparently x2 on Cog?!)CogVM:	fix regression from abort merging whenb extending a closed PIC.	eliminate duplication combining patchToOpenPICFor:receiver:	& patchToOpenPICFor:numArgs:receiver: into better named	ceSendFromInLineCacheMiss:.' id '2c9e81e3-7eee-4183-86f4-3bb73fcb1b21' date '14 April 2009' time '11:05:22 am' author 'eem' ancestors ((name 'VMMaker-eem.379' message 'CogVM:	combine the two prolog abort calls into one in both methods	and PICs.  Saves 3% and potentially aligns entry on a 32-byte	boundary (current method alignment is 8 bytes).' id '949dd98b-6b44-4d76-9e6f-ad8ec60b8174' date '13 April 2009' time '8:55:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.378' message 'CogVM:	Fix bug with frameless block generation.  ReceiverResultReg	must hold the home receiver not the closure for inst var access.	Incomplete refactoring of trampoline generation in anticipation	of collapsing aborts.' id '548b4c30-5504-472f-912a-89429335cfce' date '13 April 2009' time '7:13:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.377' message 'StackVM:	Fix to non-local return stack page management.	If it allocates a page, establishFrameForContextToReturnTo:	must mark the page as most recently used.  Now non-local	returns can assert a well-formed page list throughout.	There is no need to flush external primitives from all methods	on startup since this is done in snapshotCleanUp.CogVM:	ditto fix to non-local return stack page management.	Bug fix for makeBaseFrameFor:, which must allow for a	machine code compaction in ensureMethodIsCogged:.	Streamline bytecocde pc preparation in makeBaseFrameFor:.' id '77e612b7-3bd4-4b72-8bb3-ea67fe3789bc' date '13 April 2009' time '2:38:48 pm' author 'eem' ancestors ((name 'VMMaker-eem.376' message 'StackVM:	replace all DoAssertionChecks ifTrue: [ self fwdBlockValidate: fwdBlock ]	with proper self assert: (self fwdBlockValid: fwdBlock) asserts.	Rename primitiveFlushCacheSelective to primitiveFlushCacheBySelector	for consstency with primitiveFlushCacheByMethod.	Fix bug in primitiveFlushCacheBySelector.  remember to flush the at	cache if the selector is either at: or at:put:.CogVM	Fix bug in ceBaseReturnTrampoline which was popping	the stack one too far which could smash the saved context	if an interrupt happened befre the call of ceBaseFrameReturn:.	Fix bug in cache fushing; i.e. implement primitiveFlushCacheBySelector	and primitiveFlushCacheByMethod.	streamline marryFrame:SP: to speed up block creation.' id '7f960079-75fd-46f9-9e45-ababb0e1ba66' date '9 April 2009' time '6:42:32 pm' author 'eem' ancestors ((name 'VMMaker-eem.375' message 'StackVM:	Defer an assert in primitiveTerminateTo & less warnings therein.CogVM:	If the interpreter hard-wires #class then so must the Cogit.	Defer an assert in primitiveTerminateTo.	Fix regression in primitiveCalloutToFFI.  It uses newMethod.' id '17026662-e2be-419e-ab0c-79bd2ad5c3a3' date '9 April 2009' time '8:29:31 am' author 'eem' ancestors ((name 'VMMaker-eem.374' message 'CogVM:	fix the prim num args table so its an array of chars.  sigh.' id 'ecca0a64-c802-4601-b48b-5b53ae890595' date '8 April 2009' time '11:28:24 pm' author 'eem' ancestors ((name 'VMMaker-eem.373' message 'CogVM:	fix primitive num args initializer so it doesn''t contain nils.' id 'eb3152ed-55ac-4103-b2a5-55144329ec58' date '8 April 2009' time '11:22:29 pm' author 'eem' ancestors ((name 'VMMaker-eem.372' message 'StackVM:	refactor well-formed stack pages assert so it is void in non-debug	VMs, and not so verbose when it fails.	primitiveSize pops argumentCount + 1 rather than 1 so it can	be used in to implement mirror primitives.CogVM:	Major bug fix to interpreter callers of slowPrimitiveResponse.  Of course	these callers must be prepared to return to machine code because a	primitive may have done a context switch or activated a machine code method.	primitive compilation checks for expected arg count if primitive	generator assumes arg count, and defaults to interpreter primitive	if the arg count is wrong.	Fixed stupid bug in simulator that was causing image to retain	heap bitmaps (replace UniqueIndices class var with uniqueIndices	inst var).	some explanatory comments and a bug fix for storing into	subclasses of context that happen to have integers in their	senders (i.e. not a bug that''s likely to bite).' id 'fc015fae-2bcc-4196-b84f-3358c6914c3a' date '8 April 2009' time '11:10:35 pm' author 'eem' ancestors ((name 'VMMaker-eem.371' message 'StackVM:	removed tracing from transferTo: (Cog now has its own).	Put asserts around test of primitiveFunctionPointer in callback	enter and leave.CogVM:	External call caching now updates machine code so calls	will be direct from machine code once repeated after unloadModule:.	Context switches tracing includes the source (wait, signal,	enter critical section et al).	Bug fix to GC of trace log.	Machine code prim calls assign to newMethod and primitiveFunctionPointer	only for primitiveExternalCall and primitiveCalloutToFFI.	Bug fix in activateInterpreterMethodFromMachineCode:.	Replace ancient incorrect prim return code with the generic	return:toExecutive: helper.	Bug fix in callbackEnter:.  enterSmalltalkExecutive must also	activate a machine code frame.	Enter''s Brad Project happily, but any attempt to turn on the	profiler crashes repeatably.' id 'd82c6cc3-28f7-4b47-979d-147d23b0763d' date '8 April 2009' time '3:36:41 pm' author 'eem' ancestors ((name 'VMMaker-eem.370' message 'CogVM:	rewrite machine code call from primitiveExternalCall to target	on subsequent call after flush/unload.StackVM:	less warnings.' id '2b54b4bf-25fc-40e4-9e64-938480b9f1a1' date '7 April 2009' time '9:55:19 pm' author 'eem' ancestors ((name 'VMMaker-eem.369' message 'StackVM:	fix to assert (send to correct implementor).	less warnings from interp.c.CogVM:	Call target of primitiveExternalCall directly (analogously	to interpreter''s rewriting of 1st-level method lookup cache with	target function).  Necessitates reverting call back to	primitiveExternalCall on unloadModule:.  Passes the ultimate	test: Reset Sound.	Doesn''t yet rewrite back to direct call on subsequent call to	primitiveExternalCall.	less warnings from cointerp.c.' id '24719eb6-c5ef-4f60-b3d9-1ea60b5e23ae' date '7 April 2009' time '9:20:52 pm' author 'eem' ancestors ((name 'VMMaker-eem.368' message 'Slang:	Add support for dereferencing assignments to struct targets as in		(fooStruct := (expr)) fieldNameStackVM:	Relax an assert in non-local return.  Test for a well-formed stack page list	before and after walking and freeing intervening stack pages, not during.CogVM:	Bug fix for regression.  Relocate the youngReferers on method zone compaction.	Fixes recent crashes on forum entry.	add assert to check fake header in cog methods is correct.	fix typoes & polish a couple of comments.' id '023ec726-29a6-4c2f-9e34-a39924672d7d' date '7 April 2009' time '11:07:59 am' author 'eem' ancestors ((name 'VMMaker-eem.367' message 'CogVM	Maintain a list of the cmRefersToYoung cog methods so that	incrementalGC dsoesn''t have to enumerate all cog methods.	replace updateCogMethodHeaderPostGC:, which is now just an	assert, with an explicit assert.' id 'ac21b797-3a64-4900-ae7a-da9757f3ed6c' date '6 April 2009' time '11:29:32 am' author 'eem' ancestors ((name 'VMMaker-eem.366' message 'CogVM:	Bug fix: need to update saved ip of top frame of active page if	it is an interpreter page (unlike StackVM).	Bug fix, annotate an add of true or false in genJumpIf:to:.	Implement mustBeBoolean in machine code (requires adjusting	abort senders of ceSend:super:to:numArgs: to pass negative	arg count - 1).' id 'd8b84d74-5771-44b3-97da-719f517cb8ba' date '4 April 2009' time '11:10:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.365' message 'StackVM:	Fix old bug that could set memoryLimit to a value not on a word	boundary.	Set endOfMemory and memoryLimit thorugh accessors so an	alignment assert can be easily applied.	Move call of markAndTraceOrFreeMachineCode: up to markPhase:	out of markAndTraceInterpreterOops: and crucially after	markAndTraceAndMaybeFreeStackPages:.  Machine code methods	can only be freed safely after scanning the stack.  This is	the fix for Brad''s updateAllLoadedPackages crash.CogVM:	Bug fix; as  described above markAndTraceOrFreeMachineCode:	now done as the last part of the markPhase:.	Freeing a machine cocde method can be done if the method is	free; care less about the selector.' id 'ea5ebe86-8cd6-4bfc-8f1b-8e06999a1969' date '4 April 2009' time '8:39 pm' author 'eem' ancestors ((name 'VMMaker-eem.364' message 'StackVM:	less warnings in users of printHexPtr: using void * instead of char *.CogVM:	Bug fix: move inInterpreter determination before transferTo:	in process & semaphore prims.' id 'b1b11c2a-9958-489e-9b8c-39fb06e3d6ad' date '4 April 2009' time '3:07:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.363' message 'StackVM:	better names and typoesCogVM:	on snapshot make sure all unmarried contexts have bytecode	pcs, not just those that were on married on stack.' id '4de48139-03e7-43b5-ae5d-6dffbf48e418' date '4 April 2009' time '11:15:19 am' author 'eem' ancestors ((name 'VMMaker-eem.362' message 'StackVM:	arrange that widowed contexts are bereaved at snapshot so that they are	safe to load.CogVM:	ditto and also map all machine code pcs to bytecoded pcs so images can be	brought up on the Stack VM.' id '6e04e953-1e42-4155-9e03-ee7df4f597a3' date '3 April 2009' time '4:14:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.361' message 'CogVM:	tweak to the labels in the Cog code constituents primitive' id '20760565-018c-4b52-aaae-685d5acd1c4c' date '3 April 2009' time '2:41:24 pm' author 'eem' ancestors ((name 'VMMaker-eem.360' message 'StackVM:	Made methods used by Cog profling prim <api> methods.CogVM:	Added primitiveCogCodeConstituents to answer a symbol	table for the machine code zone for profiling.	Renamed zoneEnd to zoneLimit and called the end of the zone...	zoneEnd.	First check-in from a Cog VM, I hope...' id '17342a84-f098-4f3e-9675-4c5c0f3aa976' date '2 April 2009' time '11:33:38 pm' author 'eem' ancestors ((name 'VMMaker-eem.359' message 'StackVM:	remove assumption in snapshot code that heap starts at	memory rather than at startOfMemory.CogVM:	above change fixes snapshot bug.' id '53a50bbc-6e3a-4735-831e-112a8f499864' date '2 April 2009' time '8:54:41 pm' author 'eem' ancestors ((name 'VMMaker-eem.358' message 'StackVM:	remove assumption in snapshot code that heap starts at	memory rather than at startOfMemory.CogVM:	above change fixes snapshot bug.' id '15dad5f0-6128-4411-9075-9c5e499b297d' date '2 April 2009' time '8:51:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.357' message 'CogVM:	unlinked sends patch to open pics when sending to instances	of young classes.	tracing code now includes source (machine code, interpreter or	unknown) in each logged event.' id '68de32de-8f93-46c6-abb9-7700a4159a46' date '2 April 2009' time '6:36:30 pm' author 'eem' ancestors ((name 'VMMaker-ar.356' message 'A minor tweak to CroquetPlugin (avoid failing a primitive in a case where it is not necessary).' id '5c760296-0ada-344b-9aeb-43293af3a1b3' date '2 April 2009' time '3:37:15 pm' author 'ar' ancestors ((name 'VMMaker-eem.355' message 'StackVM:	changes to image i/o to preserve the code size short in the	image header to be polite to images run on Cog.	Refactored primitiveCalloutToFFI''s cacheing of primitiveCallout	to allow Cog to call primitiveCallout directly.CogVM:	bug fix for young classes in in-line caches (not ideal; want	ceSend:super:to:numArgs:to use patchToOpenPIC: but that''s	a lot of refactoring for now).	Another bug fix to asserts in frameCallerContext: (nil is a legal	sender context).	Seems to run forums quite happily (except for sound?  Am I	supposed to be able to hear myself?  I can''t)' id '8272acde-ed03-4168-bd0d-12b80a4bb50c' date '1 April 2009' time '10:20:27 pm' author 'eem' ancestors ((name 'VMMaker-eem.354' message 'StackVM:	fix to checkStackIntegrity; use stackPointer & framePointer for active page.	heap integrity refactored to suit CogCogVM:	biggie bug identified for QF.  QF creates anonymous classes	(i.e. OGLExtManager) which mustn''t be allowed to be used as	inlione cache tags since we don''t update inline caches in	incremental GC (for sound performance reasons).  Assert in	place but no fix yet.	leak map extended to cover references from code (hence	identifying the above bug).' id '62cf2ce2-b037-4fd6-8383-6930822fa1a8' date '31 March 2009' time '11:26:39 pm' author 'eem' ancestors ((name 'VMMaker-eem.353' message 'StackVM:	added checkCodeIntergrity stub for Cog to fulGC assert checks.CogVM:	Bug fix to incremental gc clerical errror.  update selector as well	as method in mapObjectReferencesInMachineCodeForIncrementalGC.	Bug fix in ceBaseFrameReturn:.  Must free page before makeBaseFrameFor:	because creating a machine code frame involves ensureMethodIsCogged:	which may cause code compaction and trace the dead page being	returned from unless it is freed.	Bug fix to asserts in frameCallerContext:.  Can''t depend on	frameStackedReceiverOffset: because method state may have been	smashed by interrupts.	Extended heap integrity check to machine code but still more needs	doing in CoInterpreter to cope with cog method references in	CompiledMethod headers.' id '42a1d8fb-20ce-4883-a8f7-3448d897e148' date '31 March 2009' time '5:03:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.352' message 'StackVM:	fixed stack imbalance for primitiveArrayBecomeOneWayCopyHash (due to clerical error)CogVM:	eagerly jit targets of perform:, withArgs:executeMethod: et al	so that with Compiler-eem.57/Tweak-Compiler-eem.43/Tools-eem.63	doits will run at full speed immediately.' id 'cb8ef957-3e4e-4037-b602-34e8468d464b' date '31 March 2009' time '12:09:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.351' message 'CogVM:	Add primitiveCalloutToFFI to list of primitives which need	newMethod setting up.	Now Cog enters QF but doesn''t hang around for long.' id 'b1b866cd-a47d-4764-a855-2b4bf3639d6d' date '31 March 2009' time '10:57:12 am' author 'eem' ancestors ((name 'VMMaker-eem.350' message 'StackVM:	createActualMessageTo: marked as no inline because it''s a	useful breakpoint.	no-op stack assert added to checkForEventsMayContextSwitch:	(not a no-op in Cog).	markAndTrace: exported (for Cogit)CogVM:	bug fix in open PICs, align call of ceSendFromOpenPIC:.	bug fix in closed PICs; pass parameter in SendNumArgsReg	instead of ClassReg because otherwise ClassReg smashed for	subsequent cases.  Also alter open PICs to use SendNumArgsReg.	bug fix, markAndTrace: young references in cog methods.	beefed up C stack alignment checking in simulation and production.	Avoid refs to new methods in closed PICs by patching to	open PICs.	Now successfully evaluates Compiler recompileAll' id 'edf1bae9-92d6-4ecf-94bf-a769447360dd' date '30 March 2009' time '8:14:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.349' message 'CogVM:	deal with young selectors.	clear cmRefersToYoung flag when possible' id 'f7263f47-5191-4065-b489-ba6ace228a5f' date '29 March 2009' time '2:31:53 pm' author 'eem' ancestors ((name 'VMMaker-eem.348' message 'CogVM:	allow compilation of young methods.	Rename selectors & variables containing "new" to refer to	young objects to contain "young".' id '07ffc15d-bb1a-41e4-8c40-9b759273dfba' date '29 March 2009' time '1:45:32 pm' author 'eem' ancestors ((name 'VMMaker-eem.347' message 'StackVM/CogVM:	sweeping memory requires only a sentinel free block at	freeStart, not one at endOfmemory too.  This fixes a start-up	bug on WIndows with Cog where the set-up of the endOfMemory	free block would cause a segfault since pages towards end of memory	are not yet mapped (they usually are in the non-Cog VM).' id 'ccf97957-f6ad-4116-98cf-8655aa3343f3' date '28 March 2009' time '3:54:46 pm' author 'eem' ancestors ((name 'VMMaker-eem.346' message 'CogVM:	fix bug in passing primitive error code to method (can''t use	same register for both base & index).' id '7bf6e35d-a052-4655-a63e-5f8e95539b17' date '27 March 2009' time '3:00:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.345' message 'Slang:	Move the error/warning preamble definition from	CCodeGenerator>>emitCHeaderOn: to e.g. StackVM	class>>preambleCCode to allow Cog to add to it.StackVM:	Aforementioned preamble moved to class side.	Recategorize some float comparison primitives.	No-op extension to primitiveVMParameter to allow Cog	to override and add accessors for desiredCogCodeSize.	Export printing routines for CogitCog:	fix missing objref annotation in genReturnTrue.	save/restore C stack/frame pointers on callback enter/leave.	Rip out reserveExtraCHeapBytes anacrhonism from image load.	Support Win32 setjmp/longjmp (& map sigsetjmp to _setjmp).	Use ObjectMemory>>nilObject, trueObject falseObject in	place of CoInterpreter>>nilObj et al to avoid compilation	errors in non-global-struct regime.	Make save/restore of C stack pointers not save frame pointer	unless in use.	Fix initialization order on package load.' id '40057ebb-c58a-45fd-bd2f-f67dbe349d74' date '27 March 2009' time '12:06:56 pm' author 'eem' ancestors ((name 'VMMaker-eem.344' message 'StackVM:	Checking-in two bugs found by Andreas in primitiveExitCriticalSection.	First the exit always transferred to the first waiting process, even if it had lower priority; the inent was merely to transfer if	the waiting process had equal priority to the exiting process.	Second, the code assumed it was correct to be fair and	transfer if the first waiting process had equal priority, and	hecne avoided using transferTo:.  But this changes the	semantics from that obtained by implementing Mutex above	Semaphore (which uses resume:).  So exit now uses resume:	and hence doesn''t transfer if the first waiting process is of	equal priority.	Backing out of change to synchronousSignal: since the ciritcal	section primitives don''t use the new version, which isn''t necessary; IIABDFI.' id 'a8cb126b-7b1f-4ec0-a1ca-6370e41250a2' date '24 March 2009' time '2:49:40 pm' author 'eem' ancestors ((name 'VMMaker-eem.343' message 'StackVM:	nill changes to markAndTraceInterpreterOops to provide a hook	to override in Cog.	Export isMarked: for Cogit.CogVM:	Implement voiding code that refers to freed methods and	unlinking sends to such freed code; see markAndTraceObjectsOrFreeMachineCode.	Fix stupid bug in unlinking code due to copy-pasting code	and forgetting to delete the remap: sends there-in.	Fix bug in mapObjectReferencesInMachineCode which could	have traced through a freed method.	More informative cog method printing (pic? method?).	More definitive comments as to stack layout in PIC-related	methods.	Set cmIsUnlinked: flag to zero (to get rid of the noise).' id '11f11367-d960-4145-a4b3-42776eadb77b' date '23 March 2009' time '4:39:35 pm' author 'eem' ancestors ((name 'VMMaker-eem.342' message 'StackVM:	Somewhat faster CriticalSection/Mutex primitives which set	owningProcess in synchronousSignal: as well as the Critical-	Section/Mutex primitives.Cog:	corresponding versions of the primtiives for CoInterpreter.' id '2f4ccb6e-392a-43f8-b5ec-c8d09b1308b8' date '22 March 2009' time '1:03:52 pm' author 'eem' ancestors ((name 'VMMaker-eem.341' message 'StackVM:	Critical section primitives for much faster Mutext>>critical:.	Abstracted remapping of VM registers from mapInterpreterOops	to mapVMRegisters for override by CoInterpreter.	printOop: uses hex consistently.	printFrame:WithSP: more robust for corrupt frames.Cog:	experiment with more stack headroom.	Critical section primitives for much faster Mutext>>critical:.	printFrame:WithSP: more robust for corrupt frames.' id '9427523c-46eb-46ed-ab1b-54d91bb696f9' date '21 March 2009' time '4:27:10 pm' author 'eem' ancestors ((name 'VMMaker-eem.340' message 'StackVM:	changed checkForEventsMayContextSwitch:, signalExternalSemaphores	& handleStackOverflowOrEventAllowContextSwitch: to answer	whether a context switch occurred.	Used isEmptyList: instead of concrete code.Cog:	reentry into machine code post context-switch modified so that	result popped off stack into ReceiverResultReg if switching	to a machine-code process suspended at a send.' id 'd8a5c322-900a-4c2f-8aa2-556491768ecf' date '20 March 2009' time '2:01:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.339' message 'StackVM:	added some asserts that check for stack frame growthCogVM:	removed some unnecessary externalWriteBackHeadStackPointer''s.	Made primitiveResume and primitiveSuspend avoid	returnToSmalltalkExecutive if context not switched.	Identified, but not fixed, stack growth bug exhibited in	ScriptScheduler>run.  Cogit''s current caller pushes result	calling convention is incompatible with context switching	primitives because none of the proecss switching primitives	remove their arguments from the stack and when a process	continues after a wait/suspend et al it pushes a result.  See	all uses of		self flag: ''currently caller pushes result''	for relevant points.' id 'c3845f8a-6276-488b-bd8d-eeb48c53dedd' date '19 March 2009' time '7:58:22 pm' author 'eem' ancestors ((name 'VMMaker-eem.338' message 'Slang:	ripped out the bitShift: can be signed futility and put it	Integer>>signedBitShift:/CArray>>signedBitShift:Cog:	use signedBitShift: in pc mapping code.  Cog now starts up	forums and dies with a stack overflow in ScriptScheduler>run	when listing forums in the Lobby.' id '11147440-f727-4b2e-9893-ec262128e756' date '19 March 2009' time '4:44:51 pm' author 'eem' ancestors ((name 'VMMaker-eem.337' message 'StackVM:	extend printAllStacks to print runnable processes on the	runnable process lists' id '9c1e3cee-72b6-4f6c-9a52-b2854f3bcc66' date '19 March 2009' time '12:06:10 pm' author 'eem' ancestors ((name 'VMMaker-eem.336' message 'StackVM:	suppressHeartbeatFlag must be global otherwise it gets	localised to forceInterruptCheckFromheartbeat and misdeclared,	which breaks input.Slang:	nuke a forgotten halt' id '033a687d-bf13-407b-b390-65a6268a61e3' date '19 March 2009' time '11:42 am' author 'eem' ancestors ((name 'VMMaker-eem.335' message 'Slang:	got rid of stupid questions.  Headers are now written if	- they don''t exist, or	- their contents have changed, or	- the package is clean	i.e. they don''t get wrtten if they haven''t changed and the package is dirty.	One still gets asked if one wants to regenerate the interpreter and/or jit if they haven''t changed.	sqNamedprims.h now gets a package version in its header and	doesn''t get unnecessarily rewritten (obeys the rules above).StackVM:	Made breakSelector an inst var with an accessor, along with	suppressheartbeatFlag.Cog:	moved all breakSelector stuff into the interpreter.' id '26b34085-c461-44db-a46a-032ba2ff55be' date '19 March 2009' time '10:59:10 am' author 'eem' ancestors ((name 'VMMaker-eem.334' message 'StackVM:	corrected printHex:.	Changed resume: & synchronousSignal: to answer if they	switched process (needed by Cog).	Fixed typoe in primitiveSignal.Slang/VMs:	changed switch generation to output a call on	bytecodeDispatchDebugHook() which is implemented in dispdbg.h,	instead of an include of dispdbg.h at the switch.  Allows	dispdbg.h to be included elsewhere (cogit.c).	Better fix for plugin module name, verified by producing all	pl;ugins and running Croquet VM tests.Cog:	Fixed bug in primitiveSignal (there was no implementation for	Cog so if primitiveignal switched process and switched from	machine code to interpreter or vice verce, kaboom.	Implemented voiding the code cache on snapshot to put all	compiled methods into a snapshottable state.	Fixed externalAboutToReturn:throguh: & externalCannotReturn:from:	to push instruction pointer last.	Cog now passes more of the Croquet VM tests than the StackVM?!' id 'b3749f3d-85f0-45dd-a146-8f04c843c48b' date '18 March 2009' time '6:18:58 pm' author 'eem' ancestors ((name 'VMMaker-eem.333' message 'Slang:	Fix the doubling up of plugin names in their declared	module name.CogVM:	previous check-in comment is baloney.  This fixes the wild	pointer bug  The code for cannotReturn:/aboutToReturn:through:	uses send code that will attempt to link the send unless told	otherwise.  So tell it not to link when sending cannotReturn:/	aboutToReturn:through: as part of non-local return where	there is no send site.	At least two obvious bugs exist:	- Something that looks like a bitShift: bug shows up in	  computePixelRampOfSize:/scaledAlphaMix:of:with:.	- There''s a bug returning vaues via NLR through a	  Semaphore>>critical:' id '2de268e0-5a63-47fc-9695-f97d5a5a61ca' date '17 March 2009' time '4:44:01 pm' author 'eem' ancestors ((name 'VMMaker-eem.332' message 'StackVM:	minor fix to printing so that in a frame print empty string	objects print as ="" not =.Cog:	Fixed wild pointer bug that was caused by updating an inline	cache but passing the wriong address, that of an object, not	the return address of the send call.  This is an old bug where	I forgot to update code when the calling convention for	ceSend:super:numArgs:receiver: was changed from it having	to pop the instruction pointer to having the trampoline assign	instructionPointer instead.	Made send breakpoints suppress the heartbeat when reached to	enable uninterrupted stepping after a breakpoint.' id 'ff5d4089-4c71-4ea2-9922-53e4313e8e5d' date '17 March 2009' time '12:34:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.331' message 'StackVM:	correct printHex: (will work under cygwin 2.95.x).	comment typoes.	prevent inlining of warning and error as these are useful	as breakpoints.Cog:	Fixed bug in GC of object refs in methods (old code forgot to	update selectors in unlinked sends).	store tracing routine for checking inst var assignments.	deleted frame print code that assumed obsolete & wrong base frame representation.	comment typoes' id '0ce21175-754f-4cfb-9935-95e59b086a5c' date '16 March 2009' time '10:19:24 pm' author 'eem' ancestors ((name 'VMMaker-bgf.330' message 'Really really suppress export pragmas by default.' id '8552cd2b-b20c-4778-9ec3-789cca788c74' date '15 March 2009' time '9:12:57 pm' author 'bgf' ancestors ((name 'VMMaker-bgf.329' message 'Some fruits of dabbling in generating with no inlining.- doNotGenerate some InterpreterStackPages    non-slang simulator support code.- In #transferTo:, a missing *StackPage'' cdecl   prevented the field accessors from being pointer->ized.- Fix TReturn to emit proper C for a void function  (eliminates about 350 warnings.)- Make suppressing #pragma export the default;  we''ve seen enough of those pests I think.(There is a further spate of changes to allow no-inlineto compile, fiddling the return valuesof StackInterpreter methods(e.g.  adding an ^ to  #internalPush: and many others)to force slang to make them int rather than void,so places that use them as their results don''t barf.)But those are just ''make it work'' hackery.The non-inline experiment was just to play with compilers,nothing we need actually to support.)' id '2d18350f-0a32-43e2-96bd-5425f1739293' date '15 March 2009' time '1:29:43 am' author 'bgf' ancestors ((name 'VMMaker-bgf.328' message 'Noticed while mud-wrestling...self self in setWindowSize prim.' id '0e42f0a6-2483-4618-a8e8-6fd419bffd64' date '14 March 2009' time '11:16:56 pm' author 'bgf' ancestors ((name 'VMMaker-eem.327' message 'Slang:	Don''t create bogus global declarations for things already declared static.Cog:	added debugging support to map addresses to the names of	generated run-time routines.' id '8354621c-9afd-492d-8988-2e9f392c5bf4' date '13 March 2009' time '5:07:33 pm' author 'eem' ancestors ((name 'VMMaker-eem.326' message 'Cog:	fixed two bugs in compaction.  old code updated corpse, not	copy.  old code didn''t diminish usage count of methods not	moved (lowest methods).' id '3f98d60f-bead-4aa3-96ea-8ecb4a9bfbdd' date '13 March 2009' time '10:05:50 am' author 'eem' ancestors ((name 'VMMaker-eem.325' message 'StackVM:	comment typoes in primitiveTerminateToCog:	defined primitiveTerminateTo so that it maintains contract	between interpreter caller and machine-code callee frames' id '9ed250f3-c472-422e-ae32-4966cd6c4f3e' date '12 March 2009' time '6:49:01 pm' author 'eem' ancestors ((name 'VMMaker-eem.324' message 'StackVM:	stack frame printing that also works on windows.Cog:	fixed decl for method cache export.' id '1df0aa59-aec3-49eb-8259-afa9a8ef6dc4' date '12 March 2009' time '3:43:05 pm' author 'eem' ancestors ((name 'VMMaker-eem.323' message 'Cog:	fix compilation after adding compaction support.	remove warnings due to mo betta type propagation' id '33909465-d12a-476d-a250-6cd6e21dfbdc' date '12 March 2009' time '12:37:18 pm' author 'eem' ancestors ((name 'VMMaker-eem.322' message 'StackVM:	Undo damage done by VMMaker-bgf.318 which removed	the correct type declaration from functionPointerFor:inClass:	upon which Cog depends (in Cog the function is exported and	so must appear in a header file, where it requires either the	full baroque function returning pointer to function type or	a typrdef thereof).Slang:	Beefed up Andreas'' type propagatiopn casting code to deal	with aformentioned barque function type.' id 'cc6dd6d9-db9b-4354-ad86-afecef7b7038' date '12 March 2009' time '10:58:52 am' author 'eem' ancestors ((name 'VMMaker-eem.321' message 'StackVM:	a version of Brad''s bytecodeprimSize speedup which preserves	the benefit of the compact class index based instance test.	Initialize shouldPopArgs in initializeInterpreter which allows	Cog to disable the whole shebang by overriding initPrimCall.Cog:	moved rum C stack out of harm''s way (memory growth would consume it).	fixed a couple of asserts' id '2aa3c319-b928-49f5-b1e6-1d1357b8d1d6' date '12 March 2009' time '10:12:35 am' author 'eem' ancestors ((name 'VMMaker-eem.320' message 'Cog:	Code compaction completed.	Updating of references in code on GC completed.	But no support for e.g. freeing PICs that refer to GC''ed	classes or parameters.	Open PICs completed.	Fixed bug in activateInterpreterMethodFromMachineCode:	which wasn''t able to deal with primitiveTerminateTo prim	cutting back stack to a machine code frame.' id 'e67b89c5-4ad5-4e49-8d17-123d7e4a8e76' date '11 March 2009' time '11:20:17 pm' author 'eem' ancestors ((name 'VMMaker-eem.319' message 'StackVM:	Fixed race condition in forceInterruptCheck following interuptCheckChain.	Fixed stack offset bug in primitiveDoNamedPrimitiveWithArgs	(old version left a couple of args on the stack).	Addded compact class indices for LargeNegativeInteger and	ByteString because Brad''s speedup for primSize can be even	faster (but haven''t yet implemented it).Cog:	Open PICs look to be working, but need to test cache hits	properly, and have yet to implement compaction.Since class variables moved one will need to recompile the package and perhaps manually remove ShiftForWord, MethodCacheClass, MethodCacheEntries et al from Interpreter StackInterpreter and ObjectMemory.' id 'ec7e251f-662a-4326-9482-525b3d552dc0' date '11 March 2009' time '6:50:02 pm' author 'eem' ancestors ((name 'VMMaker-bgf.318' message 'Add ByteString to the Array fast-path through size.(Takes > 5 % off the unpacking time of a beeg old forum.)' id '04ed7118-5367-4a8a-89fc-c78f7f725e5d' date '11 March 2009' time '6:16:05 pm' author 'bgf' ancestors ((name 'VMMaker-eem.317' message 'Slang:	simpler type propagation scheme that simply casts results	according to return type.  Backed out of translationTypes.	Removed some unused methods.  Includes the test plugin.' id '8fae84b6-9271-4f56-acf5-92048809ced0' date '11 March 2009' time '2:16:59 pm' author 'eem' ancestors ((name 'VMMaker-ar.316' message 'Add a missing declaration in FFIPlugin>>ffiArgByValue:.' id 'bcacbb00-71ca-0e45-be6d-10727f4d48ee' date '10 March 2009' time '10:26:50 pm' author 'ar' ancestors ((name 'VMMaker-eem.315' message 'Cog:	Compacting working except for open PICs:		Annotated method reference in compileInterpreterPrimitive		Block method back-pointers updated.		call for code compaction flag cleared post compact.	Added backEnd variable for instruction stuff not related to	methodLabel.' id '089b8a3f-fc45-41ac-b384-cc96bb98d189' date '10 March 2009' time '4:59:58 pm' author 'eem' ancestors ((name 'VMMaker-ar.314' message 'Pop arguments of the return primitive when leaving a callback.' id 'd6be510f-3fc7-2b40-9356-9479d34052b7' date '10 March 2009' time '3:10:35 pm' author 'ar' ancestors ((name 'VMMaker-ar.313' message 'Fix callback handling to restore argumentCount and reset stack balance counters.' id '4f28a005-886d-6a4c-ba12-e50c154d7347' date '10 March 2009' time '3:05:28 pm' author 'ar' ancestors ((name 'VMMaker-eem.312' message 'StackVM:	Fixed bad pug in primitive dispatch optimization.  Old code	cast primitiveFucntionPointer to long when checking it was	a quick primitive index, hence any primitive loaded at or	above the 2Gb boundary was assumed to be a quick primitive.Cog:	More code compaction progress.  Relocation pass must also	unlink sends to free.  PICs are freed if any of their targets are	free.  PCs and methods adn the instruction pointer are all	correctly updated on compaction.  Usage count decremented	on compaction.  Freed methods restore the headers of their	bytecoded methods.  Compacted methods update the headers	of their bytecoded methods.' id 'dbe901ce-610b-4d55-94f3-75c1c4d0b106' date '10 March 2009' time '1:47:22 pm' author 'eem' ancestors ((name 'VMMaker-eem.311' message 'Cog:	Need to implement markAndTraceStackPage: to avoid	StackVM pulling in a typedef for CogMethod.StackVM:	The corrollary: markAndTraceStackPage: reverts to its	pre-Cog form.' id '51da3326-95c4-4283-895f-56254f3bdb5f' date '9 March 2009' time '12:21:04 pm' author 'eem' ancestors ((name 'VMMaker-eem.310' message 'StackVM:	pageSizeInSlots is smulation only and needs to be quarantined	in a cCodee:inSmalltalk: block.' id '6df9a876-b81d-42a8-962d-016ffdfebc06' date '9 March 2009' time '12:09:43 pm' author 'eem' ancestors ((name 'VMMaker-eem.309' message 'Slang:	back out of back out of multi-line plugins.int/etc.  Rev 4998	should fix the unix build with multiline plugins.int/etc.	Fix for autopropagation of types to integral values.  Slang	will propagate a wider type to a variable that is subsequently	assigned a wider integral type.Cog:	first cut of code compaction (forgets to relocate instructionPointer).	Fixed bug with allocation of stack zone due to assumption	that stack page structs were malloced.' id '34d7d2b1-eb00-40cd-b555-4a923928584b' date '9 March 2009' time '11:33:53 am' author 'eem' ancestors ((name 'VMMaker-eem.307' message 'Cog:	first cut of compaction code (forgets to update	instructionPointer during compaction).	fixed bug in computing layout of stack zone due to assumption	in StackVM code that stack pages are malloced and hence don''t	contribute to the alloca''ed size.Slang:	fix to autopropagation.  Allow widening of integer values	previously propagated as a narrower type.' id '408046d7-56b5-4a74-a7cd-6d44fc41608b' date '9 March 2009' time '10:51:48 am' author 'eem' ancestors ((name 'VMMaker-eem.306' message 'Slang:	de-struct tag the types of self-referencing struct pointers,	so that nextPage/prevPage type-check.' id '183a1e93-7b7d-42f2-b3bb-553c1cabbfbd' date '5 March 2009' time '4:54:54 pm' author 'eem' ancestors ((name 'VMMaker-eem.305' message 'Slang:	beefier type extraction that can cut down		static HANDLE foo = 0	to size (HANDLE).	Added pid_t to list of integral types (probably unnecessary but	too much effort right now to test if I can back it out).StackVM:	fixed InterpreterStackPage''s typedef printing.Me:	bummed that I blew 303 as a verison number.  knackered.' id 'a6789175-7150-4445-8f5d-6bc24af6d658' date '5 March 2009' time '4:21:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.304' message 'Slang:	beefier type extraction that can cut down		static HANDLE foo = 0	to size (HANDLE).	Added pid_t to list of integral types (probably unnecessary but	too much effort right now to test if I can back it out).StackVM:	fixed InterpreterStackPage''s typedef printing.Me:	bummed that I blew 303 as a verison number.  knackered.' id 'fd9e7247-b180-48ed-9b24-b7cb7b2f3084' date '5 March 2009' time '4:19:43 pm' author 'eem' ancestors ((name 'VMMaker-eem.303' message 'Slang:	suport float := double & vice verce.	allow floating-point := integral without a cast.	don''t assume type of min:/max: is integral.	identify signed char as integral	assume asValue: is void *.  Only one sender.Plugins:	SocketPlugin eschew the one SQSocket * in place of the many	SocketPtr' id '5e07ec69-09d1-4304-87b2-e03dd5373497' date '5 March 2009' time '2:58:04 pm' author 'eem' ancestors ((name 'VMMaker-eem.302' message 'Slang:	much more rigourous type-checking when assigning results,	inlining assigned sends, and inlining returned sends.  The	code gen now has types defined for the builtins.  This all	to avoid silent type propagation of results to variables which	can silently change the size fo a variable and hence play havoc	with pointer arithmetic.	return types computed for struct accesors.	ripped out hack for a struct type to include field renaming	macros in its typedef (can be done better with explicit	<cmacro:> accessors.StackVM/Plugins:	some ^nil''s added after final self error: foo, or whileTrue to	tell Slang a method really does return a value.	Some ''float*''''s changed to #''float *'' for type checking.	(Slang does deal with ''void*'' and ;void *'' a widespread	confusion, but there were only three heretical ''float*''''s to	deal with.' id '065f685d-03eb-4273-97be-68e89b309a5c' date '5 March 2009' time '1:51 pm' author 'eem' ancestors ((name 'VMMaker-eem.301' message 'UUIDPlugin:	added an explicit return to primitiveMakeUUID to get the	right return type.' id 'cdc95acd-5cdd-4777-9663-a63e316a59f9' date '4 March 2009' time '6:05:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.300' message 'Slang:	Fixed a regression with the "make default return type of	methods that don''t return a value void" changes that broke	SmartSyntaxPlugins (e.g. rePluginFree lost its void return type)' id '02a4adbe-f3b9-4bb4-9799-89e276e9e22c' date '4 March 2009' time '4:46:54 pm' author 'eem' ancestors ((name 'VMMaker-eem.299' message 'StackVM/Slang:	changes to bring exported utilities (primitiveFail et al) back into	line with sq.h. One can''t get away with this under gcc 2.95 on Windows.' id '59b046b7-f5da-4d10-b115-934124cd29f4' date '4 March 2009' time '3:40:47 pm' author 'eem' ancestors ((name 'VMMaker-eem.298' message 'StackVM:	replace C code to allocate StackPage structs in Cross/vm/	sqAllocStackPages.c with C code.  This also includes a bug fix	for finding the StackPage struct for an address on a stack page	which could have caused crashes in garbage collection.  Hence	exeunt src/vm/stackpage.h.	Made default return value of functions that don''t return a value	void.  As a result, lots of methods have their last expression made	into a return, or have a return to avoid a translation-time type	check failure.	Fixed bug in context variable access where a non-context	sub-instance of ContextPart could have been misinterpreted as	a married context (but I think this is unlikley to have bitten us).	Made all context inst var access < MethodIndex be done via	[external]instVar:onContext:[put:] (for Cog VM''s instruction	pointer access).Slang:	Made all addition/removal accesses to TMethod''s declarations	go throguh three accessors for ease of debugging.	Added support for signedIntToShort/signedIntFromShort (plus fixed	implementations in Integer).	Allowed vmClass to decide if bitShift:''s translation (but not >>''s	or <<''s) is to an arithmetic shift.  Will probably go with Andreas''	compromise of adding e.g. arithmeticShift:/logicalShift:.Cog:	Deferred mapping of machine code pc to bytecode pc from	divorce time to access time.  If a context''s pc field is negative	then it is a machine code pc.  This is hidden from the image	by the [external]instVar:onContext: machinery.	Made bitShift: be signed in CoInterpreter (N.B. but not in	StackInterpreter).  This for the pc mapping changes, since	mapping needs to know the block start if mapping a machine	code pc in a block, and so the offset of the block is stored in	the high 15 its of the negative pc.  Changed alignment of	blocks from 4 bytes to 8 to stretch the range of these 15 bits.	Fixed bug where pc atop a stack page that has bee split (for	divorce) was left as a bytecode pc in an interpreted frame instead	of saved and changed to cereturnToInterpreterPC.  But VM still	crashes in primitiveQuit.	Removed an unused parameter from the map enumerator	mapAt:...performUntil:.	' id 'd8dd67ed-50ed-4fa9-87df-5cf3287136b2' date '4 March 2009' time '2:04:40 pm' author 'eem' ancestors ((name 'VMMaker-bgf.297' message 'StackVM:  - primitiveProfileSemaphore needed a pop:1 - rename arg fullGG to fullGCFlag to avoid inlining conflict err.Note - Stack VM generated from this VMMaker does not work(crashes early in lookupMethodInClass somewhere).But I''ve verified the profile-prim by generatingfrom an older revision (the one we have c source for)and that profiles successfully now.' id '3586a407-dec7-4528-8536-95c4c0620ca9' date '2 March 2009' time '2:51:53 am' author 'bgf' ancestors ((name 'VMMaker-eem.296' message 'StackVM:	back out of changes to mapStackPages that accomodate CoInterpreter	because CoInterpreter needs its own version anyway.	Fixed bug in GC prim forgetting to write-back current head	frame pointers (which could cause garbage retention).Cog:	runs the benchmark suite image without crashing (I''ll post	performance figures once I build from this check-in).	Fixed bug in mapStackPages that caused a saved ip of	ceReturnToInterpreterTrampoline to be moved with the	method (eek!).	Fixed bug that overlapped first slot of stack pages struct	with first (highest) slot of top stack page.  Made CoInterpreter	use CoInterpreterStackPages and dropped no-longer-necessary	use of C code from Cross/vm/sqAllocStackPages.c	Added nascelle for code compaction (flag to call for code	compaction, cogCompiledCodeCompactionCalledFor naturally,	plus testing the flag in checkForEvents:mayContextSwitch:.	But compaction routine is so far just a stub.	Use sigsetjmp/siglongjmp for returning to the interpreter for	performance.Slang:	modified ancilliaryClasses scheme so only vmClass contrinutes	them, allowing a subclass to remove ancilliary classes added	by a superclass (i.e. StackInterpreter''s InterpreterStackPages	replaced by CoInterpreter''s CoInterpreterStackPages)' id 'bba6534b-cd97-44c4-828e-1593888f2c51' date '1 March 2009' time '9:02:27 pm' author 'eem' ancestors ((name 'VMMaker-eem.295' message 'StackVM:	fixed a typoe.  Added a tiny streamlining to primitiveSuspend.Cog:	update class tags in linked sends during GC.	icache flushing after code modifications for inline cache	flushing and GC.	Use dispdbg.h''s assert def (non fatal; the assert defs should	move to e.g. sq.h).	Hiding of cogMethods from GC apparently fixed using an	unmarked empty header.  At least system runs for longer	this way round.' id 'bc4e1d65-90ad-44b2-9733-3930a749a3d6' date '28 February 2009' time '12:22:36 pm' author 'eem' ancestors ((name 'VMMaker-eem.293' message 'Slang:	fix slip in TSendNode>>nodesDo:unless: to make sure	asserts: are properly  undisturbed by inlining.' id 'dff7906f-2c49-4278-9401-8bccc2e6ef13' date '27 February 2009' time '10:00:13 pm' author 'eem' ancestors ((name 'VMMaker-eem.292' message 'StackVM:	renamed a local flag to avoid a conflict when isContext is not	inlined.' id 'fe6db8bd-1a61-4944-b293-3650b11cd19c' date '27 February 2009' time '7:06:42 pm' author 'eem' ancestors ((name 'VMMaker-eem.291' message 'Slang:	prevent inlining into assert: arguments to keep the asserts concise and readable' id '270e3881-c252-4f28-bb3e-164bfe8a5829' date '27 February 2009' time '6:35:11 pm' author 'eem' ancestors ((name 'VMMaker-eem.290' message 'Cog:	fixed bug in handleMNUInMachineCodeTo:lookupClass:mayLink:	which pushed instructionPointer prematurely.	added asserts to check for frame contexts being context objects	in efforts to track down what looks like a stack page tracing bugSlang:	added a nodesDo:unless: enumerator to aid in avoiding inlining	expressions in asserts. My attempts to apply this have so far failed.' id '85a17bcd-8d1c-4c82-9ff4-1e5f8cbf1579' date '27 February 2009' time '5:49:54 pm' author 'eem' ancestors ((name 'VMMaker-eem.289' message 'Slang:	broken attempt to avoid inlining arguments to assert: to	keep them readable.  Where does TMethod''s complete	get set to true?' id '6aba9ce1-5bdb-49b9-a9f9-2c66a9f00440' date '27 February 2009' time '5:41:11 pm' author 'eem' ancestors ((name 'VMMaker-eem.288' message 'Cog:	Eliminated tricky 0 map end byte in favour of much simpler 16rFF.	restored temporary GC prim for debugging the map & gc.' id 'eb947bdb-2db1-4d40-8266-0941b6073f16' date '27 February 2009' time '12:25:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.287' message 'StackVM:	made bteAt:put: in the smulators answer the value stored.Cog:	Drop before changing map termination byte to 16rFF.	fixed stupid bug with backward branch.  As Adam says toddlers	start walking as soon as they work out how to take a step backwards.	changed asssignments of map annotations.' id 'dc3e2129-6fc7-4ac4-8740-a73ac028c0b4' date '27 February 2009' time '11:57:17 am' author 'eem' ancestors ((name 'VMMaker-eem.286' message 'Cog:	Circular trace buffer for sends, block activations,	context switches, incremental & full GCs.StackVM:	null refactorings to support the above.' id '81d97909-f1c7-4ef6-9eaa-49ef1d0da34d' date '26 February 2009' time '9:39:57 pm' author 'eem' ancestors ((name 'VMMaker-eem.285' message 'Cog:	implemented in-line cache flushing/send unlinking.	implemented updating of oops in code (for GC).StackVM:	null refactorings to aid in the above' id 'c9783aeb-1dfc-43cd-a5ea-493e4f64d16f' date '26 February 2009' time '7:16:15 pm' author 'eem' ancestors ((name 'VMMaker-eem.284' message 'Slang:	added shouldBeImplemented supportCog:	shrank CogMethod header saving 1 word (still need to change	aborts to an abort profit from this, but it can wait).	Changed blockEntry from direct pointer to offset.	Added 16-bit fetch.	Fixed printing of closed PICs.	Added search for cog methods with a specific selector' id '7ffbb203-ecf3-4e81-bdbf-29ebbc7e736c' date '26 February 2009' time '10:23:25 am' author 'eem' ancestors ((name 'VMMaker-eem.283' message 'Cog:	automatic structure surrogate accessor generation in VMStructType.	New CogBlockMethod & CogMethod layout saves a word (or two in 64-bits)' id 'de8fa1a2-415e-4975-89ed-7a6dbd6d710d' date '25 February 2009' time '10:28:55 pm' author 'eem' ancestors ((name 'VMMaker-eem.282' message 'Cog:	automatic structure surrogate accessor generation in VMStructType.	New CogBlockMethod & CogMethod layout saves a word (or two in 64-bits)' id '1fa91bb7-f836-45a1-9c4e-dd9c4324c4dc' date '25 February 2009' time '10:26:51 pm' author 'eem' ancestors ((name 'VMMaker-bgf.281' message 'Missing receiver pop in GSM primitive.' id 'da4f2354-133d-4de1-9ca7-5b5687a4b018' date '25 February 2009' time '9:44:52 pm' author 'bgf' ancestors ((name 'VMMaker-eem.280' message 'Slang:	Make vmmaker.config have every entry in the array to	 be on a separate line, again to be diffable in svn.' id 'cca6c431-794b-45a6-9007-f5bcaa45aee9' date '25 February 2009' time '1:50:13 pm' author 'eem' ancestors ((name 'VMMaker-eem.279' message 'Fix init bug in CCodeGeneratorGlobalStructure providing a default def for the structDefDefine.' id 'c32f3a4b-b87a-4c9d-b986-ef1c2226dce9' date '25 February 2009' time '1:30:25 pm' author 'eem' ancestors ((name 'VMMaker-eem.278' message 'Fix class hierarchy snafu with CoInterpreterStackPages andInterpreterStackPages both having a class inst var timeStampduplicating that inherited form VMClass.' id '5c05ede1-2bd4-40d8-aa54-58e32dee2b5e' date '25 February 2009' time '1:02:34 pm' author 'eem' ancestors ((name 'VMMaker-eem.277' message 'Slang:	plugins.ext and plugins.int lists have one plugin per line with	backslashes to escape the newline to make them svn-diff-friendly' id 'b130769f-0cdb-47b3-b820-6fc821e82701' date '25 February 2009' time '12:29:43 pm' author 'eem' ancestors ((name 'VMMaker-eem.276' message 'StackVM:	fix for gc crash on startup.  NewObjectMemory>>initializeMemoryFirstFree:	should not abort if it can''t find space for forwarding blocks.	Reinstatement of code that "fails" primitives that cut back	their stack by the wrong amount.  "fail" in quotes because	the primitive still runs, and without a primitive error code	in the method the failure may appear mysterious.  But this	is much better than silently continuing.	By default functions and inst vars of the interpreter are now	private (static).	Split flushMethodCache into flushMethodCache and flushAtCache.	Changes to stack limit check asserts; being more careful about	order and disabling smashing of the limit while checking.	Changed interpreterVersion to be more accurate (states its a	Closure VM and distinguishes between Context, Stack and Cogit	VMs.	Correct simulation of primitiveBitShiftLargeIntegers.	Some shouldNotImplements for compatibility with the CoInterpreter.Slang:	support for shouldNotImplement (for the above)	support for C preprocessor directives (see forceInterruptCheckFromHeartbeat)Cog:	Broken as I''m midway through a change in CogBlockMethod''s fields.	Interrupt checking in backward branches.	Fix for bug of cogging methods with 75 bytes of literals.  Now	cogs methods with less than 40 literals.	Initial code for send unlinking (inline cache flushing)	Nicer syntactic sugar for annotating instructions makes annotation	constants private to Cogit.  Better naming of annotation displacements.	Ability to override specific systemAttributes in the simulator (e.g. to	simulate images that takle doits from the command line)	Beginnnings of code to autogenerate accessors in surrogate classes.	Too error-prone and tedous ot do manually.' id 'e7e1ef91-2c3a-4f06-aacd-04a789ed57af' date '25 February 2009' time '10:13:29 am' author 'eem' ancestors ((name 'VMMaker-eem.275' message 'Cog:	Cog computes!  Or at least it responds to input.  Problem was	lack of suitable override of backward branches in CoInterpreter.	Still need to implement ackward branches in machine code.	System falls over wiht a compilation error when opening	a browser.  It is on its way!!	More assert code for checking frame validity.	Sionara CoInterpreter>>frameMethod: which erroneously used	the mask to get rid of hasContext/isBlock flags valid only in	maching code frames.StackVM:	bug fix for 64-bits in pushClosureCopyCopiedValuesBytecode	(courtesey of dtl).	Use of iframeMethod: for compatibility.' id '7e9c8c00-14e0-46fa-9746-3bbbc93e3ab3' date '21 February 2009' time '5:56:07 pm' author 'eem' ancestors ((name 'VMMaker-eem.274' message 'Cog:	Fixed block compilation order to pc/depth-first order.	Image now starts-up.  Input events do not yet work.	employed suppressHeartbeat.' id '00a73123-d504-44da-80a1-171e7b951e53' date '21 February 2009' time '3:02:09 pm' author 'eem' ancestors ((name 'VMMaker-eem.273' message 'Cog:	drop before fixing block compilotion.  For binary tree block	dispatch to work blocks must be compiled in pc/depth-first	order not breadth-first order. (doh!)	Means scanning for blocks must recurse.	Break-pointing improvements, compilation selector break	triggers when seting a previously-compiled methods'' selector.	Also provide a break for compilation of a specific bytecode method.	Bug fix in scan for block start pcs for disassembly/method map assert.' id 'cb6bbedf-e6d4-470f-9b62-79ff03282da1' date '21 February 2009' time '1:31:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.272' message 'Cog:	fixed non-local return from machine code.  Bug was	not keeping to result push/replace contract.  In machine	code the caller pushes the result but in the interpreter	the callee pushes the result.	Now debugger comes up for problem (presumably	 JIT-related VM bug) in starting finalization process.StackVM:	fixed bug in simulation of positive64BitValueOf:' id '5291fb6c-a745-428e-9d9c-05f7d6b76a03' date '20 February 2009' time '10:11:50 pm' author 'eem' ancestors ((name 'VMMaker-eem.271' message 'Cog:	Drop before fixing known broken non-local return in machine code.	fixed bug computing PIC ceMNUFromPICMNUMethod:receiver:	by using correct return offset.	fixed bug in cPIC case compilation, jumping to right target if an MNU case.	Added compilation breakpoint code to PIC compilations.	fixed bug with recordLastInstruction which could cause unbounded growth in lastNInstructions (simulation).StackVM:	assign method only through setMethod: for assert checking in CogVM.	renamed signalLowSpaceAndSaveProcess to more accurate	setSignalLowSpaceFlagAndSaveProcess.	replaced some self nilObject''s with some nilObj''s.	fixed assignment to method in transferTo:, sio not assigned unless in interpreter frame..' id '57c64390-de4b-43c5-8cb2-5d4e4314a23b' date '20 February 2009' time '9:45:08 pm' author 'eem' ancestors ((name 'VMMaker-eem.270' message 'Cog:	It runs!  It blows up pretty quickly, but the C version does	draw the initial screen of a dev image before going kablammo.	Main fix was removing an cCode: '''' inSmalltalk: around some	needed stuff (blush).	Lots of type defs added to CoInterpreter to reduce compiler warnings.	Added a plausible (but untested) implementation of	ceMNUFromPICMNUMethod:receiver:	Support for breaking at compilation for a specific selector.StackInterpreter:	make sendBreak:point:receiver: less presumptuous	add lengthOf: to api for Cogit breakpointingSlang:	CCodeGenerator asks vmClass if export pragma should be produced or not.	Add Integer>>asUnsignedInteger' id 'c023cdc1-ec64-4c17-b00a-4dc92d4bd45c' date '20 February 2009' time '3:44:07 pm' author 'eem' ancestors ((name 'VMMaker-eem.269' message 'Cog:	more fixes for disassembly.' id '3cdb4f26-6c36-4de9-b645-b0c21e9046a5' date '19 February 2009' time '6:06:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.268' message 'Cog:	Implemented MNU processing in unlinked sends and open PICs	added relevant relative calls to method map (ceMustBeBoolean, cePushThisContext etc).	revamped pc mapping, which now deals with complex cases of methods weith nested blocks.	fixed method map printing in disassembly.	improved block dispatch in cases where there are three dispatches.StackVM:	fixed extra cr in printContext:.' id 'a8142fbb-10f0-428f-8ed1-401a5ed0deba' date '19 February 2009' time '5:17:28 pm' author 'eem' ancestors ((name 'VMMaker-eem.267' message 'StackVM:	Integrated Igor''s suggestion of initialing headerTypeBytes statically.	Made signed64BitIntegerFor: simulateable.	Moved primitive table max check into functionPointerFor:inClass:	where it absolutely needs to be for safety (e.g. of	primitiveDoPrimitiveWithArgs).Cog:	Cog computes!  It nearly completes starting up the	1.2.47 development image.  It redraws most of the	screen a few times and is in the process of reporting	an error somewhere in the finalization process when	it gets to unimplemented MNU code.	Bug fixes to method mapping code. #== needs a map	entry because it is recognized as a send by the	bytecode scanner.  doubleExtendedDoAnything also	needs an entry when not a send for the same reason.	Bytecode span code needs to take method to scan as	an argument; not assume it is the method being compiled.	Implemented interpret-from-closed-PIC.  Refactored	executing interpreeter m ethods from machine code,	sharing execution code between three clients.  Also	realized that methodShouldBeCogged: is refusing to cog	methods with more than 18 literals instead of 75 as intended	(75 // 4 = 18).	Bug fix in closed PIC compilation.  Code accessed	interpretCall before it had been initialized, accessing	a stale value.	Implemented cePositive32BitIntegerFor:, hopefully completing	the compiled at: primitive.	Bug fix in ceSend:... where a method found by hierarchy	lookup could have been translated and have a nil selector.	To be linked at a send site it must have a selector.  So	selector is assigned if nil.	CoInterpreter needs its own version of roomToPushNArgs: because	method headers are not directly in frameMethod:.' id 'c860d289-83e0-4eb2-83d9-69b3c33aae51' date '18 February 2009' time '9:54:50 pm' author 'eem' ancestors ((name 'VMMaker-eem.266' message 'Cog:	pc mapping that should support blocks also (though not tested for blocks yet).	runs the tinyBenchmarks test image (simulated)' id '014dab63-384f-4df9-88f4-f86bf3ee1778' date '18 February 2009' time '3:41:48 pm' author 'eem' ancestors ((name 'VMMaker-eem.265' message 'Cog:	drop of broken mcpc<->bcpc mapping for blocks.	broken because it expects block startpcs to be embedded	in the block dispatch code, which is unnecessary because	the info is embedded in the code in the form of the constants	used to compare a closure''s startpc against in the dispatch	tree.' id '2d775d99-c486-401d-894b-d021efa90f10' date '17 February 2009' time '8:24:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.264' message 'Cog:	post pathetic peephole pass publish' id '4c1711f1-135a-4d32-b3cb-4d303acdbc9b' date '16 February 2009' time '12:27:22 pm' author 'eem' ancestors ((name 'VMMaker-eem.263' message 'Cog:	very interesting.... but stoopid!	added a peephole pass for Push followed by Pop.	But didn''t affect benchFib at all because in both Push/Pop pairs the pop is a jump target.	Conclusion, we need a proper deferred code generation approach to stack elimination. Half-assed peephole passes have no effect and merely complicate the code.' id '0c4ed0be-3f11-4d06-be99-483a305152a4' date '16 February 2009' time '12:18:09 pm' author 'eem' ancestors ((name 'VMMaker-eem.262' message 'Cog:	runs example benchmark image which ismply evaluates tinyBenchmarks.		Mac OS X Debug: 271330153 bytecodes/sec; 31599498 sends/sec		Mac OS X Fast:    366237482 bytecodes/sec; 31599498 sends/sec	doesn''t run in Deployment config (doesn''t get to first ceTraceLinkedSend)	cogit.c compiles without any warnings.	Upped stack page size and added 256 bytes of headroomSlang:	added a class-side default return type (VMClass class>>implicitReturnTypeFor:)	added translation for expr asUnsignedInteger => ((usqInt)expr)' id '6db9cc5e-70c0-4343-a480-eb9fb9d34400' date '15 February 2009' time '10:36:15 pm' author 'eem' ancestors ((name 'VMMaker-eem.261' message 'Cog:	fixed frameness for block compilation.	18k bytecodes before wimping out (incomplete WordArray>>at:)	while raising a debugger because of failing		AcornFileDirectory class(FileDirectory class)>primPathNameDelimiter' id '56328e88-e754-49db-b0dc-2d74c0f67d70' date '14 February 2009' time '1:06:50 pm' author 'eem' ancestors ((name 'VMMaker-eem.260' message 'Slang:	allow macros to be renamed so we can have halt and halt: cohabit.	check for struct class method arguments shadowing struct accessors.	emit error dedfault case for switchs with no default (cases with no otherwise)Cog:	bug fix for bad bug in gen:operand:	bug fixes for arguments shadowed by accessors.	bug fix for block activaton tracing	assert checking for jump targets	bug fix in C vs Smalltak for addressIsInFixups	bug fix in decl for dasMethodLabel	hacked Mac OS C stack alignment simulation' id '61a5f784-7e81-4db6-9dae-75cd5d7416ad' date '14 February 2009' time '11:41:13 am' author 'eem' ancestors ((name 'VMMaker-eem.259' message 'Cog:	maintain C stack alignment in run-time calls (calls through the trampoline)' id '467570f6-c591-4538-9328-b244f6c8b5ca' date '13 February 2009' time '3:46:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.258' message 'Cog:	better support for ceTraceLinkedSend (saving & restoring registers around the call).	beginnings of support for maintaining C stack alignment in run-time calls (assert check, defines, etc)' id '84760163-0004-4e5f-81a9-d327f37825cb' date '13 February 2009' time '3:15:25 pm' author 'eem' ancestors ((name 'VMMaker-eem.257' message 'StackInterpreter:	made memory private to interp.c (platforms/Mac OS/vm/sqMacMemory.c changes also).Cog:	compute startMemory correctly and cache it in heapBase.	added a Debug intercept for ceEnterCogCodePopReceiverReg.Slang:	check if ancilliary headers have changed before writing them out.' id '934f24aa-6bb9-4407-b5b3-aedb24aa3c25' date '13 February 2009' time '11:50:33 am' author 'eem' ancestors ((name 'VMMaker-eem.256' message 'Slang:	changes to better track struct types.	changes to support header generation etc.	changes to make most methods private/static.Cog:	Many minor changes to make the CoInterpreter and Cogit modules link.	Generate a CPUID routine for icache flushing.	Cog now links on Mac OS X but doesn''t yet run, falling over in initializeInterpreter:.' id 'eb2c0e3e-d76c-494a-8c52-431f7f309144' date '12 February 2009' time '11:38:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.255' message 'Cog:	exported.  Compiles but for some undeclareds.Slang:	many mods/hacks to support structure types.Dropping here because StackInterpreter at least somewhat broken (needs updating for the new structure support)' id '0c177b72-3b5f-4bee-9b32-af65bfb96057' date '12 February 2009' time '12:16:18 am' author 'eem' ancestors ((name 'VMMaker-eem.254' message 'Cog:	fixed ioMSecs bug in simulator by backing-out of in-memory cache of stackLimit and incrementing byteCount on every stackLimit access (frame building send) from machine code.' id 'dd8c4e02-c928-4c20-9b30-ee80285dd74f' date '8 February 2009' time '10:50 pm' author 'eem' ancestors ((name 'VMMaker-eem.253' message 'Cog:	Fixed bug in ensurePushedInstructionPointer that broke primitivePerform, primitiveExecuteMethod et al	Unnecessary performance optimization of the simulator because I was too stupid to realise that once the VM is entirely in machine code there is no more byteCount and hence the microsecond clock stops.StackInterpreter:	Refactoring to allow CogVMSimulator to cache a copy of stackLimit in-memory	Better short-frame printing' id '36b67e7a-59ef-463a-b17b-4da1b23a1215' date '8 February 2009' time '10:11:48 pm' author 'eem' ancestors ((name 'VMMaker-eem.252' message 'Cog:	fixed non-local return from machine code fraqme to machine-code frame	implemented primitiveBitXor' id 'f34fafe5-61f1-46d1-8aae-8a4dc2817080' date '7 February 2009' time '8:03:22 pm' author 'eem' ancestors ((name 'VMMaker-eem.251' message 'Cog:	implemented primitiveStringAt.	implemented non-local returnStackVM:	refactored findUnwindThroughContext: to lend help to Cog' id '94fea49f-00e4-47f6-afd4-c4fb28f5c2c0' date '7 February 2009' time '6:34:35 pm' author 'eem' ancestors ((name 'VMMaker-bgf.250' message 'HostWindows prims to get the host screen work-area(so we can position windows smartly from within Squeak.)' id 'fa395bfe-5ed0-4bdb-a689-ab3dfcab4d7e' date '7 February 2009' time '6:13:45 pm' author 'bgf' ancestors ((name 'VMMaker-eem.249' message 'StackVM:	removed unused quick primitive constant methodsCog:	fixed stack offset bug with inlined #==	moved primitive fake addresses further down to avoid confusion' id '5120c44c-2fb9-4c55-a242-3aa75f81bb72' date '7 February 2009' time '11:05:14 am' author 'eem' ancestors ((name 'VMMaker-eem.248' message 'Cog:stack page mapping generalized to be usale by Cog and StackInterpereter.  Cog now runs to the first non-local return.' id '2a6aa9da-a84d-4c2b-9586-b68eda302b42' date '6 February 2009' time '9:35:35 pm' author 'eem' ancestors ((name 'VMMaker-eem.247' message 'StackVM:	fixed bug in primitiveInstVarAt[Put] for contexts.  Old code could incorrectly widow.Cog:	implemented mc<->bc pc mapping	eliminated some bogus frameless method determinations.	fixed range check in baseReturn	implemented temporary Open PIC code (simply call the interpreter).	added methods to labelling (so e.g. linked sends indicate their target method''s selector)	fixed methodZone>>methodFor: infinite loop	less chatty printing as befits a more functional VM	made cog stack page simulator use coInterpreter for memory access	made frame print use hex for addresses throguhout' id '98d22fc1-8d09-4a4e-847b-bd391702a682' date '6 February 2009' time '9:05:56 pm' author 'eem' ancestors ((name 'VMMaker-eem.246' message 'Cog:	Speeling error in bytecode table that mader a whole framefull => frameful load of difference.  After the fact asserts to catch it isicne it''l never happen again :(.	Now runs to the first attempt to create an OpenPIC.' id 'efd5db94-74be-41ad-81c1-bcd63a427488' date '5 February 2009' time '8:09:15 pm' author 'eem' ancestors ((name 'VMMaker-eem.245' message 'Cog:	Implemented pc mapping above method metadata.	method metadata integrated with disassembly.	Renamed CogMethod>>method to methodObject' id '14860bba-0535-42a3-a0d6-f8fdfd866bd8' date '5 February 2009' time '5:59:17 pm' author 'eem' ancestors ((name 'VMMaker-eem.244' message 'Cog:	implemented machine code method metadata.	cleaned up initializatin of compilation arrays, etc' id '12db9e8d-d54f-4ee3-bfba-5dd333e10a7d' date '5 February 2009' time '1:53:17 pm' author 'eem' ancestors ((name 'VMMaker-eem.243' message 'Cog:	implemented size and at: primitives.	As the halt says "time to implement machinecode pc to bytecode pc mapping".StackVM:	more explicit about CallerSavedIP vs CallerSavedContext to ease CoInterpreter subclassing.' id 'f92da594-e2f5-4fbe-8c14-2dd003a93603' date '4 February 2009' time '12:57:14 pm' author 'eem' ancestors ((name 'VMMaker-eem.242' message 'Less trixy more robust return code fror compiled interpreter primitive call.  Simply push instructionPointer to reestablish return pc instead of repositioning sp.Consequence: implemented married context inst var assignment.Fixed frameCallerContext: assert.' id 'f517882b-02e4-44e7-9e69-b9b4334b298d' date '3 February 2009' time '9:51:05 am' author 'eem' ancestors ((name 'VMMaker-eem.241' message 'Changed interface between compiled code and CoInterpreter away from stackPage headFP/headSP to framePointer/stackPointer.  Plenty of simplification.Figured out transitions between interpreter and machine code and the instructionPointer convention (i.e. wen it is pushed and when it is ffree floasting).Support for performAt, primitiveExternalCall et al that require messageSelector and/or newMethod to be set.Implemented context switch, stack overflow, base returns and no-context-switch block entry.Disabled at cache for machine code primitives (prior to implementing compiled at:[put:] primitives).' id '5181883f-ab40-466e-aa3d-29589c9d7af1' date '3 February 2009' time '7:59:37 am' author 'eem' ancestors ((name 'VMMaker-eem.240' message 'Added necessary ewxport decl to setInterruptCheckChain:.Bludgeoned loadConfigurationFrom: into keeping relative plaths (I hope).' id '624b346b-76ad-4cdd-96ab-e242a684267f' date '30 January 2009' time '11:00:32 pm' author 'eem' ancestors ((name 'VMMaker-eem.239' message 'Cog:	generate the stack check offset.' id '7a70cc8d-5228-48e4-a8e1-edb280467423' date '30 January 2009' time '2:16:48 pm' author 'eem' ancestors ((name 'VMMaker-eem.238' message 'Cog:	CogBlockMethod numArgs, numTemps, type renamed to	cmNumArgs, cmNumTemps, cmType for better usage tracking' id 'd71d5b4c-83fa-4b83-8112-4cfa40f97bad' date '30 January 2009' time '11:48:42 am' author 'eem' ancestors ((name 'VMMaker-eem.237' message 'fixed the "how much state to svae when marrying a context" bug.  VM now saves only arguments but fills in the context''s stack with nils for stack contents above the arguments up to the stack pointer.   Without this tempAt:put: would fail for a widowed on:do: activation.Lots of apparent change because marryFrame: => marryFrame:SP: and so callers provide the sp.  More use of ensureCallerContext: simplifies things.Cog:runs to first stack overflow.changed layout of CogMethod header to provide a filed giving the offset to the stack overflow check jump for reentering the flow after stack overflow.' id '536364f1-c58b-4702-8a0b-b161f86e4018' date '30 January 2009' time '10:46:13 am' author 'eem' ancestors ((name 'VMMaker-eem.236' message 'Cog:	implemented ability for primitiveClosureValueNoContextSwitch	and primitive 198 to do their thang and not swing.	implemented moveFramesIn:through:toPage: for Cog framesCog now correctly switches processes but can''t finish ovefflowing the stack (no way to locate correct continuation)' id '28caa59d-db56-403f-911a-ea12218cfa7b' date '29 January 2009' time '6:39:39 pm' author 'eem' ancestors ((name 'VMMaker-eem.235' message 'Fix to regression introdeuced by saving only arguments in married contexts.  Need to also save the cpied valiues for a block activation to avoid out-of-bounds errors in ContextPart>>handleSignal: when trying to set handlerActive back to true.Cog:	extending closed PICs.	fixed bad bug in makeBaseFrame:	added cache flushing code for inline cache alteration and pic extension' id '4ad08b73-382d-4003-8620-c49e69adc489' date '29 January 2009' time '4:09:27 pm' author 'eem' ancestors ((name 'VMMaker-eem.234' message 'Cog (now context switches):	fixed bug in size of doubleExtendedDoAnythingBytecode	genLabel => Label	finessed bytecode pc to machine code pc mapping fror the moment (just interpret :) ).	implemented Context inst var access.	simplified CogVMSimulator by making cCoerceSimple:to: produce method surrogates.' id 'd7ab005c-488f-4779-b837-c2dbf4f236fb' date '29 January 2009' time '1:08:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.233' message 'Implemented super send for Cog.  One ceSend: method to rule them all.' id 'daa3bbee-6474-4737-a4ab-daa7df1537d3' date '29 January 2009' time '10:27:53 am' author 'eem' ancestors ((name 'VMMaker-eem.232' message 'Cleanups in light of better understanding of CoInterpreter/machine code transitions.- to ceEnterCogCodeReturnReceiver (no need for a hack argument anymore).- stack page loses savedReturnPC- fewer foo isSurrogate ifTrue: [foo] and more asIntegers' id '648265cb-3ae7-409d-8ba7-e82f0bb6e79c' date '29 January 2009' time '9:49:42 am' author 'eem' ancestors ((name 'VMMaker-eem.231' message 'Finally fgured out the correct interaction between machine code callers of interpreted primitive methods.  Cog now gets as far as the first super send.' id '6604cdc8-3eb3-4bbc-bea5-3a97d24ced0d' date '28 January 2009' time '11:52:59 pm' author 'eem' ancestors ((name 'VMMaker-eem.230' message 'Bug fix to unwind checking primitives which now only find method activations, not block activations.  This could conceivably affect critical: et al (for the better; this brings the behaviour back in line with the Closure and Context VMs).Bug fix to context switch on primitive failure.  VM no longer allows a context switch when failing primitive 198 (primitiveMarkUnwindMethod).  Should fix a small window in critical:.Added primitiveDoNamedPrimitiveWithArgs for the debugger to evaluate external calls a la primitiveDoPrimitiveWithArgs.Added an interruptCheckChain to the VM to allow other clients (i.e. the BocksIA32Plugin) to return (e.g. from a run loop) when the VM wants to do an interrupt/event check.Added code (to slowPrimitiveResponse) to fail unbalanced primitives (but this is disabled for now because there is an unbalanced primitive in UnixOSProcessPlugin that causes the system to fail horribly on startup).shaved the allocation primitives to avoid unnecessarily precomputing the fill value if its not used.  So the inner allocation routines and callers change from ***doFill:with: to ***doFill:format:.shaved an unused parameter from the stack overflow checker, now better named.addNewMethodToCache: now takes the class as an argument instead of relying on lkupClass global.marryFrame: now only intializes the arguments part of the stack state instead of temporaries.  This means that widowed contexts hold onto less.  This should be unnoticeable in practice.Progress with Cog.  VM now gets about 20,000 sends in.  Syntactic sugar for RTL.  Better disassembly (blocks show up nicely).  Better integration etween CoInterpreter and machine code (setjmp/longjmp transfer between the two when necessary).' id '14b64f23-0ddf-470f-8ed8-a9f67ea610c9' date '28 January 2009' time '5:21:45 pm' author 'eem' ancestors ((name 'VMMaker-eem.229' message 'Drop prior to diagnosing regression in StackInterpreter' id 'f3facc34-5d8a-4965-809e-c57b647bc61a' date '28 January 2009' time '10:33:32 am' author 'eem' ancestors ((name 'VMMaker-eem.228' message 'Syntactic sugar applied.  Gets as far as pushActiveContext :)' id '9c19f4cd-2466-41a6-92a7-85efd1233e65' date '22 January 2009' time '2:17:50 pm' author 'eem' ancestors ((name 'VMMaker-eem.227' message 'Drop before syntactic sugar putch	self gen: FooX operand: o=>	self FooX: o' id 'e8a37ce0-e4a5-41f4-a394-7645523a6e3d' date '22 January 2009' time '11:28:57 am' author 'eem' ancestors ((name 'VMMaker-eem.226' message 'Changed over to "backwards" (i.e. congruent with subtract) compare.' id '17aa1874-2bc3-4481-a841-df4486fe9170' date '21 January 2009' time '10:11:29 pm' author 'eem' ancestors ((name 'VMMaker-eem.225' message 'Drop before bowing to the inevitable and reversing the sense of CmpR, CmpCqR & CmpCwR' id '7a2e44e5-5417-4282-87fe-5d88ed461d93' date '21 January 2009' time '9:35:48 pm' author 'eem' ancestors ((name 'VMMaker-eem.224' message 'Saving state of Cog before changing back to 0 as the caller saved frame pointer for a base frame.' id '37e81390-5f13-4e5c-9efc-999feceb5c1a' date '20 January 2009' time '5:24:34 am' author 'eem' ancestors ((name 'VMMaker-eem.223' message 'Cogit uses the run mode of the Bochs plugin.Better send logging.' id '90119cdf-3262-4a03-95c7-0d4c6e705bea' date '14 January 2009' time '4:53:58 pm' author 'eem' ancestors ((name 'VMMaker-eem.222' message 'cosmetic changes guaranteed to numb the pain.Reformatted clause in commonReturn.Eliminated ugly assymetry with instVar:ofContext: in storeMaybeContextReceiverVariable:withValue:/instVar:ofContext:put:' id '276de9c3-ae9f-4dda-b3b1-a0115c906b49' date '13 January 2009' time '11:04:58 pm' author 'eem' ancestors ((name 'VMMaker-eem.221' message 'Fixed bug in stack simulator''s firstIndexableField:.Used more informative selector in changeClassOf:to:/primitiveChangeClass' id '51b44801-a9df-4949-a076-c3ed277b2343' date '13 January 2009' time '5:07:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.220' message 'Fixed bug in context/frame marriage checking.  There was an extremely unlikely chance of the system assuming a context was married to some other frame.  This fix is needed but I doubt very much we have ever been bitten by it.Much of block support implemented in SImpleStackBasedCogit.Some straggling methods (senders of expandCases) now use pragmas.Fixed printop: for Interpreter.  Fixed method that sent successful instead of tested successFlag.' id '6e8d7797-222a-4a2f-8c5f-1b9dea84c575' date '13 January 2009' time '3:35:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.219' message 'Fixing class variables in ObjectMemory Interpreter and StackInterpreter because Monticello can''t quite hack shared pools when class variables are moved into sharefd pools.You may have to do this manually:	#(BaseHeaderSize BytesPerWord RootBit) do:		[:k| Undeclared declare: k from: ObjectMemory classPool].	Undeclared declare: #ValueIndex from: Interpreter classPool.	Undeclared declare: #ValueIndex from: StackInterpreter classPool.	ObjectMemory withAllSubclasses do:		[:c| c recompileAll.  c class recompileAll],	Undeclared removeUnreferencedKeys.	self assert: (#(BaseHeaderSize BytesPerWord RootBit ValueIndex) noneSatisfy: [:k| Undeclared includesKey: k])' id '9f6a4902-98d8-40f5-bc93-a8ed4ee9d252' date '8 January 2009' time '6:43:33 pm' author 'eem' ancestors ((name 'VMMaker-eem.218' message 'Interim Cogit class initialization fix.' id '1937a174-e82a-4bdd-be1e-60d992b14fa7' date '8 January 2009' time '6:17:22 pm' author 'eem' ancestors ((name 'VMMaker-eem.217' message 'Fixed bug in activateNewMethod which causes a primitive failure on perform or executeNewMethod to crash.Moved more constants to shared pools for Cog.Plenty of progress with Cog. Now runs up to isKindOf: in Cursor class>>currentCursor:.' id '17b3dd47-c541-4b05-a55e-9d75328d3fd2' date '8 January 2009' time '5:12:31 pm' author 'eem' ancestors ((name 'VMMaker-eem.216' message 'Should also have said fixed NaN comparison for <= & >=.  VMMaker-eem.210 is not quite right.' id '6a2186bf-e0d3-43c8-933c-835cc90a772a' date '6 January 2009' time '9:38:46 pm' author 'eem' ancestors ((name 'VMMaker-eem.215' message 'Shaving time from float prims by removing redundant tests from inner functions.Cosmetic changes to StackInterpreter (e.g. type: ''double '' => type: #double).Cog generates non-trivial methods, calls interpreter primitives correctly and returns to interpreter.  Gets confused in Bitmap>>decompress:fromByteArray:at: invoking at: with an index one too big for the byte array.' id 'eda48979-5772-4be3-9e2f-7bdf8271d280' date '6 January 2009' time '9:36:20 pm' author 'eem' ancestors ((name 'VMMaker-eem.209' message 'Checking-in Cog progress so far.  Much interoperability between interpreter and generated code funcitonal (see CoInterpreter>>ceSend:to:numArgs:).  System executes much of initial Bitmap>decompress:fromByteArray:at: that decompresses the cursor on start-up.' id '9d2f907d-fe73-40f6-98d2-ff67b7d6e4a6' date '5 January 2009' time '5:36:31 pm' author 'eem' ancestors ((name 'VMMaker-eem.208' message 'Cog JIT stack pages moved into main memory.Cogit simulates a read of stackPage on entry to the ceEnterCogCodePopReceiverReg enilopmart and then c***ps out indexing the page struct via eax.' id 'edbbdd87-dcf1-420b-9736-b63f3e25871a' date '29 December 2008' time '3:17:20 pm' author 'eem' ancestors ((name 'VMMaker-eem.207' message 'Fixed StackInterpreter>>primitiveExternalCall which I broke for simulation in VMMaker-eem.204.Fixed for simulation assert in markAndTraceAndMaybeFreeStackPages:.CoInterpreter/Cogit now compiles methods and is on the verge of executing the first one.' id 'fdcfe7f9-4256-420e-b9e2-9779d24e4dd7' date '29 December 2008' time '11:47:14 am' author 'eem' ancestors ((name 'VMMaker-eem.206' message 'Refactoed markAndTrace: code to avoid duplication with new stack pages tracign code.  This is done by using lastPointerOf:recordWeakRoot: instead of lastPointerForMarkAndTraceOf:.Fixed "^self" slip.' id 'd6878edc-b348-4776-bad9-10deb517dbfa' date '20 December 2008' time '9:28:39 am' author 'eem' ancestors ((name 'VMMaker-eem.205' message 'Added stack pager GC scheme (on full GC trace stack page if tracing a married context on that page).Added ObjectMemory>>isMarked: and used it in as many places as possile (other places use the header for performance).Fleshed out the Cogit (pun  intended).  There is an assembler, a jit, a code zone manager, a co-interpreter.' id '8e0f5088-ccdf-4f0d-b0ee-935176062aa4' date '20 December 2008' time '7:57:20 am' author 'eem' ancestors ((name 'VMMaker-eem.204' message 'Moving all C annotation messages (var:type: export: et al) to pragmas.  Plugins up-to-date with repository as of 9:20am today.N.B.  Old code still supported for backward compatibi.lity/lagging plugins.Made global struct regime use macros (e.g. GIV(framePointer) instead of foo->framePointer).StackInterpreter startup uses eden and stack reserve to determine if it has enough memory on startup.StackInterpreter checks compact classes it depends on are present and correct.Initial Cog JIT classes.' id 'f9f8a218-fb72-4b8d-aa3a-15e3ffa74309' date '17 December 2008' time '9:36:50 am' author 'eem' ancestors ((name 'VMMaker-eem.203' message 'Fixes and clarifications to allocation logic for low space conditions.' id 'cf6e23f2-6403-42c1-b7b3-9caf787fb9d2' date '15 December 2008' time '11:26:28 am' author 'eem' ancestors ((name 'VMMaker-eem.202' message 'Fix for access to contexts through instVarAt: & instVarAt:put:.' id 'd02d43b1-00f1-4d54-b345-79aed7ee76f9' date '10 December 2008' time '5:21:08 pm' author 'eem' ancestors ((name 'VMMaker-eem.201' message 'Fix for misplaced low-space logic.  Low-space now tested for at safe point.' id '930e2c8b-cb48-4a72-8176-d2254118a611' date '10 December 2008' time '2:05:19 pm' author 'eem' ancestors ((name 'VMMaker-eem.200' message 'Added DumpStackOnLowSpace to StackInterpreter for easier debugging of low-space conditions.' id 'e5622d71-38bb-4e2b-950c-2658bf6bb4b7' date '8 December 2008' time '4:30:52 pm' author 'eem' ancestors ((name 'VMMaker-eem.199' message 'Added DumpStackOnLowSpace class var to StackInterpreter to allow easier debuggng of low-space conditions.  Set to non-zero in e.g. interp.c' id '3b85de12-3f2e-439d-9a90-cc3b6bff13ec' date '8 December 2008' time '4:29:31 pm' author 'eem' ancestors ((name 'VMMaker-eem.198' message 'Added comments to users of assertClassOf:is:compactClassIndex: that explains that the fetch of the class from the specialObjectsArray is expanded in-line and hence is only evaluated if the compact class index is zero.' id '384f2e07-ccc6-4b6e-882e-701bab33608d' date '8 December 2008' time '11:15:34 am' author 'eem' ancestors ((name 'VMMaker-ar.197' message 'Combined client state and draw[range]elements primitives for the B3DAcceleratorPlugin to avoid the gc problems we were seeing. Also adds a few verification methods to ensure proper input data.' id '02e7b79b-f4fd-174d-aca5-716bb64914ce' date '5 December 2008' time '3:53:59 pm' author 'ar' ancestors ((name 'VMMaker-eem.196' message 'Adding primitive err code support to stack vm.Added faster isFloat checking to stack vm (via Float''s compact class index).Adding Alien support to ObjectMemory & InterpreterProxy.Fixed bug in CCodeGenerator translation of and: clauses.Stackvm needs stackvm branch revision 4506 or better.' id 'd91eaaca-7b4a-429b-9de2-fd728e8eea45' date '4 December 2008' time '3:26:06 pm' author 'eem' ancestors ((name 'VMMaker-eem.195' message 'Changing eden & stack pages defaults to 2m & 160 respectvely.Cursor set x y for HostWindow plugin.' id 'd28d0f02-74d2-490e-b8f2-83d5a8fbb0e1' date '24 November 2008' time '3:26:24 pm' author 'eem' ancestors ((name 'VMMaker-eem.194' message 'Extensions to HostWindowPlugin for JL to answer positions and sizes of arbitrary native windows and their displays (inside surfaces).Fixes to SmartSyntaxPlugin Unsigned support for the above.' id 'd97f3f73-ed57-45da-9bfb-80f0c7d7a9fe' date '20 November 2008' time '2:04:27 pm' author 'eem' ancestors ((name 'VMMaker-bgf.193' message 'Strncpy rather than strcpy so we don''t get an extra 0 bytefrom device name checks in Sound Plugin.' id '5d444fc1-21f3-48fd-8871-e8a7235a6eb6' date '20 November 2008' time '12:08:59 pm' author 'bgf' ancestors ((name 'VMMaker-eem.192' message 'Added ability to force asmLabelling and applied it to internalQuickCheckForInterrupts.Simplified externalEnsureContextIsMarried:.Made makeBaseFrameFor: provide an error message for cannotResume (which is a fatal crash in the normal VM).Removed labelling of assertClassOf:is: in the context VM.' id '6ad87ff2-2bcf-424b-9ef4-ae0f65777b66' date '18 November 2008' time '1:13:25 pm' author 'eem' ancestors ((name 'VMMaker-eem.191' message 'instVarAt:[put:] primitives fixed for married contexts.pruning report includes deleted primitives.fixedFieldsOf:format:length: can use fetchClassofNonInt:subscript:with:format: must lose its profiling label :(' id 'b68ded8a-a28f-46b6-ba83-5632a46ed911' date '11 November 2008' time '12:16:31 pm' author 'eem' ancestors ((name 'VMMaker-eem.190' message 'Changed some of the new vm parameter numbers to reserve indices for more values that wioll persist in the image header (such as survivor space size, jitted code cache size)' id '37db9d31-c43d-4f0e-8d0b-65284e79d1bf' date '5 November 2008' time '12:12:23 pm' author 'eem' ancestors ((name 'VMMaker-eem.189' message 'Fixed lowSpace.  lowSpace now checked for in StackInterpreter>>postGCAction:.Removed some more VM_LABELings and commented some that werre missing them.' id '8bbba6d7-0c75-400f-a925-9afdbc026a0c' date '5 November 2008' time '10:54:09 am' author 'eem' ancestors ((name 'VMMaker-eem.188' message 'Closure VM updated with new profiler support and stats counting number of process switches, checkForInterrups and ioProcessEvents calls (you''ll also need to update the platform source)' id 'cf2e86c3-54f7-4bb1-87c4-bfec58dad36f' date '3 November 2008' time '4:47:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.187' message 'StackInterpreter (but not yet normal Interpreter) uses new pc buffer VM profiler.Fixed doc bug for isContextHeader: and simplified StackInterpreter''s implementation, since it uses only MerthodContext.Two fewer labellings since icContextHeader: simplifications cause more inlined label duplication by the intel compiler.' id 'c11d3d1a-0a87-467b-9f92-0ac31d0d1ee3' date '2 November 2008' time '3:54:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.186' message 'Made assertValidExecutionPointers available to C vm.Fixed stack page list assert for baseReturn.Bullet-proofing.  VM now survives e.g. thisContext swapSender: 1.Typoes.' id 'f4f3c811-843c-46be-8120-f2d611fde127' date '31 October 2008' time '2:39:30 pm' author 'eem' ancestors ((name 'VMMaker-eem.185' message 'Abstracted setting the current stackPage and stackLimit.Fixed bug with cannotReturn: (base return freed the current page no matter what).Sender assignment cleaner using markStackPageNextMostRecentlyUsed: to avoid disturbing current page.More helpful frame printing.' id '3855c577-17ff-4bef-bffe-1107dec34f39' date '31 October 2008' time '1:30:19 pm' author 'eem' ancestors ((name 'VMMaker-hrs.184' message 'Don''t fail when primitiveSoundGetRecordLevel doesn''t work -- just answer a negative number.' id '1c96559d-d562-46e9-a343-9020e528a796' date '30 October 2008' time '4:28:42 pm' author 'hrs' ancestors ((name 'VMMaker-eem.183' message 'Nuked leastRecentlyUsedPage pointer.Moved arrays to end of global struct.' id '1d38a73a-4e70-492c-b8e6-6c0eaf47b90b' date '30 October 2008' time '12:58:06 pm' author 'eem' ancestors ((name 'VMMaker-eem.182' message 'Implemented my move variable number of frames on overflow algorithm.  Performance of benchFib now stabilised, predictable and faster than standard VM.Added instrumentation for various stack-related events (see vmParameterAt: & primitiveVMParameter).Sorted entries in global struct better.Did more of cannotReturn: implementation for thisContext swapSender: nil.' id 'fdf57f17-4f51-4836-bfa2-665b8ef9a3a6' date '29 October 2008' time '6:01:16 pm' author 'eem' ancestors ((name 'VMMaker-hrs.181' message 'When iterating over audio devices, let Squeak base from 1 while C bases from 0.' id 'aecbcdf3-d27b-9e47-b733-32438482a56c' date '26 October 2008' time '8:23:55 pm' author 'hrs' ancestors ((name 'VMMaker-eem.180' message 'Fix bug in primitveExecuteMethod[ArgsArray] when invoking method with primitive that fails.Fix off-by-one error transferring arguments to stack in StackInterpreter''s primitiveExecuteMethodArgsArray' id '8db941d7-b875-4b02-ac09-8ebb83f47bdc' date '26 October 2008' time '7:24:23 pm' author 'eem' ancestors ((name 'VMMaker-eem.179' message 'Fixed bad bug in snapshot (system didn''t resume with snapshot primitive answering true).Added a flush to stringlike-object printing for printOop.' id '08ca0bd2-f80f-40d7-8339-cecd9e105cf0' date '24 October 2008' time '3:53:33 pm' author 'eem' ancestors ((name 'VMMaker-hrs.178' message 'Primitives for enumerating the audio devices, getting and setting the default devices, and for getting the record level.' id '825c430d-3c92-4cfb-abc2-3554213a412b' date '24 October 2008' time '2:51:06 pm' author 'hrs' ancestors ((name 'VMMaker-eem.177' message 'Restore stackLimit in checkForEventsMayContextSwitch:, which means stackLimit now restored if system is looping checking for interrupts in backward branches.This fixes the performance difference between Stack and Context interpreters for the sieve benchmark (bytecodes per second in tinyBenchmarks).' id 'f470bb10-da86-4ba6-afb7-e7d9bdef7966' date '23 October 2008' time '5:11:20 pm' author 'eem' ancestors ((name 'VMMaker-hrs.176' message 'Define primitiveSet/GetDefaultSoundPlayer/Recorder in SoundPlugin.' id '7037bff9-769e-5b45-9e56-2cc95ec8d42b' date '23 October 2008' time '5:21:42 pm' author 'hrs' ancestors ((name 'VMMaker-eem.175' message 'Nuking unused stackArgvFoo: methods which cause a type error in the translator.' id 'a16ca492-f356-4519-8396-1da160a4bde4' date '23 October 2008' time '12:25:44 pm' author 'eem' ancestors ((name 'VMMaker-eem.174' message 'Changed statMarkCount to count objects visited (minimal change from times round the loop) instead of meaningless times round the state machine loop.  Better would be objects marked, but that''s further away from the current definition.Added desiredEdenBytes setting in image header, accessed via vmParameterAt: 44 (current eden bytes) and 45 (desired eden bytes).Fixed nextPage ref in assertWellFormedPageList' id '35ce2fa8-d49b-4797-a367-39ea00a7acdf' date '23 October 2008' time '11:24:49 am' author 'eem' ancestors ((name 'VMMaker-eem.173' message 'Cheap instrumentation of incrementalGC frequency in simulator.  Interpreter does an incrementalGC about every 50k bytecodes and the StackInterpreter, with 256k of eden, does one about every 200k bytecodes.Bug fix to markStackPageMostRecentlyUsed: (prolly the first of a few :/)Moved a bug fix from StackInterpreter>>signed64BitValueOf: across.Made needsToRegenerateInterpreterFile consider ancilliaryClasses.' id '353605d8-d793-4775-9dc4-bc4759abe230' date '22 October 2008' time '2:00:52 pm' author 'eem' ancestors ((name 'VMMaker-eem.172' message 'About a 15% improvement in the performance of markAndTrace:- eliminated unnecessary variable- eliminated some dispatches by making some states loop where possibleThis results in around a 5% improvement in binarytrees: 15.' id '5a59e14a-1575-4d47-9eb1-3d868efc6fd3' date '22 October 2008' time '12:02:59 pm' author 'eem' ancestors ((name 'VMMaker-eem.171' message 'Faster floating-point arithmetic.  Made inliner ignore (i.e. happily inline methods containing) cCode: '''' inSmalltalk:''s with empty c code.  Makes e.g. ShootoutBody, a float-intensive n-body simulation, about 11% faster.Nuked some unused code (inlineMethodsUsing:).' id 'f252d1cc-dfb9-49f0-9171-b3878b10cdf6' date '21 October 2008' time '2:36:52 pm' author 'eem' ancestors ((name 'VMMaker-eem.170' message 'FloatMathPluginSmulagtor needs to implement shouldBeTranslated' id 'a42ef655-1da5-4e9e-9233-2ba0b256d624' date '21 October 2008' time '12:31:05 pm' author 'eem' ancestors ((name 'VMMaker-eem.169' message 'Fixed performance bug in newStackPage.Made desiredNumStackPages global to allow setting as a preference.Fixed bug in changeClassOf:to: for byte objects.Added FloatMathPluginSimulator to simulate isnan:.Fixed bug in BalloonEngineSimuator>>loadWordTransformFrom:into:length: (needs review)' id '9bc6fae7-cd19-43cd-90c2-3fa559db9a25' date '21 October 2008' time '12:18:24 pm' author 'eem' ancestors ((name 'VMMaker-eem.168' message 'Since stackLimit is also the initialization flag for the stack system forceInterruptCheck must not smash it to -1 unless it is non-zero (i.e. unless the stack system has been intialized).  If not, a call to forceInterruptCheck before teh system has booted will crash the VM since the stack system will not be initialized.' id '5554a37f-29c8-4c0f-b25a-e421b8de1347' date '16 October 2008' time '7:24:06 pm' author 'eem' ancestors ((name 'VMMaker-eem.167' message 'Removed enough labels to allow for labelling under the Intel compiler (with our current optimization settings).' id 'd21936de-c38c-4b9b-8b4c-caf1d320c3bc' date '13 October 2008' time '5:02:54 pm' author 'eem' ancestors ((name 'VMMaker-eem.166' message 'Only generate labels in the VM proper, avoiding problems with labels being duplicated by C compiler optimizer inlining and loop unrolling.  We use the asmLabel: directive to control labelling in the interpreter proper. But it is too much work doing that for plugins too.' id '4cbe8479-277f-4017-bf5d-f1f16ffbed4e' date '13 October 2008' time '2:35:15 pm' author 'eem' ancestors ((name 'VMMaker-ar.165' message 'InterpreterPlugin class>>touch to force regeneration of plugin.' id 'aa6bb603-9a87-5e48-8b2b-1f908a39f8ee' date '13 October 2008' time '1:20:54 pm' author 'ar' ancestors ((name 'VMMaker-eem.164' message 'Need a sensible default initializetion on logger for SmartSyntaxCodeGenerators.' id '573e01a4-3527-4c45-a568-644a1c4b39e6' date '13 October 2008' time '1:16:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.163' message 'Fixing Interpreter class>>initialize & StackInterepreter class>>initialize to correctly initialize ObjectMemory.' id 'd71f0f74-ee70-413e-9b2c-c1194b394c09' date '13 October 2008' time '1:05:29 pm' author 'eem' ancestors ((name 'VMMaker-ar.162' message 'Merge VMMaker-eem.161 which includes the changed closure format (copied values being in the indexed portion of the closure instead of an extra array).' id 'c8c6226b-759c-8949-b65b-fba5f89cfaa4' date '13 October 2008' time '12:53:53 pm' author 'ar' ancestors ((name 'VMMaker-ar.157' message 'Add support for gif plugin.' id '804862de-14b3-9846-ac3d-b1789a4fc8d1' date '10 October 2008' time '4:36:50 pm' author 'ar' ancestors ((name 'VMMaker-ar.156' message 'Added PNGLibPlugin.' id '3b11c325-915f-4940-90e6-70d323d919c4' date '8 October 2008' time '6:19:10 pm' author 'ar' ancestors ((name 'VMMaker-eem.155' message 'Argh!! Too dumb to realise that version wasn''t dumb enough.  Checking-in an even dumber version.' id '48563ce1-79f1-41eb-b750-7d5986076905' date '22 August 2008' time '4:48:29 pm' author 'eem' ancestors ((name 'VMMaker-eem.154' message 'Argh!! Too many versions!  Used something only my whizzy CCodeGenerator supports in pop:thenPushBool:.  Checking-in a dumber version.' id 'e0c1379c-60e1-4d4c-8a62-98b9e2b38076' date '22 August 2008' time '4:41:15 pm' author 'eem' ancestors ((name 'VMMaker-eem.153' message 'Added missing pop:thenPushBool: needed by newer VM profiling prim' id 'ed89353b-eeeb-482b-a040-996e45ed8b6a' date '22 August 2008' time '4:28:46 pm' author 'eem' ancestors ((name 'VMMaker-eem.151' message 'Added no-context-switch versions of closure value primitives.  Made ordinary closure value primitives context-switch points.Updated VM profile primitives.' id 'daa3252c-8ab1-4c21-8f49-4d35d927f6b4' date '22 August 2008' time '4:04:02 pm' author 'eem' ancestors ((name 'VMMaker-eem.150' message 'Fixed type error in primitiveVMProfileExtent' id '092d83da-8576-4aa8-bd6a-07c80027ea4c' date '20 August 2008' time '3:09:14 pm' author 'eem' ancestors ((name 'VMMaker-eem.149' message 'Added VM profiling primitives.Made VMMaker & Tool accept relative paths for src & platforms' id '2146abba-5e5a-46ce-b3ac-f0753fe77e62' date '20 August 2008' time '2:04:33 pm' author 'eem' ancestors ((name 'VMMaker-ar.148' message 'Move GeniePlugin into a separate package since the closure compiler has difficulties loading it.' id '647cdd99-e209-2542-8aef-e7f8381c674c' date '19 August 2008' time '4:09:36 pm' author 'ar' ancestors ((name 'VMMaker-eem.147' message 'Added VM profiling primitives (needs svn/qwaqvm/trunk rev 3458).Added imageFormatVersion as VM parameter 41 to primitiveVMParameter. (to distinguish old from Closure VMs)Slight imporvements to closure value primitives & creation bytecode.Faster checkHeapIntegrity.Fixed extra pop in SocketPlugin>>hasSocketAccess.Nuked useless storePointerUncheckedAsserting:.Added printReferencesTo:.Typoes with metaclassInstSize.' id 'df2bde04-16dd-41e3-9b47-ad68b2166d6f' date '18 August 2008' time '2:33:33 pm' author 'eem' ancestors ((name 'VMMaker-jcg.125' message 'Return zero at the end of halt() and msg() to avoid compiler warnings about falling off the end of a non-void function.' id 'fd1a51b6-2ca6-4bfa-bcc2-8849ea90a239' date '30 June 2008' time '5:49:13 pm' author 'jcg' ancestors ((name 'VMMaker-eem.124' message 'Addedf compatibility primitives for Cog/Closure VM''s Context at:[put:] & size primitives 210, 211 & 212.' id '50c6dda4-4d7a-428c-9d1f-31d2b81a8108' date '27 June 2008' time '3:24:20 pm' author 'eem' ancestors ((name 'VMMaker-eem.121' message 'Rolled image version number.  Made previous version (6502) bac kward-compatible.Ripped out obsoleteNamedPrimitive and obsoleteIndexedPrimitive support.' id '912a2d42-e61d-4b06-a27e-e2388c79dec0' date '23 June 2008' time '4:50:35 pm' author 'eem' ancestors ((name 'VMMaker-eem.117' message 'Fixed metaclassInstBytes usage for debug printing of classes' id 'ced38414-fb84-4db5-b70f-1bb2d94bcabf' date '18 June 2008' time '4:41:27 pm' author 'eem' ancestors ((name 'VMMaker-eem.116' message 'Fixed saving/loading configuration.  New scheme saves directories as relative path names if they''re relative to the current directory along with booleans that state whether the path name is relative or not.  Loader checks for the flags and interprets file names as relative if set.Changed && & || ytranslation to crtab: indent.Fixed VMMakerTool>>platformNameText: so it only switches to a new VMMaker if the new maker was successfully initialized.' id 'cf38bbca-6533-4573-9199-836a8239229e' date '18 June 2008' time '2:50:40 pm' author 'eem' ancestors ((name 'VMMaker-ar.115' message 'Undo the indentation change to formatting && so that it is easier to diff the changes in C code (sorry Eliot ;-) We can restore this in due time but the formatting change shouldn''t come in combination with all those actual content changes.' id '1f9006e8-112a-f840-bb12-331692ea3396' date '16 June 2008' time '10:03:49 pm' author 'ar' ancestors ((name 'VMMaker-ar.114' message 'Improve handling of legacy VMMaker configuration files.' id 'ed080971-fb8f-504d-9e5a-bd52c85a7ca8' date '16 June 2008' time '9:55:47 pm' author 'ar' ancestors ((name 'VMMaker-eem.113' message 'Commented out two asserts because the win32 build doeswn''t pick up an assert def (unlike Mac OS)' id 'e2889db9-5fe1-47fa-ad9d-e31e89263f69' date '16 June 2008' time '3:02:57 pm' author 'eem' ancestors ((name 'VMMaker-eem.112' message 'Eliminated pointless short-form pushIndirectTemp bytecode 139.Several block usage cleanups to move temps from emthod scope to block scope, in part to test closures.' id 'bde7ece9-3de1-4bfc-88db-4692a7649874' date '16 June 2008' time '10:10:19 am' author 'eem' ancestors ((name 'VMMaker-eem.111' message 'Fixed bug with plugin drag-n-drop. validatePlugin:in: checkedcorss-platform fiels existing in platformPluginsDirectory insteadof crossPlatformPluginsDirectory(Grrrrr...)' id '77866e63-3832-4f09-92c9-1768b48cc46e' date '13 June 2008' time '4:51:22 pm' author 'eem' ancestors ((name 'VMMaker-eem.110' message 'Merge of Closure changes with Josh''s primitiveSoundSetRecordBufferFrameCount: in VMMaker-jcg.103' id '57416bec-dbed-4ebc-b340-e64ca4eae063' date '13 June 2008' time '3:43:01 pm' author 'eem' ancestors ((name 'VMMaker-eem.109' message 'Functional Closure VM with the GC bug in Interpreter>>activateNewClosureMethod: fixed.pushNewArrayBytecode modified to also "cons" (initialize with elements popped off the stack)Adds a heap leak map checker (requires platforms/Cross/vm/sqHeapMap.c); see Interpreter>>checkHeapIntegrity.Moves some methods up and down between ObjectMemory and Interpreter.' id '12c85190-d789-4e7e-a7ee-5d3e63a35c3b' date '10 June 2008' time '4:30:43 pm' author 'eem' ancestors ((name 'VMMaker-eem.108' message 'Added the crucial one-liner to the create closure bytecode:	reclaimableContextCount := falseThanks Andreas!' id 'e3c28fda-13d5-46f7-a221-5d23839c829b' date '6 June 2008' time '2:43 pm' author 'eem' ancestors ((name 'VMMaker-eem.107' message 'removed obsolete closureCopyNumArgs:copiedValues:instructionPointer:' id 'a0dd0b9f-3447-4025-84fd-b69a7e2880b1' date '6 June 2008' time '12:25:18 pm' author 'eem' ancestors ((name 'VMMaker-eem.106' message 'Changes for GC bugs in closure bytecodes:	activateNewClosureMethod:	closureCopyNumArgs:copiedValues:instructionPointer:	closureCopyNumArgs:instructionPointer:pushNewArrayBytecode can init contents from stack or produce empty array.Corrected slips in oopHasOkayClass: okayOop: okayFields: (check compiled methods)Removed stream primitives.Reorganized Interpreter to keep me sane.' id '886ad8f5-b970-4feb-9f66-6b37fe298244' date '6 June 2008' time '12:23:50 pm' author 'eem' ancestors ((name 'VMMaker-eem.105' message 'Eliminated method inst var from Closure, fetching receiver and method from outerContext for consistency.Added more error checking to Closure>>value[:value:...] primitives' id 'eff85bf7-744d-4cf4-b4fd-b723f580b035' date '29 May 2008' time '5:20:27 pm' author 'eem' ancestors ((name 'VMMaker-eem.104' message 'V3 + Closure and LongForm V3 + Closure VMs which add	PushNewArray:	PushRemoteTemp:inVectorAt:	StoreRemoteTemp:inVectorAt:	StorePopRemoteTemp:inVectorAt:	PushClosureCopyCopiedValues:bytecodes' id 'e7d631ca-9b82-4b3d-af0e-e90d63d4e2e6' date '28 May 2008' time '11:30:07 am' author 'eem' ancestors ((name 'VMMaker-eem.103' message 'V3 + Closure and LongForm V3 + Closure VMs which add	PushNewArray:	PushRemoteTemp:inVectorAt:	StoreRemoteTemp:inVectorAt:	StorePopRemoteTemp:inVectorAt:	PushClosureCopyCopiedValues:bytecodes' id '6ef2c36e-dfbb-46d9-8c39-a8643bc3305b' date '28 May 2008' time '11:27:20 am' author 'eem' ancestors ((name 'VMMaker-ar.102' message 'Since Interpreter>>signed32BitValueOf: will now fail for 32 bit positive integers (ulong) make sure the FFI uses positive32BitValueOf: when appropriate.' id '4965957f-92c3-324b-866e-9042ba943616' date '26 March 2008' time '7:40:03 pm' author 'ar' ancestors ((name 'VMMaker-ar.101' message 'Two more fixes for LargeInts:- positive64BitIntegerFor: obviously needs to bail to positive32BitIntegerFor: to avoid creating non-normalized large ints- primitiveBitShiftLargeInts needs to be protected from the explicit translator coercion of the right shift argument' id 'bdeaf4e6-8dae-e945-b61e-979c8e214372' date '21 March 2008' time '8:51:53 pm' author 'ar' ancestors ((name 'VMMaker-ar.100' message 'Put the large integer primitives online. Note that some primitives currently aren''t used in the image (the logic prims in particular) and we still need to turn them on.' id '6ca786a6-c9f8-394e-9e41-2e2a483a5c52' date '20 March 2008' time '11:49 pm' author 'ar' ancestors ((name 'VMMaker-ar.99' message 'More large integer work:- Rename primitiveBitShiftLargeInt to primitiveBitShiftLargeIntegers for consistency with other names- Fix positive64BitIntegerFor: not to return non-normalized values (same problem as in signed64BitIntegerFor:)- Address an additional overflow problem in large int division that wouldn''t affect small integers since they are only 30 bits wide' id '231d8580-360c-c249-b263-563e8b5bbaa5' date '20 March 2008' time '11:08:05 pm' author 'ar' ancestors ((name 'VMMaker-ar.98' message 'Interim check in for LargeInteger work:- Fixed versions for signed32Bit* and signed64Bit* functions- Versions of all the missing large int primitives which will work as long as the input is in 64 bit rangeOnly the add, sub, div, and mul primitives have been verified so far. Once all of them have been tested the blue book large integer primitive ranges in Interpreter should be filled in again.' id '6ad57f64-1139-a844-8bf9-54caf6c3dbfd' date '19 March 2008' time '11:41:06 pm' author 'ar' ancestors ((name 'VMMaker-ar.97' message 'Fix edge cases in signed32BitValueOf: and signed64BitValueOf: and simplify primitiveIntegerAtPut a little.' id '10175d02-6445-4e4e-a126-00819f944be2' date '19 March 2008' time '8:47:59 pm' author 'ar' ancestors ((name 'VMMaker-bgf.96' message 'Pedantic change to the guard against negative-remainderin primitiveIdentityDictionaryLookup.' id '573302bf-7489-43a0-8fd7-9b31da46b4de' date '5 March 2008' time '9:59:12 pm' author 'bgf' ancestors ((name 'VMMaker-ar.95' message '- adds an optimization for Array>>size in bytecodePrimSize- adds a primitive for IdentityDictionary>>scanFor:' id '4231e3a8-25e5-ae41-9178-a46c458fa252' date '5 March 2008' time '4:54:27 pm' author 'ar' ancestors ((name 'VMMaker-ar.94' message 'Add primitiveGetWindowSize/primitiveSetWindowSize to get/set the size of the Squeak main window.' id '28aff368-c150-644a-b813-84f0dc2d626d' date '27 February 2008' time '11:39:32 am' author 'ar' ancestors ((name 'VMMaker-ar.93' message 'Fixes for profiling:- Account for the correct sample after a timer interrupt occurs (instead of accounting for the timer which just got activated)- Take samples of the primitiveMethod after a primitive successfully completed (to be able to measure primitives as well)- Instead of being overly clever pay the price while profiling and do a high-res clock check on each primitiveResponse' id '125d686d-1a4d-8741-9c41-39dfc98c81da' date '27 February 2008' time '11:38:10 am' author 'ar' ancestors ((name 'VMMaker-ar.92' message '- remove Miramar primitives since they require support code which is not in the code base yet' id '3a3dbb12-8a8e-564b-97b9-a2d6b1466ce7' date '7 December 2007' time '4:39:54 pm' author 'ar' ancestors ((name 'VMMaker-ar.91' message '- Extends primitiveSuspend to take process off-list if they are not the active process' id '45245cdc-978c-1a4e-9740-63dbd180859a' date '7 December 2007' time '4:38:33 pm' author 'ar' ancestors ((name 'VMMaker-bgf.90' message 'For future reference...	primitiveLength 	primitiveNormalizefor FloatArrayPlugin(not used yet in the main code, just archiving themwhile I bring my VM image up to date.)' id '05d71f64-370e-42c7-a221-7f306d9a42e3' date '5 December 2007' time '11:51:13 pm' author 'bgf' ancestors ((name 'VMMaker-bgf.89' message 'Put back the KlattSynthesizerPlugin,that was just innocently minding its own business...' id '9c332fb0-3d36-4da0-a094-fc9987cb0ae5' date '5 December 2007' time '11:46:49 pm' author 'bgf' ancestors ((name 'VMMaker-clw.88' message 'Added some stability fixes for the native window contents Miramar windows.' id '86d79bfc-3d3f-48cc-9a96-5647751aa67e' date '5 December 2007' time '2:00:28 pm' author 'clw' ancestors ((name 'VMMaker-clw.87' message 'Added my primitives.' id '374640ef-7eab-43a5-873f-e43ea1dc51d4' date '4 December 2007' time '9:47:36 pm' author 'clw' ancestors ((name 'VMMaker-ar.86' message '- added primitive[Get|Set]LogDirectory' id '4ee3eaf1-2700-fe40-b2f5-f66886baba3e' date '12 October 2007' time '5:05:29 pm' author 'ar' ancestors ((name 'VMMaker-jdm.85' message 'part of Matrix changes in package 3DTransform-jdm.34' id '2303b376-6e93-4d20-a224-787aad19a2f2' date '10 October 2007' time '4:28:47 pm' author 'jdm' ancestors ((name 'VMMaker-ar.84' message '- some fixes for making BitBltSim work again' id '914b25b2-82fb-c54a-86c3-3477b662dcae' date '2 August 2007' time '6:07:52 pm' author 'ar' ancestors ((name 'VMMaker-ar.83' message '- add a logging entry point to the FFI plugin that can be used by C code to enable/disable logging' id 'a0111fc2-1e58-3746-acb7-40fa9fb949cd' date '27 July 2007' time '11:19:06 am' author 'ar' ancestors ((name 'VMMaker-ar.82' message '- add logging for FFI calls' id '2b5f9b99-264b-8143-b8c1-88ca142f8168' date '25 July 2007' time '12:05:46 pm' author 'ar' ancestors ((name 'VMMaker-ar.81' message '- add macroBenchmark to class Interpreter (from Smalltalk)' id '005bc54a-d999-7e4c-9dfa-8aada8e076e6' date '7 July 2007' time '4:11:30 pm' author 'ar' ancestors ((name 'VMMaker-ar.80' message '- add primHighResClock to read out the real time perf counter- add primProfilePrimitive to read out the primitive sampled- fix duplicated versions of primitiveResponse and sample with high accuracy when the profiler is active' id '7b9b9c1f-a26f-394e-bbc3-01b2c40e19aa' date '22 June 2007' time '2:55:27 pm' author 'ar' ancestors ((name 'VMMaker-ar.79' message '- don''t print too many CRs in printAllStacks()' id 'b790ea4c-1c25-4f8e-aa08-49f4e9ee269d' date '15 June 2007' time '3:59:40 pm' author 'ar' ancestors ((name 'VMMaker-ar.78' message '- include John''s latest fix for IGC lockup' id '3adf70a2-8dcb-0748-9eb6-f39b69bf4436' date '13 June 2007' time '5:14:59 pm' author 'ar' ancestors ((name 'VMMaker-ar.77' message '- don''t delete plugin directories to avoid upsetting SVN and friends (the windows VM already avoided this; so this is just promoting it to all platforms)' id 'bd447669-3ab5-4d63-8121-53f1b94ebe3a' date '13 June 2007' time '4:01:35 pm' author 'ar' ancestors ((name 'VMMaker-bgf.76' message 'FilePlugin primitiveDirectoryEntryLike directory lookup but by name rather than index,to create support for direct stat checks,without having to enumerate the parent directory.Requires	dir_EntryLookup(.....) in the platform-specific VM.' id '9c4b73e1-5baa-4fde-a2b8-b1ed4700c454' date '13 June 2007' time '2:20:50 pm' author 'bgf' ancestors ((name 'VMMaker-ar.75' message 'VM-level profiling support:- use the interrupt check to take samples every n activations instead of triggering it off the timer since other processes trigger off the same timer- this will allow us to even take samples of processes with higher priority (like the timer interrupt watcher)- beware of Heisenbugs: taking samples takes time, too' id '3a6003fc-95d0-a64a-8a71-7b85b2fad679' date '12 June 2007' time '11:50:03 am' author 'ar' ancestors ((name 'VMMaker-ar.74' message '- integrate DTL''s 64bit pointer fixes' id '3123e970-f52c-9744-aa91-e4c5d1222239' date '8 June 2007' time '3:25:11 pm' author 'ar' ancestors ((name 'VMMaker-ar.73' message '- add quick identity test to primitiveCompareBytes' id '484a1904-a939-1e4e-bde3-76c823a1a60a' date '3 June 2007' time '8:26:45 pm' author 'ar' ancestors ((name 'VMMaker-ar.72' message '- off-by-one fix for primitiveCompareBytes' id '474c5598-7217-9940-8612-6c53f0be7b78' date '26 May 2007' time '5:44:12 pm' author 'ar' ancestors ((name 'VMMaker-ar.71' message '- add primitiveCompareBytes for comparing byte arrays' id '521ec345-7cee-6947-a67a-d73fa96f19ee' date '26 May 2007' time '5:42:37 pm' author 'ar' ancestors ((name 'VMMaker-ar.70' message '- fix the typo biasToGrow which John pointed out' id 'beba2cae-c22c-f041-9152-5c9f0d724455' date '18 May 2007' time '8:28:23 am' author 'ar' ancestors ((name 'VMMaker-jcg.69' message 'Add John McIntosh''s QuickTime plugin (JMMMacQuicktimePlugin.3.cs).' id '2a866ab6-3018-49e3-962b-a23ab4cac36b' date '22 April 2007' time '10:31:55 am' author 'jcg' ancestors ((name 'VMMaker-abc.68' message '- fix or remove non-working tests' id '64c171df-60f1-804b-8cf2-3a0efc634016' date '16 April 2007' time '12:38:58 am' author 'abc' ancestors ((name 'VMMaker-ar.67' message '- fix FloatMathPluginTests>>runTest:' id '560e3104-9bed-fb4a-876e-136d12b31e38' date '15 April 2007' time '10:14:11 pm' author 'ar' ancestors ((name 'VMMaker-ar.66' message '- use min/max corner in tri-box test to match TBox format' id '4f45dcef-ff53-5d4f-a2fd-c2d3a0ae19cd' date '18 March 2007' time '2:28:17 am' author 'ar' ancestors ((name 'VMMaker-ar.65' message '- add tri-box intersection primitive to CroquetPlugin' id 'b6ddfa81-3c8e-0f49-afe7-4822415653e5' date '18 March 2007' time '1:12:34 am' author 'ar' ancestors ((name 'VMMaker-ar.64' message '- after merge-hell submit the actual versions of primitive get/set window label' id 'b4c5dbd3-498b-1d43-b9a2-78241c62210a' date '8 March 2007' time '2:23:07 pm' author 'ar' ancestors ((name 'VMMaker-ar.63' message '- callback support- additional GC roots' id 'd8f82f53-7bc5-524f-8ca9-9fe9a113ad77' date '8 March 2007' time '1:40:52 pm' author 'ar' ancestors ((name 'VMMaker-ar.62' message '- primitive[Get|Set]WindowLabel' id '86bc5f0d-2620-2d4f-8199-909bc9b46d55' date '8 March 2007' time '1:33:43 pm' author 'ar' ancestors ((name 'VMMaker-ar.61' message '- update Win32VMMaker' id '2975bc85-fb17-4742-bc53-3111d98d892e' date '1 February 2007' time '9:17:11 pm' author 'ar' ancestors ((name 'VMMaker-ar.60' message '- fix a missing declaration in primFractionalPart' id 'b33185db-8461-da45-a93b-0a308aa925b2' date '17 April 2006' time '10:54:34 pm' author 'ar' ancestors ((name 'VMMaker-ar.59' message '- fail all primitives if the return value is NaN to avoid creation of different nan patterns on different platforms.' id '80f28f6b-7a68-5848-8702-e10a3b37a382' date '17 April 2006' time '9:35:17 pm' author 'ar' ancestors ((name 'VMMaker-ar.58' message '- remove primSetReusable as it is now done via setOption:value:' id 'cf0a8dac-a9bf-9f4a-b30a-c33a1c396380' date '14 April 2006' time '5:15:28 pm' author 'ar' ancestors ((name 'VMMaker-ar.57' message '- when requesting a forced interrupt check also reset the next poll tick to check for extra input events' id '7f60aa41-decb-454c-9047-5fd06e9e3f9a' date '14 April 2006' time '5:06:45 pm' author 'ar' ancestors ((name 'VMMaker-ar.56' message '- remove OpenALPlugin' id '66cef58a-aca3-f34b-8105-1464c331718b' date '10 April 2006' time '6:21:16 pm' author 'ar' ancestors ((name 'VMMaker-ar.55' message '- manual replacements of underscore assignments' id 'f63035f0-e0b2-8649-b053-3312b863264b' date '4 April 2006' time '9:51:26 pm' author 'ar' ancestors ((name 'VMMaker-ar.54' message '- replace underscore assignment with colon-equals' id 'eceebcfa-5483-3e4c-873b-acacb740fbd5' date '4 April 2006' time '8:12:57 pm' author 'ar' ancestors ((name 'VMMaker-ar.53' message '- fix a missing "self export: true" in CroquetPlugin.' id '5327699a-7b2d-ce4e-ad2a-f366752b4091' date '29 March 2006' time '12:13:32 pm' author 'ar' ancestors ((name 'VMMaker-ar.52' message '- add stub declaration for OpenALPlugin (external only)- add missing declaration in CroquetPlugin.' id '4f0bed06-c057-bd43-befa-dfa126ecb502' date '28 March 2006' time '6:51:20 pm' author 'ar' ancestors ((name 'VMMaker-ar.51' message '- add CroquetPlugin>>primitiveGatherEntropy' id 'e90b4f4a-6dd4-6240-9cad-ecd321d771eb' date '28 March 2006' time '4:12:21 pm' author 'ar' ancestors ((name 'VMMaker-ar.50' message '- fix ARC4 transform bug in CroquetPlugin' id '105d8268-892a-114e-aa3a-ad8609c85102' date '28 March 2006' time '12:09:12 pm' author 'ar' ancestors ((name 'VMMaker-ar.49' message '- add B3DAcceleratorPlugin- add matrix/vector primitives in CroquetPlugin' id '0547cb6f-f8be-8f4d-b94e-92621bfe1461' date '26 March 2006' time '11:00:12 pm' author 'ar' ancestors ((name 'VMMaker-ar.48' message '- add David''s socket primitives' id '09634ea8-1491-0341-bbe7-5652b78fd9c5' date '26 March 2006' time '9:55:50 pm' author 'ar' ancestors ((name 'VMMaker-ar.47' message '- add initial version of CroquetPlugin' id 'fd36bc93-e422-c44d-9e6d-e24b1bf22708' date '26 March 2006' time '8:24:04 pm' author 'ar' ancestors ((name 'VMMaker-ar.46' message '- add float math plugin and tests- fix file copying to use binary mode' id 'b3f5b14e-218b-1b4e-a54b-59c5dfa096bf' date '26 March 2006' time '6:50:59 pm' author 'ar' ancestors ((name 'VMMaker-ar.45' message '- integrate John''s latest MPEG changes' id '35288c74-8661-7147-bc49-63d00dad2dc1' date '25 March 2006' time '11:13:12 pm' author 'ar' ancestors ((name 'VMMaker-ar.44' message '- This is VMMaker3.8b5-64B (the latest from SM)' id '6dc57d49-2e8e-6f40-b858-7584b7b5a11b' date '25 March 2006' time '6:45:50 pm' author 'ar' ancestors ((name 'VMMaker-tpr.43' message 'more changes relating to getting the arg types right for a bunch of plugin code' id '17f39176-eafa-420e-b938-38e7ab5a6577' date '30 December 2005' time '4:45:34 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.42' message 'correct bugs found by compiling:-no interpreterProxy pop:thenPushInteger:lost ''anInt'' in isBigEnder due to optimisationsmessed up RePlugin>primPCREExecfromto vars' id 'f2b9ae97-d4ff-47b0-963d-65caa1363ed8' date '29 December 2005' time '10:33:22 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.41' message 'convert all dumb uses of #var:declareC: to var:type: for a little added neatness.rescind three arg version of ioFilenamefromString... since OSX has to have a fourth arg for alias resolving. Add the four-arg version instead.' id '709e3ea3-78d7-11da-a4ca-000d934a31f0' date '29 December 2005' time '5:56:06 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.40' message 'use dave lewis'' runtimediscovery of vm endianness instead of ugly macro' id 'd58632a4-6ae7-4880-9cc9-a52fcd0d98fa' date '29 December 2005' time '1:36:18 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.39' message 'Add plugin access to sqFilenameFromString and vm endianness.change #placeInstructure to allow arrays in global structure.couple of small changes to TestOSAPlugin for John' id '02af6c3b-0447-469f-a872-a78ce1e11a01' date '23 December 2005' time '5:18:40 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.38' message 'Dec 05 cleanups and checks for a newer release.clean up bytearray ffi extensions - image work to do at some point.' id '0df78f45-9bbd-41be-b46f-e16786f65899' date '21 December 2005' time '7:29:02 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.37' message 'Add #getThisSessionID to provide a global and plugin-usable session ID. Inspired by Dave Lewis''s suggestion from november 2001.A concommitent change is required in the platforms/Cross/vm/sqVirtualMachine.[ch] files for this to work.' id '989fc93f-919e-49e1-8643-14cdcc540371' date '17 June 2005' time '6:48:37 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.36' message 'Couple of changes to make life easier for Macs - take the #flag: out of LargeIntegersPluginchange a #cCode: call in MacMenubarPlugin' id 'a95ca422-a582-4251-bde7-9f471eb83464' date '7 June 2005' time '3:45:13 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.35' message 'Make obsoleteDontUseThisFetchWord:ofObjet: actually return a value. This comes in handy for users.' id '30b47c31-6bc6-45e1-ad5d-cf1c575c00d1' date '7 June 2005' time '11:57:35 am' author 'tpr' ancestors ((name 'VMMaker-tpr.34' message 'remove rescinded fetchWord:ofObject: from InterpreterProxy, add obsoleteDontUseThisFetchWord:ofObject: and fetchLong32:ofObject: so that all the right functions get into the generate interp.c' id '76dfb03f-49ee-4652-9f73-3a892e4e6c3d' date '6 June 2005' time '7:46:22 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.33' message 'Add obsoleteDontUseThisFetchWord: fieldIndex ofObject: oop for use as a temporary proxy for the very deprecated fetchWordofObject. See also sqVrtualMachine.[ch] for the change to the VM struct that rescinds fetchWordofObject and redirects older plugins to this ''new'' method.Part of making theVM 64 bit clean' id '935c18e0-b5c9-4d2b-a6a4-c364ac0552c5' date '6 June 2005' time '4:57:18 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.32' message 'Correct misc primitives plugin to handle String rewrite.Fix variable C decl in ASynchFilePlugin' id 'fe03418f-871e-4734-be54-fcf989eb9fe4' date '6 June 2005' time '12:20:53 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.31' message 'Correct the archive post-String rework by removing the MultiString methods' id '7068cad6-40cc-4372-8340-bbe9d1fd10db' date '6 June 2005' time '11:06:07 am' author 'tpr' ancestors ((name 'VMMaker-tpr.30' message 'Fix Mantis bug 1078 - MessageNode>asTranslatorNode used isMemberOf: Symbol which fails after the i18n String changes' id '3fad305d-8b61-4f15-9e5e-a7306df6b34f' date '3 June 2005' time '10:29:47 am' author 'tpr' ancestors ((name 'VMMaker-tpr.28' message 'Add LocalePlugin to support the Locale class in 3.8' id 'f58829bf-1ba3-40f9-8ae9-b7c280439192' date '2 June 2005' time '1:33:14 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.27' message 'add small class instantiation without spending time filling the slots for makePoint etc.fix some uses of storePointer where the value is a known SmallInt (use storePointerUnchecked isntead)add pop:thenPushInteger:' id '753467c0-12fb-4247-9ca4-fe7bec524097' date '13 May 2005' time '3:30:05 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.26' message 'revert #isIntegerValue: to use EOR trick -works for 32 & 64 bit machine. I think.fix storeInteger:ofObject:withValue: to skip root oop check' id 'dd3aef61-67c3-4659-be2b-432de30298de' date '12 May 2005' time '6:42:37 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.25' message 'fix mistaken use of storeWord:ofObject:withValue: in primitiveVMParameter.clean up a few comments' id '8f3d71f2-b477-4d5c-901f-4098b9d2e99b' date '9 May 2005' time '7:16:10 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.24' message 'Fix FloatArrayPlugin>primitiveDivFloatArray to use inAtPointer for thetest-for-0 loop. Add #intAtPointer: to the CCodeGen list of builtin operators' id '9ae7585c-03a6-4736-a8e7-93dcef59e782' date '3 May 2005' time '12:30:47 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.23' message 'Correct a dumb mistake in Interpreter>sufficientSpacetoInstantiate:indexableSize:' id '4d4b06ba-7c46-49e7-af7d-34644273f82a' date '27 April 2005' time '12:33:25 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.22' message 'Merge in johnmci & ar''s GC instrumentation and weak pointer changes' id '1cf76689-49f5-46fa-ba92-66e444c23a93' date '27 April 2005' time '11:36:52 am' author 'tpr' ancestors ((name 'VMMaker-tpr.21' message 'change primitiveClone and primitiveClipboard to reduce the chances of them causing a fatal out of memory error.' id 'a63669ec-9bc4-4f85-9b1b-cbd78e52ee13' date '26 April 2005' time '12:53:22 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.20' message 'Merge dtl''s changes to support VM reporting of the guilty lowSpace causing process into the 64bit stream.' id 'a0f6e9f2-3752-41b9-8b89-f5da12539592' date '25 April 2005' time '7:20:15 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.19' message 'Adopt Ned''s UI fix and deprecated method changes.Change UI around a bit to try to gather buttons in more logical groups.Extend config files to understand 64bit vm flag' id '00a8f874-395b-43e9-b60d-da19cda7aa9d' date '7 April 2005' time '11:26:29 am' author 'tpr' ancestors ((name 'VMMaker-nk.18' message 'Improved UI by adding checkbox, simplifying construction code.Took care of some deprecated methods.' id '4281490e-229f-45be-8508-d2cd678e0de2' date '5 April 2005' time '11:51 pm' author 'nk' ancestors ((name 'VMMaker-tpr.17' message 'Change VMMaker/Tool to add some support for 64bit building (a dumb switch that ought to be a checkbox or similar).One change to bitbltsimulation to change a C type from ''unsigned char *'' to ''char *'' in primitiveDisplayString' id '9bce93ee-de47-43df-b8b8-00a7c20aa6df' date '4 April 2005' time '7:46:06 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.16' message 'Second version of VMMaker 3.8 b4 with 64bit enhancementsAdd slightly cleaner reading SmartSyntaxPluginCodeGenerator >generateCPtrAsOop:on: indent: without assumed size of base header.' id '251b916a-b9ad-4922-af69-1c570be09ef8' date '1 April 2005' time '2:35:56 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.15' message 'First mc version of VMMaker3.8 plus 64 bit enhancments.Also suck in assorted ''plugin generation'' protocol methods that had been lurking around the main image.' id '2371367b-cc78-49dc-9506-2ccd04793329' date '1 April 2005' time '1:20:09 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.14' message 'To VMMaker3-8b2 add:-DumpTouch - remove need for taking care about filing in #touch first but de-factoring noteCompilationOf: a bit. Means no need for complex .sar filestructure.VMMakerFixForSVN - stop the copying of svn files & dirs now we are using it.VMMaker38b2NewRemovals - get rid of some redundant #newsVMMaker-3.7b5-unsignedFixes3 - some type tweaks for slang code that seem to stop >2Gb being a problem oop.' id 'e51966ce-3464-4713-8467-588396b9f765' date '21 March 2005' time '8:19:40 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.13' message 'Add MacMenubarPlugin for Areithfa Ffenestri support' id 'bb4cb0ef-13bc-4c5b-a272-9a7d2dd132cc' date '8 December 2004' time '6:01:38 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.12' message 'Add Areithfa Ffenestri release 1 to repository' id 'e2fc76dd-813e-4cf0-89d9-254f479952b3' date '7 December 2004' time '5:16:28 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.11' message 'Rework of fix that allows the (rather surprising) use of oop becomeForward: oop in ImageSegment loading whilst still protecting against VM blowups for oop become oop etc. See comments in prepareForwardingTableForBecoming:with:twoWay: for some details.This patch WILL NOT prevent problems with other plausible multiple-reference-of-one-opp become operations. That is quite a bit more complicated and ought to be dealt with in image code ' id 'f4b66ece-d892-40ad-a0b9-3b374446f244' date '29 November 2004' time '3:19:59 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.10' message 'add small cleanups for (ab)use of imageName in writeImage: etc and for some increased safety in imageNamePutLength (note the return value, fail prim if 0)' id '8ce64dd8-e84f-4fcf-a08d-36d0242b1adc' date '24 November 2004' time '12:00:22 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.9' message 'First version for 3.8aInclude:- performwithargs fixes. new closures stuff from hannan some misc bad-char fixes LargeIntplugin fixes some more simulator fixes the call-external-prim from cache stuff' id '589faa58-68d3-41cf-9a84-09d22ab14d5c' date '23 November 2004' time '7:19:32 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.8' message 'protect error messages in new LargeInteger plugin method with debugCode: clause as with al the other uses' id 'a024640f-14c0-439c-a4de-350c9d44c4a5' date '3 June 2004' time '2:16:11 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.7' message 'bug fixes for primitiveYield & LargeIntegers plugin problems with non-normalized LPIs.' id 'b8029f71-ca7a-4588-b79d-15b0fff29390' date '3 June 2004' time '12:22:29 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.6' message 'Change primitive dispatching to use the address found in the method cache.Assorted simulator fixes.' id '8782e4c6-2e5b-495d-b00d-5071a367ab50' date '22 May 2004' time '5:40:18 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.5' message 'Add a prerequisite package to handle the Object>touch method.Correct a snafu in CCodeGenerator>emitCHeader:You WILL need to make sure you have the latest sq.h ' id '5324beb0-80ce-d249-9f75-8bb2f03f4daf' date '30 March 2004' time '9:56:47 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.4' message 'Try saving again' id '5b674d71-e085-f347-8493-a0be9b332844' date '30 March 2004' time '3:03:06 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.3' message 'Remove the primitive timing code from primitiveResponse and move it to primitiveExternalCall on the premise that only named prims take along time. Clearly this is a simplistic assumption and some numbered prims cause garbage collects which likely take more than a tick. We will clean this up in a while.Further, build a table of the function addresses of all numbered prims and branch to them instead of using a case statement. This requires a number of changes to the CCodeGenerator.' id '0a44200a-1e8d-8244-b365-970b9663df70' date '30 March 2004' time '2:37:43 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.2' message 'Loaded VMMaker 3.7beta 1 for the first time. Appears to be all installed ok.' id '414a0c3e-60de-11d8-86f4-000a95e1d7a2' date '16 February 2004' time '4:14:30 pm' author 'tpr' ancestors ((name 'VMMaker-tpr.1' message 'empty log message' id '04a8d1a3-60dc-11d8-86f4-000a95e1d7a2' date '16 February 2004' time '3:58:29 pm' author 'tpr' ancestors () stepChildren ())) stepChildren ())) stepChildren ())(id '414a0c3e-60de-11d8-86f4-000a95e1d7a2')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(id '989fc93f-919e-49e1-8643-14cdcc540371')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-jcg.103' message 'Add #primitiveSoundSetRecordBufferFrameCount: to SoundPlugin... sets the size of the record buffer used by the plugin.' id '15f4ed26-7b7a-334f-9842-58d8075df280' date '6 June 2008' time '10:34:42 am' author 'jcg' ancestors ((id '4965957f-92c3-324b-866e-9042ba943616')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.161' message 'Removed GeniePlugin which now lives in VMPluginsExtra' id '2df6db89-f8bd-41b6-b6dc-6e04e4e5895e' date '10 October 2008' time '5:00:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.160' message 'Added a label for thye bytecode dispatch.Removed an optimizer-duplicated label for the non-stack VM.' id 'f5d14b96-2877-418a-b8ec-093370519640' date '10 October 2008' time '4:16:37 pm' author 'eem' ancestors ((name 'VMMaker-eem.159' message 'Put numStackPages initialization in the right place and right order.  Sigh.' id '00b903a0-aa38-44ef-98f1-cb5b57daa6f7' date '9 October 2008' time '4:40:34 pm' author 'eem' ancestors ((name 'VMMaker-eem.158' message 'assertWellFormedPageList now invoked only through assert.This should speed up the benchSwitch: benchmark by about 10%.number of stack pages now a parameter stored in the image file header.Get number of stack pages in use via	Smalltalk vmParameterAt: 42Get/set desired number of stack pages via	Smalltalk vmParameterAt: 43' id '643ce812-aa10-4230-8a08-8347973fbb28' date '9 October 2008' time '4:07:27 pm' author 'eem' ancestors ((name 'VMMaker-eem.157' message 'Change StackInterpreter and Interpreter over to new BlockClosure rep (copied values in indexed inst vars).  Added SchizophrenicClosureFormatStackInterpreter to bootstrap old-format images to new.Add no-context-switch value primitives.Ripped out interrupt check counter & feedback from StackInterpreter.Fixed forwarding (one-way_ becom so that objects can become-forward into SmallIntegers.Add new VM Profiler support.Add support for labels (asmLabel:) which now labels the VM for the VM profiler.Order exported primitive table for stability.Add #isSymbol null translator.Use isFoo instead of isKindOf: Foo for cleanliness.Cleaned-up directive extraction in TMethod.  Now all extraxctions use a common engine method.Added ''refresh plugin'' list to VM Maker Tool that allows one to include a newly added plugin to an open VM Maker.' id 'e6e4a715-e0e9-4626-9f1c-90af645854df' date '30 September 2008' time '12:18:03 pm' author 'eem' ancestors ((id 'ed89353b-eeeb-482b-a040-996e45ed8b6a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.214' message 'Fixing snafu for WIndows so it once again eschews the global struct.' id 'c5fe6cd1-6406-4886-a9b5-99ce1c368f42' date '6 January 2009' time '6:59:58 pm' author 'eem' ancestors ((name 'VMMaker-eem.213' message 'Fixing snafu for WIndows so it once again eschews the global struct.' id '8b306cad-5acb-4be3-9df1-d76d0fbe0cc2' date '6 January 2009' time '6:58:50 pm' author 'eem' ancestors ((name 'VMMaker-ar.212' message 'primitiveIsWindowObscured for Brad.' id 'deb0a432-58bc-49a4-aa83-064fdc5ce742' date '6 January 2009' time '4:49:59 pm' author 'ar' ancestors ((name 'VMMaker-ar.211' message 'Remove extra period in primitive; it causes grief for the slang translation.' id '7dbad5b3-9d29-4a48-90dd-152e41667f6d' date '6 January 2009' time '3:55:40 pm' author 'ar' ancestors ((name 'VMMaker-eem.210' message 'Integrated Nicholas Cellier''s M7260 NaN comparison fixes.Fixed order dependency for Cogit class initialization.' id '95008e61-36c1-475f-93e4-3d503cf1200b' date '6 January 2009' time '10:42:32 am' author 'eem' ancestors ((name 'VMMaker-ar.209' message 'Add support for raw socket creation primitive.' id 'f0c63509-8915-5d44-bb0f-6738300537d7' date '5 January 2009' time '7:54:38 pm' author 'ar' ancestors ((name 'VMMaker-bgf.208' message 'Eliot''s fix for the compactClassError message routine,allows fresh generated interp.c to compile.(Checking in since he''s got Monticello/network issues.)' id '3b4b4bb4-8449-47ca-ba1c-ea15500327ae' date '30 December 2008' time '5:11:26 pm' author 'bgf' ancestors ((id 'fdcfe7f9-4256-420e-b9e2-9779d24e4dd7')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-ar.308' message 'Provide guarded access for plugins to stackXXXXValue: so that we can trap problems with stack alignment properly.' id 'd08dfcbb-5636-e942-af92-8584d820c5da' date '6 March 2009' time '2:43:44 pm' author 'ar' ancestors ((name 'VMMaker-ar.307' message 'Safer stack manipulation for plugins. push/pop are no longer actually pushing and popping, instead remember the intent. Only the VM pops after primitive return. Also provides some interpreter proxy methods:* methodArg: indexWorks like stackValue: just accessing method arguments in left-to-right order. Argument zero is the receiver, argument 1..N the actual method args. Will fail if you attempt to access args out of range.* integerArg: indexA variant of methodArg: that extracts the integer value and fails if the arg isn''t an integer.* floatArg: indexA variant of methodArg: that extracts the float value and fails if the arg isn''t a float.* objectArg: indexA variant of methodArg: that will fail if the argument is a small integer and otherwise return an oop.* methodReturnValue: oopSets the return value from a primitive. Use this instead of the classic interpreterProxy push: interpreterProxy methodArgumentCount+1 thenPush: resultOop.* topRemappableOopReturns the top of the remap buffer. Useful in loops to avoid having to write push/pop pairs all the time.' id '8294f6a5-033d-2644-ac0c-72294e42fc5e' date '6 March 2009' time '11:59:16 am' author 'ar' ancestors ((id '183a1e93-7b7d-42f2-b3bb-553c1cabbfbd')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.426' message 'CogVM:	repeatedly recompiling a method for block activation that can''t	be compiled (e.g. because it contains a new reference) is a bad	idea; it hurts.  Don''t do that.' id '72f041d9-da37-4299-83ec-63d2301c1173' date '5 June 2009' time '2:42:46 pm' author 'eem' ancestors ((name 'VMMaker-eem.425' message 'BalloonEngine	loadBitBltFrom: & loadFormsFrom: return booleans.  Fix clients	appropriately.  Needs Balloon-eem.17.' id 'b4ef7fd0-86bc-4edc-a22f-2bfe12b8d945' date '4 June 2009' time '6:28:13 pm' author 'eem' ancestors ((name 'VMMaker-eem.424' message 'BalloonPlugin rewritten with error codes.  Needs Balloon-eem.16 or later (see Oinq).' id '5b3b847c-ee59-413e-8345-86dc7e3986df' date '4 June 2009' time '5:15:16 pm' author 'eem' ancestors ((id 'cf07f786-e964-44b2-9d57-07282128ddb4')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.452' message 'CogVM:	restored buildability by nuking rump multi-threading code.' id 'c34c5ae8-f778-4092-bf31-fcc2948c912d' date '23 July 2009' time '5:22:23 pm' author 'eem' ancestors ((name 'VMMaker-eem.451' message 'CogVM:	Fixed startup memory setup bug where old code set	memoryLimit too high by the size of the cogCodeZone.	Accounts for Andreas'' crash opening a traffic simulator and	Craig''s bug starting up on 64-bit linux.' id '35658486-5128-4b43-b28f-e484317a6d3e' date '23 July 2009' time '4:46:37 pm' author 'eem' ancestors ((name 'VMMaker-eem.450' message 'CogVM:	Fixed startup memory setup bug where old code set	memoryLimit too high by the size of the cogCodeZone.	Accounts for Andreas'' crash opening a traffic simulator and	Craig''s bug starting up on 64-bit linux.' id '3b32b464-a7a4-4731-8e26-ebf7fc9bc9ac' date '23 July 2009' time '4:45:02 pm' author 'eem' ancestors ((id '1c4b43cf-9e70-4d5c-8a12-2a45d601f9bb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.467' message 'BalloonEnginePlugin:		make sure pool vars are initialized before generatingSlang:	hack CCodeGenerator logging to the VMMaker logger' id 'b478e3ae-1fd6-47ea-8ad2-d2c9a1257496' date '27 August 2009' time '5:20:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.466' message 'CogVM:	conditionalize threaded support trampolines so the non-threaded	Cog VM still builds.Slang:	Parameterise comment writing with BitstreamVersSans so that	method comments are not refrmatted when using a different	system text style.' id '18f8154a-7a61-4ebb-bfa9-bb1ddaae8ae3' date '27 August 2009' time '12:00:34 pm' author 'eem' ancestors ((name 'VMMaker-ar.465' message '32 bit alpha cursor support.' id '804327cd-9831-5542-b764-9adedc06bcc2' date '26 August 2009' time '8:16:29 pm' author 'ar' ancestors ((name 'VMMaker-eem.464' message 'CogVM:	initialize flagInterpretedMethods correctly in the simulator' id '5b8d324c-46ee-4896-ada9-21f3e92bcc7f' date '26 August 2009' time '5:23:13 pm' author 'eem' ancestors ((name 'VMMaker-eem.463' message 'Merge with Oinq VMMaker-eem.462 to pull in fixes/known good changes, excluding threaded work.CogVM:	Fix bug in clearCogCompiledCode; must void youngReferrers.	Fixed assert in activateInterpreterMethodFromMachineCode	that would complain if a methods primitive is not implemented	by the VM (e.g. next & nextPut:).	implement missing storeAndPopTemporaryVariableBytecode	to use itemporary:in:put: instead of temporary:in:put:.	provided a parameter to control sizse of methods compiled to	machine code.  Changed default size to 60 literals or less.	Added flagging of interpreted methods via bit 2 (4) of	vmParameterAt: 48.  VM sets flag bit of a method''s header if	flagging in effect.	Fixed bug in setImageHeaderFlagsFrom: to avoid setting	processHasThreadId incorrectly.Stack & Cog VM:	Print process oop when printing all stacks.	Add a primitive to void VM state (#214)StackVM:	inline temporary:in: for faster marryFrame:SP:	Refactored transferTo: extracting code to make new active	context executable to externalSetStackPageAndPointersForSuspendedContextOfProcess:	Fixed a couple of bugs in the simulator.  On the Cog VM the	StackVM simulates faster than at a crawl.All VMs:	Store nil in myList of new active process in transferTo:[from:]Slang:	Don''t complain about <doNotGenerate> methods being already	defined; they''re going to be filtered out anyway.VMMaker:	restored GeniePlugin with DTL''s fix to eliminate extra temps' id '735121f7-f7d1-418e-839c-26ab7979c7f9' date '26 August 2009' time '5:11:54 pm' author 'eem' ancestors ((id '3cdf2d4b-1b4d-4db2-abdb-6f1190431f0f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.472' message 'CogVM:	machine code store check must use unsigned comparisons for	dest old & value young!' id '4e584c4c-5e5f-41ed-b8bc-80707f2939bb' date '2 September 2009' time '6:10:02 pm' author 'eem' ancestors ((name 'VMMaker-eem.470' message 'CogVM:	machine-code primitiveIdentityHashStack & Cog VMs:	provide printProcessStack: for debugging.' id 'a4b2f642-ae84-4a82-b70a-dde41301f05e' date '1 September 2009' time '12:30:18 pm' author 'eem' ancestors ((id 'b478e3ae-1fd6-47ea-8ad2-d2c9a1257496')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.490' message 'Cog & Stack VMs:	64-bit microsecond clock basis.	thread-safe signalSemaphoreWithIndex:' id 'cd3ed4c0-129c-4d4d-81c2-22a50a5ba618' date '25 September 2009' time '4:48:06 pm' author 'eem' ancestors ((name 'VMMaker-eem.489' message 'Stack & Cog VMs:	add long-running primitive detector.Cog VM:	fix VM support for QSystemProfiler.  a) only compile profiling	code if profiling is turned on.  b) collect samples before and after	a primtiive has run (whether or not the primtiive fails).' id '7172f55f-4d88-467c-a792-4cedf8c6f959' date '25 September 2009' time '3:44:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.488' message 'Slang:	Allow cCode:inSmalltalk: to take two blocks as well as a string and	a block.' id '8d03949d-99a1-4156-aec5-7fe65cb3710b' date '25 September 2009' time '3:18:02 pm' author 'eem' ancestors ((name 'VMMaker-eem.487' message 'Cog & Stack VMs:	use = instead pf == for comparing oops and especially stack	pages. In the Cog simulator stack pages are surrogate objects so	== will give incorrect results.  Oops may conceivably exceed	SmallInteger range.	make sure smashed stackLimit (char *)-1 is actually unsigned in	simulation and hence causes stack check failure (rather than -1	which won''t).	Fix symbolic method printing.	Bounds check stack access in Cog stack page srrogates	Comment typoes/misdescriptionsBalloonEngineSimulation	speed up overall simulation by 5% via cacheing the bbObj.' id 'c869aeb8-7bce-4fef-b413-c36b5de968c8' date '25 September 2009' time '3:14:42 pm' author 'eem' ancestors ((name 'VMMaker-eem.486' message 'CogVM:	add machine-code SmallInteger multiplicative primitives *, /, //, \\ & quo:.	Add tests for the opcodes.	refactor voidVMStateForSnapshot to reduce couplingStackVM:	faster signed64BitValueOf: that also simulates correctly.All VMs:	nuke unused ioLowResMSecsObjectMemory:	add forwardingPointerOf: to abstract bit twiddling' id '573990c9-437f-4306-bd61-95adde90080d' date '25 September 2009' time '2:40:58 pm' author 'eem' ancestors ((id '4e584c4c-5e5f-41ed-b8bc-80707f2939bb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.480' message 'CogVM:	fix machine code SmallInteger>>bitShift: primitive for -1 bitShift: 31	case.' id '06199483-2069-4638-a104-891d4e5bcd1d' date '17 September 2009' time '2:36:34 pm' author 'eem' ancestors ((id '4e584c4c-5e5f-41ed-b8bc-80707f2939bb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-ossi.3' message 'StackVM:	Store nil in myList of the activeProcess (bug fix).	Added activeProcess, used throughout process prims.	Refactored new frame set-up in transferTo:	Fixed some a couple of simulation bugs in	checkIsStillMarriedContext:currentFP: and	primitiveObject:perform:withArguments:lookedUpIn:.	Fixed speeling of receiver in some comments	Removed duplicated defs of the HeaderType bytes.Plugins:	Restored GeniePlugin thanks to DTL''s fix.	Nuked unused ffiArgClass in FFIPlugin' id '0ea9ee11-3137-4be2-b502-1b515bef6409' date '18 August 2009' time '2:10:59 pm' author 'eem' ancestors ((name 'VMMaker-ossi.2' message 'Nuked GIF & PNG plugins.  Merged erroneous prim fail pop fixesfor File, Security & Socket plugins.' id '6af1c4c7-c0db-4d92-a828-326810e9173e' date '3 August 2009' time '10:48:27 am' author 'eem' ancestors ((name 'VMMaker-ossi.1' message 'First candidate for the OpenSource StackInterpreter, CogVM #2.This is derived from VMMaker-eem.446 and stripping it of all JITclasses.' id 'bb0ec681-c856-4316-97fe-659e157fbf7a' date '2 July 2009' time '2:41:03 pm' author 'eem' ancestors ((id 'fa2057d1-8681-40eb-9eec-d61abb25a868')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.578' message 'Move some SmartSyntaxPlugin VMMaker extensions from Collections and Kernel into the VMMaker package' id '4ea3046f-772a-413e-a27c-ecc7b75e9d6e' date '26 May 2010' time '4:26:03 pm' author 'eem' ancestors ((name 'VMMaker-eem.576' message 'CogVMs:	Implement the unimplemented case in primitiveTerminateTo ofterminating from other than the top frame to a context in the middleof the current stack page.Slang:	fix source comparison of surrogate accessor classes (''foo'' asText ~= ''foo'' asString).	Use fixed pitch in formatting comments.Comments & typos.' id '82b3a5dd-0f8e-4a99-9e8d-80d25ff8f947' date '24 May 2010' time '2:29:32 pm' author 'eem' ancestors ((name 'VMMaker-eem.575' message 'Bow to the inevitable and make the order of UnsafeAlien and InvokeCallbackSelector match those in the outside world.  We''re not using these yet so it doesn''t affect us.' id '16f44afd-9087-40d0-b97e-ceb1982d29b3' date '22 May 2010' time '2:56:49 pm' author 'eem' ancestors ((id 'b9916283-87c7-44c2-99b7-eeffc2ff0f34')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.584' message 'Correct integration typo in VMMaker-eem.583 checkin.' id '1dab8071-9095-4f58-9c3f-1ec690d455bb' date '31 May 2010' time '2:04:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.583' message 'CogVM:	Fix bug with machine code references to objects in become ops.Make sure the youngReferrers list is pruned in mapObjectReferencesInMachineCodeForXXXGCotherwise youngReferrers can get duplicate entries which screws upremapping of obj refs in machine code during GC.	Mo'' betta asserts around the youngReferrers list and more leak	checking of generated code.	Make some bounds types in the method zone unsigned and cleanup some comparisons.' id 'e9758c5b-4ad3-4c20-877f-f85631570e6f' date '31 May 2010' time '1:54:24 pm' author 'eem' ancestors ((name 'VMMaker-eem.582' message 'CogVM: Extend the leak check to the traceLog.  Bob''s crash seems to bein there.' id '7e793a87-8d0b-4237-b289-46ebe4056cdf' date '28 May 2010' time '7:20:27 pm' author 'eem' ancestors ((id '4ea3046f-772a-413e-a27c-ecc7b75e9d6e')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog.42' message 'Fix rounding bug causing underestimate of openPICSize andresultant hard crashes.' id 'd3b303c1-306e-4343-b078-655fc2bfc436' date '1 January 2011' time '2:28:38.876 pm' author 'eem' ancestors ((name 'VMMaker-oscog.41' message 'Fix a bug with bytecode to pc mapping being confused by framelessblocks which caused a crash when converting an interpreteractivation of Cogit class>>generatorTableFrom: to machine code.In the SRMCogit mark the conditional jump following #== as deadcode and elide it.Fix SimpleStackBasedCogit compilation by ifdeffing out the body ofenterRegisterArgCogMethod:at:receiver: and addding dummyregisterMaskFor:... defs.Fix an assert for objects-as-methods in activateInterpreterMethod...Fix gnuification for the change that moved a funciton''s opening { toa newline.' id '096b8a29-e7e8-4cbf-b29c-0f096abbdd5c' date '1 January 2011' time '11:58:42.466 am' author 'eem' ancestors ((name 'VMMaker-oscog.40' message 'New StackToRegisterMappingCogit that produces significantly more efficient and more compact code.Benefits vary widely based on work-load.e.g on 2.66 GHz Core i7 MacBook ProSimpleStackBasedCogit: [1 to: 100000000 do: [:i|]] timeToRun 691StackToRegisterMappingCogit: [1 to: 100000000 do: [:i|]] timeToRun 192192 - 691 / 6.91 -72%SimpleStackBasedCogit: 0 tinyBenchmarks ''753495217 bytecodes/sec; 64769127 sends/sec''StackToRegisterMappingCogit: 0 tinyBenchmarks ''931756141 bytecodes/sec; 128157989 sends/sec''931756141 - 753495217 / 7534952.17 -24%128157989 - 64769127 / 647691.27 -98%SimpleStackBasedCogit: [Compiler recompileAll] timeToRun 47013 (no transcriptStackToRegisterMappingCogit: [Compiler recompileAll] timeToRun 43406 (no transcript)43406 - 47013 / 470.13 -7.67234594686576Fix bug in pc mapping in blocks.  An ^-return in a block has both a pc map entry and a CallRT map entry because of the call toceNonLocalReturn.  Hence the bytecode descriptors need toreflect this.  The old code didn''t know this and hence pc mappingwas wrong for pcs following an ^-return in a block. Non-threaded callbacks.Implement legacy sendInvokeCallback:Stack:Registers:Jmpbuf: style.Provide a more general new style that avoids 64-bit limitations.VMCallbackContext includes all the necessary state for acallback, so the new arg count can be 1 (and is in interp.h).New sendInvokeCallbackContext will work with either oldAlien class>invokeCallback:stack:registers:jmpbuf: entry-pointor new Alien class>invokeCallbackContext:.Other fixes described in the history.' id '637db40c-33c6-4263-816e-1b8cc19e3c99' date '30 December 2010' time '12:37:41.745 pm' author 'eem' ancestors ((name 'VMMaker-eem.685' message 'RumpCStackSize needs to live in CoInterpreter.ChangeSet knows how to order arbitrary classes.' id 'e0abb3a5-0df6-406c-b879-fb50de794965' date '25 December 2010' time '3:24:46.656 pm' author 'eem' ancestors ((name 'VMMaker-eem.683' message 'New callback support for the ReentrantFFIPlugin' id '1b767632-e780-4820-9fc5-f8e6fe8ef36c' date '25 December 2010' time '3:00:02.69 pm' author 'eem' ancestors ((name 'VMMaker-eem.680' message 'CogVM:New StackToRegisterMappingCogit that produces significantly more efficient and more compact code.Benefits mostly for microbenchmarks.  e.g on 2.66 GHz Core i7 MacBook ProSimpleStackBasedCogit: [1 to: 100000000 do: [:i|]] timeToRun 691StackToRegisterMappingCogit: [1 to: 100000000 do: [:i|]] timeToRun 192192 - 691 / 6.91 -72%SimpleStackBasedCogit: 0 tinyBenchmarks ''753495217 bytecodes/sec; 64769127 sends/sec''StackToRegisterMappingCogit: 0 tinyBenchmarks ''931756141 bytecodes/sec; 128157989 sends/sec''931756141 - 753495217 / 7534952.17 -24%128157989 - 64769127 / 647691.27 -98%Cope with ContextPart>runUntilErrorOrReturnFrom: popping off temp vars (whichkills the stack-to-register mapping code scheme) by falling back on the interpreter(ensureContextIsExecutionSafeAfterAssignToStackPointer:).Attempt to jit on interpreted backward branches (default is 20 backward branches in the same method.Fix off-by-one stack bug on mustBeBoolean handling and move the add of true or false to restore thenon-boolean into the now pair of trampolines.Don''t bother to annotate nil,true & false as object refs.  So what if these can''t be becomed?  (Can alwaysvoid code zone if needed).  Best not to waste cycles on these.Activate sends from ceSend... run-times via executeCogMethod for better handling of primitivesand object-as-method handling.  Fix bug in executeNewMethod evaluation of quick primitives; i.e.pop and return the result of externalQuickPrimitiveResponse.Rationalize instVar:ofContext: calls so they all cope with the full range of inst var indices.Beef up printing of frames (cope with finding te top frame more reliably) and liberally use ensureCrin Smalltalk-only code for more legibility.Guard against integer messageSelector & newMethod for SmallInteger selectors & object-as-method.CogMTVM:New Alien callback scheme with all state bundled up in a single struct whose address is the sole callbackarg (and hence truly cross ABI), and longjmp returning return type code, avoiding 64-bit issues.  Bug fixes to own/disown for callbacks when VM is not owned.Add inIOProcessEvents to avoid reentry (for native GUIs) and also better autorelease pool managementon Mac OS X.Add primitive to disable ioProcessEvent call for native GUIs (works by setting inIOProcessEvents negative).Support disowning the VM on relinquishProcessor for threaded callback access.Tracing of thread switches and callbacks.Slang:Merge the ''static struct foo'' declaration of the VM struct.Provide a generation entry-point that allows one to specify the concrete Cogit to use.Add cppIf:ifTrue:[ifFalse:] and use it where appropriate in preference to poor cPreprocessorDirective:.VMStructClass cleanups:	Don''t add VMStructClass inst vars; they''re just accessors and don''t pollute.	Allow identcical struct accessors from different classes to co-existMake sure selector translations use asSymbolAllow horrible declareC: ''#if .. '' convolution for vars of type jmp_buf.Rationalize the pointer-to-struct machinery moving it to VMStructClass and Cogit.  Support structvariables as well as pointer-to-struct variables.Allow translation of super sameSelector, and ^super sameSelector.Simulator:Check stack depth at sends (to debug StackToRegisterMappingCogit) using StackDepthFinder.  Alsoprovides DetailedInstructionPrinter for symbolic printing with stack depth.  Use in symbolicMethod:.See also VMCompiledMethodProxy.Partial fix for simulation of FFI calls (functionForPrimitiveCallout).Add a test of pc-mapping for all methods in an image.Add entry-points for compiling a method in the current image by a concrete Cogit.See CurrentImageCoInterpreterFacade.Short-cut evaluation of tracing trampolines to speed-up simulation.In general: usual compiler warning fixes, typos and unused code removal.' id '794a0b29-214f-4c6f-ae9b-5518b0e29e36' date '25 December 2010' time '1:29:39.955 pm' author 'eem' ancestors ((name 'VMMaker-eem.677' message 'CogMTVM:	first "successful" Mac file dialog invocation using asynchronous	callbacks for file filtering and result collection ("successful"	because it follows a null pointer after printing the result).  Fix is	that willingVMThread must answer other than the owner.	Fix bug slip in tryLockVMToIndex: setting vmOSThread to wrong	type (should be an osThread not a vm owner index).	Add ClassByteString as a more accurate alias for ClassString.	Add new interpreter proxy support: cStringOrNullFor:,	sizeOfAlienData: & startOfAlienData: for callback-based File Dialog.Slang:	Add support for translating ifNil:ifNotNil: et al.	Modify function header to put the opening ${ on a new line (a	crutch I lean on for finding the start of the enclosing function)' id '4ebd6e44-9c0a-41a8-9cef-53c480e7b41a' date '2 November 2010' time '2:35:48.882 pm' author 'eem' ancestors ((name 'VMMaker-eem.676' message 'snafu.  No ifNil: support in Slang as yet.' id '30d13f14-853c-4083-bfac-c145d6356125' date '26 October 2010' time '2:59:06.115 pm' author 'eem' ancestors ((name 'VMMaker-eem.675' message 'In the MTVM move the abort on no runnable processes test intotransferTo:from: from wakeHighestPriority.  This allows transferTo:from:to check for a thread waiting to own the VM before it aborts.  Factor outthe thread-switch longjmp code intoreturnToSchedulingLoopAndReleaseVMOrWakeThread: (gulp).Provide symbolic constants for longjmp to interpreter & longjmp tothreadSchedulingLoopSlang, relax super expansion restrictions so CoInterpreter>transferTo:from:can invoke super transferTo:.' id 'f8e9990a-7ffd-4e7d-bcb2-e48975ad536b' date '26 October 2010' time '2:48:49.627 pm' author 'eem' ancestors ((name 'VMMaker-eem.674' message 'Fix trailing garbage after undef in interp.h' id '7dbc088d-e5f0-4979-ae98-d767ad553776' date '24 October 2010' time '10:09:42.502 am' author 'eem' ancestors ((name 'VMMaker-eem.673' message 'Fix snafu in VMMaker-eem.666.  Added a signalExternalSemaphoresto callbackEnter: (correct) but followed it by a test for ~~ instead of ==.' id 'd1addb33-5fc7-47e9-a2f6-40dc2215fc4a' date '23 October 2010' time '7:25:48.173 pm' author 'eem' ancestors ((name 'VMMaker-eem.672' message 'CogMTVM Simulator:	Nuke tricky broken explicit threading of the simulator processor	in favour of an encapsulator (MultiProcessor). (Simplifies thread-	local storage and nukes lots of ensureProcessorInThread crap).	Refactor threadSchedulingLoop into it and tryToExecuteSmalltalk:	and hence fix quit on no runnable process hiccup.	Change processor simulator to enforce execute permissions	below the heap.CogVM:	allow mutex prims to take an explicit effectiveProcess for the	debugger to use when simulating mutex prims.	Refactor primitiveBehaviorHash so there''s no assumption that	0 is an invalid hash.Slang: liberal use of ensureCr' id '76f1937e-0a3e-4c94-be3a-ad0d0978c33e' date '22 October 2010' time '4:10:03.217 pm' author 'eem' ancestors ((name 'VMMaker-eem.671' message 'CogVM:	add the restore of saved C stack pointers to returnAs:...	Speed up callbacks > 3x by using _longjmp instead of longjmp.	Split cePrimReturnEnterCogCode into cePrimReturnEnterCogCode	& cePrimReturnEnterCogCodeProfiling (ineffective; moves	stall on accessing nextProfileTick to stall on accessing primFailCode).	Add prefetch instruction and use it for prefetching prim fail	code prior to interpreter prim call (ineffective; presumably too	far ahead of access, or access from cache is what''s slow?).Simulator:	Fix simulated variable and trampoline access. Old code created	many duplicate entries (but still worked).Nuke some unused methods and fix some comment typoes.' id 'eef5048b-5118-4769-a0a4-2a6a67b30f42' date '16 October 2010' time '10:22:08.876 pm' author 'eem' ancestors ((name 'VMMaker-eem.670' message 'Cog/Stack VM:	Non-threaded callbacks (threaded callbacks untested).	Implement legacy sendInvokeCallback:Stack:Registers:Jmpbuf:	style.	Provide a more general new style that avoids 64-bit limitations.	VMCallbackContext includes all the necessary state for a	callback, so the new arg count can be 1 (and is in interp.h).	New sendInvokeCallbackContext will work with either old	Alien class>invokeCallback:stack:registers:jmpbuf: entry-point	or new Alien class>invokeCallbackContext:.	Provide new machineInteger methods alongside 32-bit & 64-bit	integer methods for Alien plugins.	Move primitiveFail/success methods and *Bit*VaueOf: methods	up into InterpreterPrimitives.	Rewrite the integer conversion methods to get the class tests	inlined and to thus avoid class access  (since there are compact	class indices defined for the large integer classes).	Move sizeof: methods up into VMClass.Alien Plugins:	Use machine integer accessor to decode indices so they can	range over entire address space. Slang:	Move all the struct type checking to VMStructType which	maintains a cache of type names.  Eliminate all the CogClass	specific methods.	Adjust include file generation so that <standard includes> are	emitted before "local includes" (so that <setjmp.h> is always	included before interp.h, for VMCallbackContext).	Nuke unused processAssortedFiles (RiscOS support?)' id '223722c0-410e-4572-a18a-c3641fc98657' date '15 October 2010' time '4:42:30.59 pm' author 'eem' ancestors ((name 'VMMaker-eem.669' message 'CogVM:	Pre-callback cleanups.	Refactor the nilling of ip & sender to markContextAsDead:.	Move addNewMethodToCache: into lookupMethodNoMNUEtcInClass:	from callers.	Eliminate some compile-time warnings due to prim return types.	Nuke some unused or duplicate methods.Plugins:	Fix a bug in SmartSyntaxPluginSimulator>computeSignatureMap	Make UUIDPlugin simulate and preen primitiveMakeUUID.	Nuke unused plugin' id 'ba44a471-c8bc-4cf2-9b35-0902289d046d' date '15 October 2010' time '3:18:22.34 pm' author 'eem' ancestors ((name 'VMMaker-eem.668' message 'VM & Large Integers:	Stream-line firstIndexableField: and use it to implement	LargeIntegersPlugin>>unsafeByteOf:at:.	minor simplification to digitSubLarge:with:SIulator:	Simulation support for SmartSyntaxPlugins, and hence	simulation of LargeIntegersPlugin.	Utilities menu for StackInterpreterSimulator.	Nuke obsolete & partial smart syntax simulation support.	Fix simulation of 64-bit integer arithmetic which didn''t	truncate the result to 64 bits, hence failing to fail for	results that overflow 64 bits.	Allow simulator to avoid booleanCheat: for comparing	bytecode traces obtained by runSimulated:contextAtEachStep:' id '4fe64113-5993-4659-95ce-42be8d611745' date '4 October 2010' time '7:32:27.234 pm' author 'eem' ancestors ((name 'VMMaker-eem.667' message 'Fix class-side declarations for ARM & PPC FFI plugins.' id '5509e701-320b-4dd8-94a6-2ae798cbe41c' date '30 September 2010' time '6:23:38.89 pm' author 'eem' ancestors ((name 'VMMaker-eem.666' message 'Cog:	Complete the ObjectMemory extract to inst var refactoring.	Remove the Interpreter subclasses of NewObjectMemory.	Rename all the FooS versions (e.g. StackInterpreterS) to Foo.	Move the bulk of the core primitives to InterpreterPrimitives.	Merge the MTS fork back into trunk.Warning: this may have difficulty loading into an image with VMMakeralready loaded and you''ll almost certainly need to recompile the package if you try this.' id '4edd7d00-3db5-48ef-b579-5d95fae49120' date '30 September 2010' time '3:38:44.557 pm' author 'eem' ancestors ((name 'VMMaker-eem.665' message 'CogMTSVM:	support for objects-as-methods (to reduce VMMaker forks).	when in the interpreter favour invoking the interpreter primitive	over invoking the Cog method that then invokes the interpreter	primitive more slowly.	refactor ceActivateFailingPrimitiveMethod: into	activateCoggedNewMethod: to build an activation of a cogged	method and then enter at the stack-check offset.  This avoids	repeating primitive invocations when activating a failing prim	method that''s cogged from the interpreter.Slang:	merge pragmas when doing a super expansion' id '90878487-ed43-4f06-a43a-2c9d8ef53b77' date '29 September 2010' time '1:27:56.001 pm' author 'eem' ancestors ((name 'VMMaker-eem.664' message 'StackVM:	- revert MyList failure check in primitiveResume' id '07023708-7f96-4f08-89f0-e3823bec9f6d' date '29 September 2010' time '1:21:34.459 pm' author 'eem' ancestors ((name 'VMMaker-eem.663' message 'CogMTSVM/StackVM:	various cleanups	- no longer inline checkProfileTick:	- limit number of VM will not thread messages	- correct the sendTrace bit flags defs	- use internalStackTopPut: in place of internalPop: 1 thenPush:
	- refactor checks into maybeMethodHasCogMethod:	- revert MyList failure check in primitiveResume	- use is:instanceOf:compactClassIndex: instead of assertClassOf:...Simulator:	provide a menu on the bytecode count pane with useful	expressions.  It''s now a tool :)' id 'c8636286-7c94-4495-aeea-975ba62bc0ab' date '29 September 2010' time '11:45:38.073 am' author 'eem' ancestors ((name 'VMMaker-eem.662' message 'CogMTSVM:	Fix Float < & <=; the NaN inversions for < & <= were mixed up.	(symptom was that 0 asFloat printed as -0.0, since 0.0 < 0 was true).	Fix simulation of the process-to-thread binding prims when	simulating a non-threaded VM.	Add a breakBlock to Cogit to support conditional PC breakpoints.' id '5d0bc137-cbfd-4055-997f-b0d2bda7e384' date '21 September 2010' time '8:04:36.523 pm' author 'eem' ancestors ((name 'VMMaker-eem.661' message 'CogSVM:	Refactor the booleanCheat to remove code duplication.	Saves 1.3k in the deployment Cog build (and > 3k in debug).	Fix some simulation methods to do with growing memory.' id '90ad2bc9-03ad-475a-8c24-2ecd65469d64' date '19 September 2010' time '12:02:28.92 pm' author 'eem' ancestors ((name 'VMMaker-eem.660' message 'CogVM:	Fix machine-code floating point comparisons for nan cases (< & <=).	Provide tests for CmpCqR CmpRdRd et al.	Nuke primitiveIdentityDictionaryLookup; it is unused and ties	down the system too much (putting e.g. a hash algorithm in the VM).Slang:	Transfor "cCode: [] in Smalltalk: []" on conversion to TMethod to enable	inlining in the cCode: block''s code.	Parenthesize TSendNode for more comprehensibility.' id '57e9b621-da48-41ab-af60-5e321c69dbbb' date '18 September 2010' time '9:21:04.687 pm' author 'eem' ancestors ((name 'VMMaker-eem.659' message 'Cogit:	Make prim float divide fail for a zero divisor.	Fix some compilation warnings from as-yet-unused bc-to-npc	mapping code.' id 'e21ec064-19d0-4aec-9db6-3cff848d8f83' date '16 September 2010' time '5:32:02.860999999 pm' author 'eem' ancestors ((name 'VMMaker-eem.658' message 'CogMTSVM:	Write the test of checkThreadOwnership to prevent non-callback	threads taking ownership during primitiveRelinquishProcessor	correctly.	Add signalExternalSemaphores to calbackEnter:.Slang:	Put a test and a "shouldBeImplemented" when properties exist	in inlining of super sends.' id '1206f633-0286-4abb-af05-024aae490388' date '16 September 2010' time '9:35:30.619 am' author 'eem' ancestors ((name 'VMMaker-eem.657' message 'CogMTSVM:	Make foreignCallbackProcess a variable so we can load images	with specialObejctsArrays that don''t include the slot (#56).CogVM:Fix bad bug in CompiledMethod>>flushCache/primitiveFlushCacheByMethod.Original code failed to flush the primitive embedded in the machine codemethod, causing it to run the previous primitive.Fix two bad bugs in the Cogit''s primitiveDoPrimitiveWithArgs.1. a 0 entry in the primitive table would be misinterpreted as a quickPrimitiveResponse instead of no primitive and consequent primitivefailure.2. Because of the way the process primitives "return" (they don''t, theylongjmp) the popRemappableOop wasn''t always executed, causing theremamp buffer to overflow.With these two fixes things like the following now work:	thisContext runSimulated:		[(1 to: 10)			do:[:aClass| (Delay forMilliseconds: 100) wait]			displayingProgress: ''Processing...'']Revert the change to wakeHighestPriority signalling external semaphoresbefore giving up.  The signal needs to occur before.  e.g. in the callbackcase the signaling needs to occur before wakeHighestPriority and alsoneeds to avoid creating two activeProcesses (the current and one activatedvia the signal).  fix in a subsequent commit.Nuke the unused checking primitive stack interface (shouldPopArgs et al).Nuke unused inst vars.' id '82fa15db-83b2-467c-a7a1-7cedca7a386b' date '13 September 2010' time '11:18:26.64 am' author 'eem' ancestors ((name 'VMMaker-eem.656' message 'CogMTSVM:	Make threadSchedulingLoop test checkThreadActivation to	prevent waking up when there''s no process ot run because	the VM is doing primitiveRelinquishProcessorForMilliseconds:.	Put a signalExternalSemaphores call in wakeHighestPriority so	that if the system finds there''s no process to run it''ll find	something made runnable by external code before aborting.	The use case is external code does a signalExternalSemaphore	immediately followed by a callback while the VM is in e.g.	primitiveRelinquishProcessorForMilliseconds: and since there	isn''t an occasion between the signal and the callback for the VM	to actually do the signal, the wakeHighestpriority in the callback	will abort.	Have the resume primitive also insist on a nil myList; it''s an	error to try and resume something already resumed or waiting.' id '17acc882-68ac-4858-85a1-ead3b8eb3c72' date '7 September 2010' time '4:38:01.886 pm' author 'eem' ancestors ((name 'VMMaker-eem.655' message 'CogMTSVM:	Use registerVMThread:/unregisterVMThread: for foreign callbacks.	Keep window open for Josh''s use case of registering a foreign	thread with the VM long-term (open, but not implemented yet)' id 'b027937f-a783-4763-91d9-ce44128e9b33' date '30 August 2010' time '2:34:54.577 pm' author 'eem' ancestors ((name 'VMMaker-eem.654' message 'CogMTSVM:	Most of the plumbing for callbacks, including foreign callbacks.	Allow disownVM:/ownVM: to be called in ownVM:/disownVM:	order. 		Initialize CogThreadInfo''s osSemaphore: in populate:from:to:		Make primitiveRelinquishProcessor disown the VM but via		checkThreadActivation avoid waking other threads in the		pool.	Replace jmpMax with a constant.	Fix some primitive to change their return types to avoid	primitive table initialization warnings form the C compiler.	Base ObjectMemory>requiredMethodNames on exportAPISelectors	Fix running the simulator''s quit block from other than the main	process.' id 'd87eb529-61d3-4b76-8523-dacaca06785c' date '27 August 2010' time '3:38:58.967 pm' author 'eem' ancestors ((name 'VMMaker-eem.653' message 'CogMTS:	Stop hardwiring Class''s name index and Metaclass''s thisClass index.	Fix a couple of stack simulator issues.Cog:	Move firstFixedField: into ObjectMemory where it belongs.' id '9418de18-0088-4d64-8abd-498eb421eb6c' date '17 August 2010' time '7:49:54.681 pm' author 'eem' ancestors ((name 'VMMaker-eem.651' message 'CogMTVM:	Work-around compiler bugs for the most negative 64-bit value	in signed64BitIntegerFor: & signed64BitValueOf:' id 'bbcf5e1c-65d8-4d4b-98c1-39add8fd926e' date '9 August 2010' time '9:03:25.451 pm' author 'eem' ancestors ((name 'VMMaker-eem.650' message 'CogMTVM:	Do the right thing and rely on counting semaphores	(implementation in platforms/unix/vm/sqUnixThreads.c,	c.f. the Smalltalk VM ones)' id 'badce6a2-44f6-43ef-a961-d8ce351785d9' date '30 July 2010' time '5:42:33.718 pm' author 'eem' ancestors ((name 'VMMaker-eem.649' message 'document the acquireVMFor: race with a comment' id 'a860f404-2f8e-4218-b355-fa4043f21730' date '30 July 2010' time '5:22:30.091 pm' author 'eem' ancestors ((name 'VMMaker-eem.648' message 'CogMTSVM:	Fix race condition in acquireVMFor: caused by posix	semaphores not being counting semaphores (so doesn''t	show in simulation).  Perhaps better fix is to implement	counting semaphores in platforms/unix/vm/sqUnixThreads.c.	Provide a specific count of disowning threads for a more	reliable pollpip (string args in FFI calls get copied to be null-	terminated and hence don''t cause fullGCLock to get set).' id 'a525f558-45a4-4a23-bdfa-e6cf39083eee' date '30 July 2010' time '5:17:39.914 pm' author 'eem' ancestors ((name 'VMMaker-eem.647' message 'CogMTVM:	Fix primitiveDoNamedPrimitiveWithArgs for unimplemented	prims so debugger correctly steps over & into unimplemented	named prims.' id 'b0b596a5-9393-44d4-85a6-3db45cba0b8f' date '30 July 2010' time '2:15:24.84 pm' author 'eem' ancestors ((name 'VMMaker-eem.645' message 'CogMTVM:	Don''t inline ensureRunningThread.	Add sqAtomicOps.h for THRLOG.' id '272f4325-57bc-4e56-acdd-29f456ea3b8c' date '29 July 2010' time '2:46:19.294 pm' author 'eem' ancestors ((name 'VMMaker-eem.644' message 'CogMTVM:	Fix regression caused by previous fixes.  The removal of the	releaseVM from startThreadForThreadInfo: means addig one	back in ensureRunningVMThread.' id 'ccbc1001-adba-4922-874c-a36b91d87a31' date '28 July 2010' time '3:35:00.604 pm' author 'eem' ancestors ((name 'VMMaker-eem.643' message 'CogMTVM:	Fix race condition in wakeVMThreadFor:.  Old wakeVMThreadFor: set	vmOwner after starting new thread, and startThreadForThreadInfo:	mistakenly did a releaseVM.	Provide accessors for vmOwner to allow use of mfence.	N.B. Race condition debugged using asprintf to collect traces while	deferring printing, e.g.	#define TLOGSZ 256int tlogidx = 0;char *tlog[TLOGSZ];    asprintf(tlog + tlogidx, "deferStackLimitSmashAround vmOwner = %d\n", vmOwner);     tlogidx = ++tlogidx & (TLOGSZ - 1);' id '65d95ea5-556a-44d0-9df0-99fc1af5a0d9' date '28 July 2010' time '1:41:54.995 pm' author 'eem' ancestors ((name 'VMMaker-eem.642' message 'Cog MT VM:	Implement no-threading-from-GUI-thread flag hack.' id 'efb5fe3a-8882-417e-bac7-2b83d32cf6a3' date '27 July 2010' time '12:30:29.584 pm' author 'eem' ancestors ((name 'VMMaker-eem.641' message 'CogMT:	Fixed thread-switch due to primitiveProcessBindToThreadId.	Fixed primitiveVMCurrentThreadId.	Some simulation tidy-ups (sqFileSize:, cStackRangeForThreadId:	& senders, correctly account for 4.1 window border width)	Some separation tidyups (markYoungObjectsIn:)N.B. all-in-one CoInterpreter/CoInterpreterMT has fallen behind.Its days are numbered.' id '9c61828c-b4ac-43a7-93d9-54daca13e643' date '27 July 2010' time '10:49:16.482 am' author 'eem' ancestors ((name 'VMMaker-eem.640' message 'CogMTVM:	process to thread binding machinery & primitives.	fix bug in populate:from:to: (old code never grew beyond initial	numThreads).	FloatMathPluginTests: change *-N to * -N.' id '0c5f1075-a797-4663-92a9-b7b017cd4de8' date '26 July 2010' time '12:00:45.969 pm' author 'eem' ancestors ((name 'VMMaker-eem.639' message 'CogMTSVM: export fullGCLock for debug/instrumentation' id 'a4bd43ad-469c-4412-80d9-829484e921ba' date '21 July 2010' time '8:13:39.207 pm' author 'eem' ancestors ((name 'VMMaker-eem.638' message 'CogVM: primitiveSetIdentityHash' id '43d93411-cea0-4086-8eb3-2c2ccf3e65eb' date '21 July 2010' time '6:47:14.359 pm' author 'eem' ancestors ((name 'VMMaker-eem.636' message 'CogVM:	primitiveBehaviorHash & primitiveMaxIdentityHash compatibility	prims.	# jitted methods vm parameter.	printInstancesOf:' id 'f3180422-f624-4631-ae2e-0c5b615bb4fe' date '21 July 2010' time '4:10:33.568 pm' author 'eem' ancestors ((name 'VMMaker-eem.635' message 'CogVM:	simulator labels for PIC disassembly and transcript setters.' id 'dc9d3978-68c6-41c3-9cd1-6b64cf8215af' date '18 July 2010' time '6:30:14.600999999 pm' author 'eem' ancestors ((name 'VMMaker-eem.634' message 'CogVM:	Refactor primitiveChangeClass, primitiveAdoptInstance and	assertClassOf:is:compactClassIndex: so that the interpreters	no longer access object representation constants SizeMask &	CompactClassMask.  Now StackInterpreterS only accesses	compact class indices which will be mapped onto the known	class indices in the new object format.' id '8d14d140-8779-44ce-adcb-5069bd2ba8aa' date '16 July 2010' time '8:16:29.945 pm' author 'eem' ancestors ((name 'VMMaker-eem.633' message 'CogVM:	The reorg of validate means validate needs a null	implementation for generation.' id '7a229265-2c90-4898-baa7-e773a7882bcd' date '16 July 2010' time '5:01:46.897 pm' author 'eem' ancestors ((name 'VMMaker-eem.632' message 'CogVM:	Reorgs to simulation code and primitiveIsRoot to localize	access to object-representation internals (RootBit SizeMask)	to ObjectMemory/NewObjectMemory.' id 'b741d3fe-d1c5-4f3c-9205-df38fec0ebb5' date '16 July 2010' time '3:59:36.271 pm' author 'eem' ancestors ((name 'VMMaker-eem.631' message 'CogVM: Take alloca from stddef.h.  malloc.h is an anachronism.' id '17b8c169-ba35-4c11-9ff4-e498ec847a72' date '15 July 2010' time '7:33:02.809 pm' author 'eem' ancestors ((name 'VMMaker-eem.630' message 'CogVM:	AllocationCheckFiller to varys with address if = 16rADD4E55.	Make include of malloc.h conditional on beung under WIN32.' id '80e55856-ba3e-4a65-a63a-db697b8e7acb' date '15 July 2010' time '4:35:20.626 pm' author 'eem' ancestors ((name 'VMMaker-eem.628' message 'ThreadedFFIPlugin:	Fix struct return, indexing return type spec corrrectly and not	being confised between the struct return size and whether return	is via registers or not.' id '36c4a2db-b0ee-409b-884b-eeedd6811ce7' date '13 July 2010' time '4:15:23.811 pm' author 'eem' ancestors ((name 'VMMaker-eem.626' message 'FFIPlugin:	restore access to the error, needed for backwards compatibility.' id 'f53f38b9-4af1-4578-8d05-db9ff8210744' date '13 July 2010' time '2:38:31.351 pm' author 'eem' ancestors ((name 'VMMaker-eem.625' message 'Plugins: Use pop:thenPush: in place of pop: followed by push: insome  frequently used methods.' id 'e40c1cb2-9a34-4c7f-86a9-4a7c2261a89d' date '10 July 2010' time '9:41:11.66 pm' author 'eem' ancestors ((name 'VMMaker-eem.624' message 'CogVM:	Fix primitiveObjectPointsTo for multiple of 4 length CompiledMethods' id '7025f236-b7d7-4f92-9236-94b08a776520' date '9 July 2010' time '3:36:56.916 pm' author 'eem' ancestors ((name 'VMMaker-eem.622' message 'Slang: put back prune step since its the allocation check that breaks ODBC.' id '817f8b68-cfaf-49ae-a73a-49a96e2ebefe' date '9 July 2010' time '10:56:51.505 am' author 'eem' ancestors ((name 'VMMaker-eem.621' message 'Slang: refactor generate method so one can create a maker and thene.g. ask it to generateInterpreterFile.Typo & nuke unused.' id 'c0b6baa9-7878-439d-9b8b-9479e780ddb5' date '8 July 2010' time '3:07:38.846 pm' author 'eem' ancestors ((name 'VMMaker-eem.620' message 'CogVM:	long-running primitive method code revisited.Slang:	revert pruning step in non-interpreter translations' id 'f9150a3a-4e72-4eb3-960a-25a22b454608' date '8 July 2010' time '11:27:21.48 am' author 'eem' ancestors ((name 'VMMaker-eem.619' message 'generateSelectedInt/ExternalPlugin holds a name not a class.' id '2f0e9169-e7d3-43f6-81bf-41a68d9cf80b' date '7 July 2010' time '4:35:07.435 pm' author 'eem' ancestors ((name 'VMMaker-eem.618' message 'CogVM:	add allocation checking to allocateInterpreterChunk:.	nuke obsolete method.VMMaker:	touch plugin on one-off generate to ensure its actually written	out' id '31b7e2d8-a0c2-410a-b4ab-23bf8475f833' date '7 July 2010' time '4:20:50.902 pm' author 'eem' ancestors ((name 'VMMaker-eem.617' message 'CogVM:	Avoid race between remapping and sampling long running primitive	by simply setting it to newMethod or nil post remap.  Add some	fences so that readers and writers sync accessing the value.' id '122d7809-600f-4f59-9b08-ba8c81bccf13' date '7 July 2010' time '12:24:26.905 pm' author 'eem' ancestors ((name 'VMMaker-eem.616' message 'CogVM:	Add a check for new objects being overwritten by filling eden witha marker value and checking that the value is present on every allocation.This will cause the VM to exit with an error on the next allocation aftera new object has been written into and beyond.Plugins: ReentrantFFIPlugin, dethreaded version of the ThreadedFFIPluginSlang:	Write out constants that look like hex in hex.Simulator:	Squeak4.x-ify.	Fix simulation of primitiveFileDelete' id '19c6a9db-c390-47b3-9c19-f558005ed621' date '6 July 2010' time '7:28:45.303 pm' author 'eem' ancestors ((name 'VMMaker-eem.613' message 'BitBltSImulation: Juan Vuletich''s fixes for combination rules that needto be handled as RGBA, not RGB.  Fixes font rendering in 4.1 images.' id '1f8aa371-b76e-4a5e-9b06-c2ccabf7484b' date '3 July 2010' time '6:30:56 pm' author 'eem' ancestors ((name 'VMMaker-eem.612' message 'CogVM: Correct sends of isMarked: & remap: in Cogit that shouldbe to objectMemory not coInterpreter.' id 'c12d3288-9d1a-4d94-b5b2-680a419cf62f' date '3 July 2010' time '6:06:59 pm' author 'eem' ancestors ((name 'VMMaker-eem.611' message 'FIx symbolicMethod:''s initial latest continuation (simulator)' id '0b480f31-e6e8-4667-b71c-51fb8cc43912' date '1 July 2010' time '7:40:36 pm' author 'eem' ancestors ((name 'VMMaker-eem.610' message 'CogMethodSurrogate>>isZero for simulation' id '6a25ff4e-1fed-4528-b8e8-6780a00cc4d2' date '1 July 2010' time '2:04:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.609' message 'CogVM:	some of the way towards bytecode pc to machine-code pcmapping.	set-up the quitBlock to close simulation window	comment out halts in simulated instVarOfContext methods' id '85739ffc-160e-452f-b1aa-882ba09aa278' date '29 June 2010' time '4:38 pm' author 'eem' ancestors ((name 'VMMaker-eem.607' message 'CogVM:	Fix off-by-one error in assigning inst vars of contexts viaprimitiveInstVarAtPut (!!).	Add printCallStackOfContext:.	Add missing markAndTracePrimTraceLog for stack simulation.	Add evaluation of atEachStepBlock to stack simulator run methods' id 'ea45f248-727d-48eb-b928-40fa6db5ef42' date '26 June 2010' time '3:05:17 pm' author 'eem' ancestors ((name 'VMMaker-eem.604' message 'CogVM:	Fix horrible bug in trace logs.  In Smalltalk the following isguaranteed to be +ve:	traceLogIndex - 3 \\ TraceBufferSizebut when translated to C:	traceLogIndex - 3 % TraceBufferSizeit can be negative and in the following cause an uncheckedout-of-bounds array access. So	(traceLog at: traceLogIndex - 3 \\ TraceBufferSize) = 0 ifTrue: [^nil].can incorrectly assume the trace log is empty if traceLogIndex haswrapped back to zero.	Remove use of debugging trace log for interpreter primitivessince the fast prim trace log suffices.	Extend leak checking to become.Slang:	Fix expansion of expressions in at: and at:put:.	Refactor generateInterpreterFile and generateCogitFile to	provide buildCodeGeneratorFoInterpreter/Cogit for testing	translations.	Nuke unused class VMMakerWithFileCopying and some	unused methods.' id '2d8951f0-d6b6-4c89-99ad-d2882472a6ca' date '24 June 2010' time '10:46:56 am' author 'eem' ancestors ((name 'VMMaker-eem.602' message 'CogVM:	Fix saving frames above interior frame for co-routining in	non-local return.	Merge Josh''s surface support into ThreadedFFIPlugin.	Add ioExitWithErrorCode: for simulating.	Fix blow up on updating of byteCount from background thread.	Remove unnecessary check in B3DAccelleratorPlugin>>stackMatrix:	Eliminate allocateChunk: from required method names (JITTER holdover?)	Merge most CroquetPlugin updates (these eliminate warnings)' id '935104d1-cb91-42ac-a303-87b8eac96e2e' date '23 June 2010' time '11:41:52 am' author 'eem' ancestors ((name 'VMMaker-eem.601' message 'CogVM:  Fix coroutining (e.g. Generator).  Base frame return must not  widow frames above the returned-to frame when the returned-to  frame is not the top frame since the frames above may still be  in use.  Add an optional exit code argument to quitPrimitive/primitiveQuit.  Fix Stack VM simulator for primitiveFileStdioHandles, and use  hex for stack addresses in frame printing.  Merge various niceties from VMMaker-eem.600.' id 'ed668fd9-7f90-4413-8adb-fa9cd1c9edee' date '22 June 2010' time '6:39:19 pm' author 'qwaq' ancestors ((name 'VMMaker-eem.597' message 'CogVM: Fix JIT crash for frameless blocks with temps.' id '5f815ccd-49a9-4346-b15f-fa181da9a56b' date '21 June 2010' time '6:10:23 pm' author 'eem' ancestors ((name 'VMMaker-jcg.593' message 'Add CroquetPlugin>>primitiveOptimizeVertexIndicesForCacheLocality, which uses Tom Forsyth''s algorithm rearrange mesh vertices to reduce GPU vertex-cache misses.' id '152e0820-1a01-4dd1-aac7-5528beb2c1e1' date '18 June 2010' time '5:03:41 pm' author 'jcg' ancestors ((name 'VMMaker-eem.592' message 'CogVM: Additional InterpreterProxy/sqVirtualMachine supportfunctions used by ThreadedFFIPlugin' id '2fd01d00-ff76-4853-be25-c5467d0a665e' date '16 June 2010' time '12:13:51 pm' author 'eem' ancestors ((name 'VMMaker-eem.591' message 'Slang: Translation improvements for ThreadedFFIPlugin, making	^exp caseOf: ...translate into a switch of the form case N: return exp; ...Prepending a plugin''s preambleCCode if any.' id 'c5483e26-9871-4c66-8a76-b3d17c9e5af6' date '15 June 2010' time '8:40:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.590' message 'ThreadedFFIPlugin: Merge Josh''s surface suppoprt prims from SqueakFFI.' id '9c635b0d-6548-4f71-ad0b-c6930f08076c' date '15 June 2010' time '7:17:52 pm' author 'eem' ancestors ((name 'VMMaker-jcg.588' message 'Fix push-pop mismatch in FFIPlugin>>primitiveDestroyManualSurface.' id 'bc2e19bd-281b-41e1-a92b-c92d16b5279d' date '14 June 2010' time '2:56:10 pm' author 'jcg' ancestors ((name 'VMMaker-jcg.587' message 'Add FFIPlugin primitives to support ExternalForm.Fix bug in BitBltSimulation... #warpBits used to proceed even if #lockSurfaces failed.  This can easily result in a VM crash.' id 'd92a2533-aa51-48ad-8e62-d41b6b58a085' date '14 June 2010' time '2:34:41 pm' author 'jcg' ancestors ((name 'VMMaker-eem.586' message 'CogVM: add safePriontStringOf: which can cope with forwarding objectsto obtain more reliable dumping of the primitive log during GC.' id 'dcb08fe3-8833-473a-945f-6c9070bd0b30' date '2 June 2010' time '4:25:11 pm' author 'eem' ancestors ((id '1dab8071-9095-4f58-9c3f-1ec690d455bb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.600' message 'CogVM:	Nuke old separate hand-refactored CoInterpreterSE.  The	automatically refactored one actually works...' id 'ae5e127b-8a56-4685-a320-16e8e66574d6' date '22 June 2010' time '5:39:04 pm' author 'eem' ancestors ((name 'VMMaker-eem.599' message 'CogVM:  Fix coroutining (e.g. Generator).  Base frame return must not  widow frames above the returned-to frame when the returned-to  frame is not the top frame since the frames above may still be  in use.  Add an optional exit code argument to quitPrimitive/primitiveQuit.  Fix Stack VM simulator for primitiveFileStdioHandles, and use  hex for stack addresses in frame printing.' id '2eedfb4b-4be7-4ca3-adc9-c09b49ad9f9e' date '22 June 2010' time '5:35:39 pm' author 'eem' ancestors ((name 'VMMaker-eem.598' message 'CogVM:	Fix baseFrameReturn''s cannot return code (a la ceBaseFrameReturn:).	Fix StackInterpreterS simulation.	Use push:thenPop: in primitiveDirectoryDelimitor' id '5277cef4-2573-4b06-81af-58d3a16ffe18' date '22 June 2010' time '12:07:31 pm' author 'eem' ancestors ((name 'VMMaker-eem.596' message 'CogVM: fix translation of the extended CogBytecodeDescriptor' id '44094619-ec96-4335-8ec7-59c33fb60d66' date '21 June 2010' time '4:02:41 pm' author 'eem' ancestors ((name 'VMMaker-eem.595' message 'CogVM: fix typo in CogBytecodeDescriptor instVarNamesAndTypesForTranslationDo:' id 'd25f4119-d9ea-4c02-b3b3-4203f87b80f8' date '21 June 2010' time '3:57:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.594' message 'CogVM: fix JIT crash for temps in frameless blocks, e.g. [|b|5]value' id '4d21fa6c-b8b1-4cd3-8317-856b7cb8dfac' date '21 June 2010' time '3:53:09 pm' author 'eem' ancestors ((name 'VMMaker-eem.593' message 'Fix access to youngStart and memory in the separate VM (theaccessors must be macrs to avoid C complaining aboutredefinitoon as another kind of symbol).Ad CogMemoryManager as a place-holder for design of the newobj rep/GC (in the class comment).' id '471532c8-6ea9-4bcf-960d-28260261282f' date '17 June 2010' time '1:38:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.589' message 'Nuke StackInterpreterS''s traggling storePointerUnchecked:' id '6522fb99-5a86-46f6-9ec2-660c90565fd1' date '14 June 2010' time '2:27:59 pm' author 'eem' ancestors ((name 'VMMaker-eem.588' message 'CogMTVM: fix simulation in the separate VM.Move storePointerUnchecked:... firstIndexableField: ceStoreCheck: classFloatCompactIndex  into ObjectMemory.Fix translation of the separate VM.' id 'ca5b7ef9-0305-4595-9b5b-e6dcaea095c3' date '14 June 2010' time '2:06:18 pm' author 'eem' ancestors ((name 'VMMaker-eem.587' message 'Separate ObjectMemory refactoring in StackInterpreterS hierarchy.Simulates correctly in single-threaded mode.  Craps out aftercollecting user input in the multi-threaded test image.' id '63786711-1e32-430a-9f3f-d30a4d5a2f1c' date '10 June 2010' time '5:31:05 pm' author 'eem' ancestors ((name 'VMMaker-eem.585' message 'Merge with VMMaker-eem.584.CogVM:	Fix bug with machine code references to objects in become ops.Make sure the youngReferrers list is pruned in mapObjectReferencesInMachineCodeForXXXGCotherwise youngReferrers can get duplicate entries which screws upremapping of obj refs in machine code during GC.	Mo'' betta asserts around the youngReferrers list and more leak	checking of generated code.	Extend the leak check to the traceLog.	Make some bounds types in the method zone unsigned and cleanup some comparisons.' id 'ca2252d6-bd04-4364-9273-c265e71cabac' date '31 May 2010' time '2:32:07 pm' author 'eem' ancestors ((name 'VMMaker-eem.581' message 'CogVM: move methods to do with ObjectMemory from StackInterpreter up to ObjectMemory.  e.g. Split assertClassIs:instanceOf: into an is:instanceOf: in ObjectMemory and the assertClassIs:instanceOf: in StackInterpreter.' id '5deb6d21-3b13-4aa2-a701-779a6e624561' date '28 May 2010' time '3:40:16 pm' author 'eem' ancestors ((name 'VMMaker-eem.579' message 'Merge with VMMaker-eem.578.  Move some SmartSyntaxPlugin VMMaker extensions from Collections and Kernel into the VMMaker package' id '22629e96-08a7-4638-a2e5-4300871e0392' date '26 May 2010' time '5:29:26 pm' author 'eem' ancestors ((name 'VMMaker-eem.577' message 'Merge CogMT code with VMMaker-eem.576.CogVMs:	Implement the unimplemented case in primitiveTerminateTo ofterminating from other than the top frame to a context in the middleof the current stack page.Slang:	fix source comparison of surrogate accessor classes (''foo'' asText ~= ''foo'' asString).	Use fixed pitch in formatting comments.Comments & typos.' id '20b16982-fb38-4d9d-b7ae-79a4409deb70' date '24 May 2010' time '2:34:34 pm' author 'eem' ancestors ((name 'VMMaker-eem.574' message 'Merge CogMT code with VMMaker-eem.573, the changes for Squeak 4.1 compatibility.' id '98cc2c6a-e3b2-40b1-8847-30479ad9141e' date '21 May 2010' time '4:59:35 pm' author 'eem' ancestors ((name 'VMMaker-eem.570' message 'revert mistaken Interpreter>>signed64BitValueOf:' id '0fdb36e2-30f2-49e0-9556-6e44146794e0' date '11 May 2010' time '12:18:02 pm' author 'eem' ancestors ((name 'VMMaker-eem.568' message 'StackVM: fix typo in signed64BitValueOf: (self sizeof: #sqLong)must be self sizeof: #sqLong asSymbol).Fix primTraceLogIndexAddress.Adopt the Alien plugins.' id 'c1f0b0f7-c491-441c-9054-a9fdb9c9eab8' date '10 May 2010' time '6:40:15 pm' author 'eem' ancestors ((name 'VMMaker-eem.567' message 'Merge with VMMaker-eem.566 for the clock log.' id 'd5ad1166-3af4-4f61-8927-83e37ad49e1d' date '10 May 2010' time '4:41:21 pm' author 'eem' ancestors ((name 'VMMaker-eem.562' message 'CogVM: use cCode: [self addressOf: foo] in place of cCode: ''&foo''so refs to vars are not hidden in the string.' id 'd7f26d76-aa51-452f-8101-4ea1ecb92ca3' date '7 May 2010' time '12:40:45 pm' author 'eem' ancestors ((name 'VMMaker-eem.561' message 'CogMTVM:	use the new putToSleep:yieldingIf: facilities in thread preemption.' id '23cdcbf1-588e-44cc-9bf4-34ea7837a071' date '6 May 2010' time '1:25:33 pm' author 'eem' ancestors ((name 'VMMaker-eem.560' message 'ThreadedFFIPlugin: tweak an asm define to placate the intel compiler' id '8fc4d4b1-7ee3-4582-9462-b7710dadf835' date '6 May 2010' time '1:16:06 pm' author 'eem' ancestors ((name 'VMMaker-eem.559' message 'Cogit: add a cast to nuke a compiler warning' id '532c57e7-d21b-4a64-9aa9-92e610afeb3f' date '6 May 2010' time '11:01:47 am' author 'eem' ancestors ((name 'VMMaker-eem.558' message 'Merge with VMMaker-ar.557.Coercing float to doubles. Real men do cast!' id 'bc1ba4ee-9379-44f6-87de-3f7d989a494d' date '5 May 2010' time '6:13:13 pm' author 'eem' ancestors ((name 'VMMaker-eem.547' message 'Merge with VMMaker-ar.556:FloatArrayPlugin:Bit-identitcality tweaks. In loops iterating over (pairs of) 32bit floats, always cast the float explicitly to ''double'' to give the C compiler no false idea of ''oh, you''re operating on vectors of single precision floats I don''t need to expand to double precision''. You do, stupid compiler, you do.WebAuthPlugin:	Update to include Kerberos service principal name.	Rename NativeAuthPlugin to WebAuthPlugin for more clarity about what it applies to.CogVM:	fast (inlined) tracing of primitives.	Provide a persistent flag controlling whether preemption causes a	process to be put to the back of its run queue, forcing an implicit yield.	If set, flag prevents preempting from causing an implicit yield, off by	default, preserving current VMs semantics (preemption does force an	implicit yield).   But note that a resumed process (be it via primitiveResume	or by signalling a semaphore or exiting a critical section) must go to the	back of its run queue.	Flag is bit 2/value 4 of Smalltalk vmParameterAt: 48.	fix snafu in printOnTrace	add tracing of interpreter primitives.Stack VM:	safer activation printing' id 'd0246086-d95d-4275-a19f-c7c9cc4e0b92' date '5 May 2010' time '6:06:22 pm' author 'eem' ancestors ((name 'VMMaker-eem.545' message 'CogVM: fix snafus with the added interpreter prim tracing code' id '754c8469-4de7-4614-a271-c0afb8144885' date '26 March 2010' time '1:14:19 pm' author 'eem' ancestors ((name 'VMMaker-eem.542' message 'Merge with VMMaker-jcg.541 (echo cancellation, non-ui sourcegeneration, error => plat support, fix for primitiveContextSize).CogVM: add tracing of interpreter primitives.  Nuke commentarythat says use trace flag for suppressing the heartbeat.validInstructionPointer:inMethod:framePointer: => validInstructionPointer:inFrame:Some fixes in return for coroutine crashes.BitBlt: fail warpBlt if lockSurfaces fails.ThreadedFFIPlugin align stack to 128-bit boundary for linux x86.' id '67164dad-0eb1-4dfe-bfa8-dd215b440e3b' date '25 March 2010' time '7:44:07 pm' author 'eem' ancestors ((name 'VMMaker-eem.523' message 'Merge with 522.	Fix to primitiveProfileSemaphore.	Remove obsolete trampoline{name}For:	Add backtrace support' id 'e8575c78-c6bd-4b49-a829-e4d6a284fe4f' date '11 January 2010' time '2:39:28 pm' author 'eem' ancestors ((name 'VMMaker-eem.519' message 'Threaded FFI Plugin:	get specOnStack right for both callout prims.  SImplify, using	argArrayOrNil as the flag.  Now this code will make calls in	images that don''t have the stackSize slot in ExternalFunction.Slang:	support expansion of cCode: [a block] inSmalltalk: invocations	in expression contexts.Stack VM:	add heartbeat freq prim.CogVM:	add inline directive to pageIndexFor: to get better performance	in context-to-stack mapping.	Use #''void *'' et al instead of ''void *'' in a few pragmas for	consistency.' id '151cad6d-ee56-4458-a45d-a5c53502b5be' date '16 December 2009' time '1:49:07 pm' author 'eem' ancestors ((name 'VMMaker-eem.517' message 'ThreadedFFIPlugin	don''t write the stack size back to an ExternalFunction unless it	has a stackSize slot.' id 'a9ac180b-696a-4b3a-98e1-363ebcf56c2d' date '11 December 2009' time '1:14:36 pm' author 'eem' ancestors ((name 'VMMaker-eem.515' message 'Stack & Cog VMs	compute long-running prim GC milliseconds more carefully.	remember start and end time and if this matches the long-	running primitive start and end times then gc time can be	ascribed to the primitive.	comment typoe' id 'c13b4f0a-8e55-4f2b-b1fd-204964fbb5da' date '10 December 2009' time '2:54:12 pm' author 'eem' ancestors ((name 'VMMaker-eem.514' message 'Stack & Cog VMs	Add GC milliseconds to long-running primitive resultCog VMs	add a method enumeration utility for the simulator' id 'e573adfd-fe08-4349-beb9-c6990f07b5d1' date '10 December 2009' time '11:01:18 am' author 'eem' ancestors ((name 'VMMaker-eem.513' message 'CogMTVM:	figure out instructionPointer management over disownVM:/	ownVM:.CogVM:	merge with VMMaker-eem.512; avoid crashes due to	 arbitrary bytes appended to CompiledMethods	Fix debug opcode printing.Stack & Cog VMs:	add breakpoints to perform sends.' id '19122e15-e8b5-4727-a01b-37fe327b32e9' date '30 November 2009' time '3:03:05 pm' author 'eem' ancestors ((name 'VMMaker-eem.511' message 'ThreadedFFIPlugin/FilePlugin	added implicit tenuringIncrementalGC calls when a threaded	call encounters a young object.CogMTVM:	added argumentCount to vm state saved and restored across	thread switches.  With this and the above simple ODBC calls	appear to be working.	Added assert to spot when a thread switch lands back in the	wrong kind of frame.  Will need to address this properly soon.Cog VMs:	Made Debug depend on a compile-time define.	Removed bogus asserts in main enlopmarts.	Fixed shortPrintFrame:Stack & Cog VMs:	Added support for tenuringIncrementalGC etc for InterpreterProxy.	Documemnted that primitiveFailFor: PrimNoErr clears failure.	Moved isYoung: up into ObjectMemory.	Beefed up printActivationNameFor:... and made callers pass	nil instead of nilObj when uninterested in the first temp.' id 'b1852c3b-ff0e-4a41-b7a3-109f71b65f49' date '25 November 2009' time '2:56:52 pm' author 'eem' ancestors ((name 'VMMaker-eem.509' message 'Stack & Cog VMs	fix bounds check of errorCode in primitive error table.Threaded FFI Plugin	answer correct error when a module can''t be found in an	external spec.' id '4ccb4ac0-a876-4f37-ac70-a9ff2e8a0f4a' date '23 November 2009' time '9:27:17 pm' author 'eem' ancestors ((name 'VMMaker-eem.508' message '(Threaded)FFIPlugin	add an externalFunctionInstSize var to cope with the addition	of the stackSize slot to ExternalFunction.  Add instanceSizeOf:	to sqVirtualMachine to obtain same.	change the offset for FFIErrors so that FFINoCalloutAvailable	(-1) maps to last prim err code + 1ThreadedFFIPlugin	remember to push the pointer for a copied string argument	only fetch/store an ExternalFunction''s stackSize if the slot	exists	make callFlags a slot of calloutState for checking young args	against threaded callouts.	mild refactoring to reduce arg counts and eliminate	doPrimitiveCallout.Stack & Cog VMs	eliminate checkSignalRequests.  It should be private to	sqExternalSemaphores.c' id 'c581935b-7273-42b7-bc04-8eeee119b56a' date '19 November 2009' time '12:34:35 pm' author 'eem' ancestors ((name 'VMMaker-eem.507' message 'CogMTVM	initialization is a little too delicate' id '2346a5d4-45a4-437a-8b71-98d86b1f48c4' date '17 November 2009' time '2:30:54 pm' author 'eem' ancestors ((name 'VMMaker-eem.506' message 'CogMTVM:	let the VM call ioInitThreads (as per the non-threaded VM) and	so drop the over-specific ioInitThreadLocalThreadIndicesFFI:	now its ready for testing rename it back to SqueakFFIPrims' id '0685fa8a-0597-4d1e-a02b-fd6e6eceeda0' date '17 November 2009' time '12:02:18 pm' author 'eem' ancestors ((name 'VMMaker-eem.505' message 'Merge with VMMaker-eem.504.Plus:CogMTVM:	ThreadedFFIPlugin complete to the extent that it compiles on x86.FFIPlugin:	also answer error code throgh primitive error code.Slang:	plugin generator supports ancilliaryStructClasses (for ThreadedFFIPlugin).	Abstract collection of ancilliaryStructClasses.	allow plugins to provde preambleCCode.	right shift generator tries hard not to cast a 64-bit value to 32-bits.	case statements can have their value returned (as per switch statements).' id '05fb5703-a1cc-412d-bc39-e8d8bb93f209' date '16 November 2009' time '11:56:58 am' author 'eem' ancestors ((name 'VMMaker-eem.501' message 'CogVM:	check-in of needed fixes plus refactoring work in progress.Fixes area) bad bug in inline cacheing.  Old code forgot to reload ClassReg in reentry into PIC after miss.  Using the intel 11.x compiler causes the problem to surface.  isPoint PIC in Point>>+ incorrectly identifies a SmallInteger as a Point and VM crashes in Point>>x trying to acess x from a SmallInteger.b) long-running primitive check.  Screwed up primitive property flags, breaking callbacks when in effect.  Sampling code was subject to false positives.' id '9456e99d-8f02-4bda-b852-e13b12b41d55' date '23 October 2009' time '12:14:28 pm' author 'eem' ancestors ((id 'c802278f-071f-432a-aefa-303c757a365b')) stepChildren ())(id '05baf7a1-04cc-4263-8aa6-c207243b441f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(id '42a80b86-f8fd-482d-bab9-3aa8ced89b28')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(id 'e0ff2219-db76-4ad6-9225-0e87a7e1c96e')) stepChildren ())(id '1ad887ce-ed9d-e645-aafd-abfdfcfc6b2f')) stepChildren ())) stepChildren ())(id '4bc8b32e-de23-9f43-864b-28c1b44e092e')) stepChildren ())(id '67b26c02-8015-1f45-b488-772156f79414')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(id '00138af5-7bf9-402a-be33-b4868ef6140a')) stepChildren ())(id 'b9916283-87c7-44c2-99b7-eeffc2ff0f34')) stepChildren ())(id '82b3a5dd-0f8e-4a99-9e8d-80d25ff8f947')) stepChildren ())(id '4ea3046f-772a-413e-a27c-ecc7b75e9d6e')) stepChildren ())) stepChildren ())(id '1dab8071-9095-4f58-9c3f-1ec690d455bb')) stepChildren ())(id 'dcb08fe3-8833-473a-945f-6c9070bd0b30')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.605' message 'CogVM:	Fix horrible bug in trace logs.  In Smalltalk the following isguaranteed to be +ve:	traceLogIndex - 3 \\ TraceBufferSizebut when translated to C:	traceLogIndex - 3 % TraceBufferSizeit can be negative and in the following cause an uncheckedout-of-bounds array access. So	(traceLog at: traceLogIndex - 3 \\ TraceBufferSize) = 0 ifTrue: [^nil].can incorrectly assume the trace log is empty if traceLogIndex haswrapped back to zero.	Remove use of debugging trace log for interpreter primitivessince the fast prim trace log suffices.	Extend leak checking to become.Slang:	Fix expansion of expressions in at: and at:put:.	Refactor generateInterpreterFile and generateCogitFile to	provide buildCodeGeneratorFoInterpreter/Cogit for testing	translations.	Nuke unused class VMMakerWithFileCopying and some	unused methods.' id '5af847cc-868a-4207-91db-f12456f5bf54' date '24 June 2010' time '11:13:30 am' author 'eem' ancestors ((name 'VMMaker-eem.603' message 'CogVM:	Fix saving frames above interior frame for co-routining in	non-local return.	Add ioExitWithErrorCode: for simulating.	Fix blow up on updating of byteCount from background thread.	Remove unnecessary check in B3DAccelleratorPlugin>>stackMatrix:	Eliminate allocateChunk: from required method names (JITTER holdover?)' id 'd2a98b56-4d7a-4489-bc43-6ccb4f6d861e' date '23 June 2010' time '12:27:12 pm' author 'eem' ancestors ((id 'ed668fd9-7f90-4413-8adb-fa9cd1c9edee')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.615' message 'CogVM:	Add a check for new objects being overwritten by filling eden witha marker value and checking that the value is present on every allocation.This will cause the VM to exit with an error on the next allocation aftera new object has been written into and beyond.Slang:	Write out constants that look like hex in hex.Simulator:	Squeak4.x-ify.	Fix simulation of primitiveFileDelete' id '48546291-2540-42ca-b7cf-54604b400773' date '6 July 2010' time '4:55:36 pm' author 'eem' ancestors ((name 'VMMaker-eem.614' message 'BitBltSImulation: Juan Vuletich''s fixes for combination rules that needto be handled as RGBA, not RGB.  Fixes font rendering in 4.1 images.CogVM: Simulator fixes.' id '2a1c8546-9805-4af5-bf7b-2fa94b021722' date '3 July 2010' time '7:02:57 pm' author 'eem' ancestors ((name 'VMMaker-eem.608' message 'CogVM:	Fix off-by-one error in assigning inst vars of contexts viaprimitiveInstVarAtPut (!!).	Add printCallStackOfContext:.	Add missing markAndTracePrimTraceLog for stack simulation.	Add evaluation of atEachStepBlock to stack simulator run methods.' id '4910b470-dcc3-42cc-9caa-20d07fcc3611' date '26 June 2010' time '3:22:43 pm' author 'eem' ancestors ((name 'VMMaker-eem.606' message 'CogVM: Fix bogus def of pointerForOop: turning up in cogit.c' id '9b749eaa-be7d-4a66-8f6d-8c3c93fae9c1' date '24 June 2010' time '1:13:03 pm' author 'eem' ancestors ((id '5af847cc-868a-4207-91db-f12456f5bf54')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.652' message 'CogVM:	Work-around compiler bugs for the most negative 64-bit value	in signed64BitIntegerFor: & signed64BitValueOf:' id '8bc3946e-1594-45c3-813a-dcb99c7b953d' date '9 August 2010' time '9:08:02 pm' author 'eem' ancestors ((name 'VMMaker-eem.646' message 'Fix profiler crash (I added an element to primitiveVMParameters butforgot to allocate space for it).Fix primitiveDoNamedPrimitiveWithArgs for unimplemented prims sodebugger correctly steps over & into unimplemented named prims.' id 'a232757a-b648-48e5-92a4-9809e2faedef' date '30 July 2010' time '1:58:18 pm' author 'eem' ancestors ((name 'VMMaker-eem.637' message 'CogVM:	primitiveSetIdentityHash plus Squeak V3 versions of	primitiveBehaviorHash and primitiveMaxIdentityHash.	Improved PIC disassembly.	Num gitted methods vm parameter.' id 'b21d3235-1bd0-44ca-99ea-1ae1153383c3' date '21 July 2010' time '5:35:37 pm' author 'eem' ancestors ((name 'VMMaker-eem.629' message 'ThreadedFFIPlugin:	Fix struct return, indexing return type spec corrrectly and not	being confised between the struct return size and whether return	is via registers or not.Matrix2x3Plugin:	Use pop:thenPush: in a few places.' id '8092d0ee-17da-4636-929e-97602a931e18' date '13 July 2010' time '4:27:19 pm' author 'eem' ancestors ((name 'VMMaker-eem.627' message 'FFIPlugin:	restore access to the error, needed for backwards compatibility.	Use pop:thenPush: in a few places.' id 'fe8857a9-8932-456e-b17f-4093d9c3a74f' date '13 July 2010' time '2:41:31 pm' author 'eem' ancestors ((name 'VMMaker-eem.623' message 'CogVM:	Fix primitiveObjectPointsTo for multiple of 4 length CompiledMethods' id 'a953b521-df31-4a53-978b-69c3f2626138' date '9 July 2010' time '3:21:38 pm' author 'eem' ancestors ((id '817f8b68-cfaf-49ae-a73a-49a96e2ebefe')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-eem.679' message 'Fix bug in pc mapping in blocks.  An ^-return in a block has both a pc map entry and a CallRT map entry because of the call toceNonLocalReturn.  Hence the bytecode descriptors need toreflect this.  The old code didn''t know this and hence pc mappingwas wrong for pcs following an ^-return in a block.  You cansee this in the debugger, e.g. in the RDP client, where pc selectionis wrong on errors in the blocks containing ^nil.' id '85144ac7-9aa4-4c72-8b5e-eedc0effcf0d' date '14 December 2010' time '7:14:23.897 pm' author 'eem' ancestors ((name 'VMMaker-eem.678' message 'Back out of the addition of a signalExternalSemaphores to callbackEnter.This needs more thought and a test case.  Looks like instructionPointermight be being mismanaged.' id 'b2f62c71-a97c-4197-a207-96d485efeff2' date '5 November 2010' time '11:59:36.647 am' author 'eem' ancestors ((id '7dbc088d-e5f0-4979-ae98-d767ad553776')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog.37' message 'Fix simulator (which mistakenly inherited from CoInterpreterinstead of CoInterpreterPrimitives).Fix bug in SmartSyntaxPluginSimulator>>computeSignatureMap.Merge Andreas'' patch for TMethod>>argConversionExprFor:stackIndex:.Recategorise simulatorClass consistently.Nuke empty TestInterpreterPlugin.' id '4d5bd1b4-5e2d-40c2-932e-6cebc83349c0' date '13 November 2010' time '6:52:17.819 am' author 'eem' ancestors ((id '79f2435a-ad54-4d89-be04-cd4efaad1ede')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog.46' message 'Fix for & and | usage in genSpecialSelectorArithmetic thatcaused e.g. 16r80 bitOr:16r40 to evaluate to 1.Safer frame printing via sprinkling of couldBeFramePointer: pixie dust.Update the CogMemoryManager class comment newGC/obj rep design with the results of recent vm-dev discussion on lazy become and pinning.Remove the unused register-saving stack page classes.Rename retained classes (CogSimpleStackPage => CogStackPage etc).' id '78f6932a-9375-4f02-8804-bf4218877f36' date '15 January 2011' time '10:45:02.594999999 am' author 'eem' ancestors ((name 'VMMaker-eem.709' message 'Cleanups.  Remove the unused register-saving stack page classes.Rename retained classes (CogSimpleStackPage => CogStackPage etc).Nuke unused method and an unused inst var.Make sure EagerInstructionDecoration isn''t reinitialized.' id '34744a1f-ebd7-4f47-a77a-c3c5d19df068' date '15 January 2011' time '9:06:03.44 am' author 'eem' ancestors ((name 'VMMaker-eem.708' message 'Interim fix for & and | usage in genSpecialSelectorArithmetic (i.e."don''t do that").Safer frame printing via sprinkling of couldBeFramePointer: pixie dust.Update the CogMemoryManager class comment new GC/obj repdesign with the results of recent vm-dev discussion on lazy becomeand pinning.' id '684c06bd-d894-436b-96b1-0684a03a6fde' date '12 January 2011' time '12:32:24.99 pm' author 'eem' ancestors ((name 'VMMaker-eem.706' message 'Correct typedef generation for CogBlockMethod padding hack.' id 'ba89663d-05f7-4f28-bc61-bb33014e6767' date '9 January 2011' time '2:31:34.544 pm' author 'eem' ancestors ((name 'VMMaker-eem.705' message 'Change the representation of CogBlockMethods to solve issuesmatching blocks in bytecoded methods to their correspondingCogBlockMethods.  Replace the CogBlockMethod objectHeader fieldwith a 16-bit offset to the home method and a 16-bit startbcpc field.Add comprehensive testing of bytecode to machine-code pcmapping, including matching blocks.' id 'cdf0c259-1d1f-445c-9f3c-be07381acf8e' date '9 January 2011' time '2:05:59.278 pm' author 'eem' ancestors ((name 'VMMaker-eem.704' message 'Fix liveness of ResultReceiverReg over calls to ceContext:instVar:value:.Fixes an mnu in privRefresh.Fix leaking of objects into the atCache due to ceSend:super:to:numArgs:''suse of executeNewMethod without always setting messageSelector.Fixes "BooleanArrayUser new loop" bug.Fix simulation stack off-by-one in genStorePop:MaybeContextReceiverVariable:.More agressive store-check elision (elide for nil, true & false, not just immediates).Support for more agressive frameless optimization, but not deploted (cuz it''s broken of course).Simulator tweak (setBreakSelector menu entry) & fixes (get decoration testright, add a stireInteger: forwarder).' id '87cfa24f-a70a-45df-8a20-8686b655d2d2' date '7 January 2011' time '5:33:02.132 pm' author 'eem' ancestors ((name 'VMMaker-eem.703' message 'Eliminate some warnings in the CoInterpreter.Stop attemptToSwitchToMachineCode: being inlined to fix apparentoptimization bug at -O2 on linux gcc 4.1.2.' id '8074c778-e8f2-4c29-a7ee-2fd8f096f825' date '2 January 2011' time '2:30:59.371 pm' author 'eem' ancestors ((name 'VMMaker-eem.702' message 'Fix rounding bug causing underestimate of openPICSize andresultant hard crashes.' id 'c702f5e5-e423-403d-97e6-a78d7ee61057' date '1 January 2011' time '2:25:28.291 pm' author 'eem' ancestors ((name 'VMMaker-eem.701' message 'Fix a bug with bytecode to pc mapping being confused by framelessblocks which caused a crash when converting an interpreteractivation of Cogit class>>generatorTableFrom: to machine code.In the SRMCogit mark the conditional jump following #== as deadcode and elide it.Fix SimpleStackBasedCogit compilation by ifdeffing out the body ofenterRegisterArgCogMethod:at:receiver: and addding dummyregisterMaskFor:... defs.Fix an assert for objects-as-methods in activateInterpreterMethod...Fix gnuification for the change that moved a funciton''s opening { toa newline.' id '3be7bf23-d4d8-406a-ae90-35c689dfd875' date '1 January 2011' time '11:52:47.047 am' author 'eem' ancestors ((name 'VMMaker-eem.699' message 'Rescue some lost class comments.' id 'd6fd23b4-5b4b-408f-8587-c4fa572a565a' date '27 December 2010' time '6:45:31.307 pm' author 'eem' ancestors ((name 'VMMaker-eem.692' message 'Use the right transferTo:from: in backing out of the callbackEnter:change.' id '69f8f8a8-944b-42a5-8f41-f78aed5ae117' date '25 December 2010' time '7:13:47.568 pm' author 'eem' ancestors ((id 'e0abb3a5-0df6-406c-b879-fb50de794965')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog.45' message 'Change the representation of CogBlockMethods to solve issuesmatching blocks in bytecoded methods to their correspondingCogBlockMethods.  Replace the CogBlockMethod objectHeader fieldwith a 16-bit offset to the home method and a 16-bit startbcpc field.Add comprehensive testing of bytecode to machine-code pcmapping, including matching blocks.Fix liveness of ResultReceiverReg over calls to ceContext:instVar:value:.Fixes an mnu in privRefresh.Fix leaking of objects into the atCache due to ceSend:super:to:numArgs:''suse of executeNewMethod without always setting messageSelector.Fixes "BooleanArrayUser new loop" bug.Fix simulation stack off-by-one in genStorePop:MaybeContextReceiverVariable:.More agressive store-check elision (elide for nil, true & false, not just immediates).' id 'a8e97960-e5be-4a86-8501-f5829394461c' date '9 January 2011' time '3:48:21.893 pm' author 'eem' ancestors ((id 'ba89663d-05f7-4f28-bc61-bb33014e6767')(name 'VMMaker-oscog.44' message 'Fix liveness of ResultReceiverReg over calls to ceContext:instVar:value:.Fixes an mnu in privRefresh.Fix leaking of objects into the atCache due to ceSend:super:to:numArgs:''suse of executeNewMethod without always setting messageSelector.Fixes "BooleanArrayUser new loop" bug.Fix simulation stack off-by-one in genStorePop:MaybeContextReceiverVariable:.More agressive store-check elision (elide for nil, true & false, not just immediates).Support for more aggressive frameless optimization, but not deploted (cuz it''s broken of course).Simulator tweak (setBreakSelector menu entry) & fixes (get decoration testright, add a storeInteger: forwarder).' id 'f6701f5f-5c7e-476c-a461-415683c4ff40' date '7 January 2011' time '5:41:20.774 pm' author 'eem' ancestors ((name 'VMMaker-oscog.43' message 'Eliminate some warnings in the CoInterpreter.Stop attemptToSwitchToMachineCode: being inlined to fix apparentoptimization bug at -O2 on linux gcc 4.1.2.' id '9afbc6fa-2adb-4ffe-b0b3-84833ead222d' date '2 January 2011' time '2:33:57.405 pm' author 'eem' ancestors ((id 'd3b303c1-306e-4343-b078-655fc2bfc436')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog.47' message 'Move the genExternalizePointersForPrimitiveCall andgenLoadCStackPointersForPrimCall to the front ofcompileInterpreterPrimitive so thata) reg args are pushed before any calls, andb) ceCheckProfileTick is run on the C stack.The first fixes the StackToRegisterBasedCogit''s crash when profiling.The second is safer than running it on a Smalltalk stack page.Fix simulation of the profling machinery (to debug the above).Fix mapping for backward branches which must of course map tothemselves, otherwise the VM can break out of loops prematurely.Bring StackInterpreter generation up to date (less labelling, vmCallback).zero instuctions on recompiling block after numInitialNils mis-estimation.More methods for the in-image facade for compiling quick prims.Both Cogits	Fix pc mapping once and for all.  Tests allow compiling all	methods in current image and testing all mapped bcpcs and	mcpcs map and map ack correctly.	Fix bad bug with jump fixups that caused some fixups to be	missed (error in the index used to define the range of valid	fixup adresses).StackToRegisterMappingCogit	Fix bug in addBlockStartAt:numArgs:numCopied:span: that	caused one block entry to be omitted when some block was	recompiled due to initialNil misestimation.	As part of pc mapping fixing add an annotateUse flag to	sim stack entries so that the eliminated send in a folded	constant still gets a pc map entry.CoInterpreter	Fix bug in checkLogIntegrity for an empty log.	Safety in activation printing (for backtraces etc).	SImulator	Run quitBlock on closing simulator window.StackToRegisterMappingCogit:	Fix bug in repeated block compilation for initial nil handling.	Repeated attempts to insert the same block start are filtered out	instead of repeating all block inserts (which doesn''t work).	Fix bad bug in frameless block entry.  Don''t use	initSimStackForFramelessMethod:!	Add a target fixup for a conditional jump even if it is a jump on	true or false since the simStack must still be valid for merges.	Nuke as-yet-unused merge state in CogSSBytecodeFixup.	Add a subclass using image facilities to compute numnitialNils	correctly to compare against repeated block compilation.CoInterpreter:	comment an apparently unsent method to stop me from deleting it.Fix StackToRegisterMappingCogit being confused by initial pushNilsin blocks that provide parameters rather than initialize temps bytracking stack depth and recompiling if the depth is wrong at the endof the block.  Do this by refactoring compileMethodBody intocompileEntireMethod et al.Fix atCache leakage for super sends in machine code by assigningto lkupClass (since commonAt:[put:] use lkupClass to filter-outsuper sends).Simulator fixes and tidyups.' id 'a4053f20-cb87-415d-aad3-3bb29b03724c' date '6 February 2011' time '9:43:10.475 am' author 'eem' ancestors ((name 'VMMaker-eem.718' message 'Move the genExternalizePointersForPrimitiveCall andgenLoadCStackPointersForPrimCall to the front ofcompileInterpreterPrimitive so thata) reg args are pushed before any calls, andb) ceCheckProfileTick is run on the C stack.The first fixes the StackToRegisterBasedCogit''s crash when profiling.The second is safer than running it on a Smalltalk stack page.Fix simulation of the profling machinery (to debug the above).' id 'c3e429ed-65e8-4a61-b9fa-942d17f47702' date '3 February 2011' time '7:37:53.705 pm' author 'eem' ancestors ((name 'VMMaker-eem.717' message 'Fix mapping for backward branches which must of course map tothemselves, otherwise the VM can break out of loops prematurely.' id '98b71aa5-3304-4c7c-aae7-d0a442841f86' date '3 February 2011' time '6:38:06.654 am' author 'eem' ancestors ((name 'VMMaker-eem.715' message 'Bring StackInterpreter generation up to date (less labelling, vmCallback).zero instuctions on recompiling block after numInitialNils mis-estimation.More methods for the in-image facade for compiling quick prims.' id '707ba1f8-c822-4204-82b6-1c7e7af64117' date '30 January 2011' time '6:49:34.33 pm' author 'eem' ancestors ((name 'VMMaker-eem.714' message 'Both Cogits	Fix pc mapping once and for all.  Tests allow compiling all	methods in current image and testing all mapped bcpcs and	mcpcs map and map ack correctly.	Fix bad bug with jump fixups that caused some fixups to be	missed (error in the index used to define the range of valid	fixup adresses).StackToRegisterMappingCogit	Fix bug in addBlockStartAt:numArgs:numCopied:span: that	caused one block entry to be omitted when some block was	recompiled due to initialNil misestimation.	As part of pc mapping fixing add an annotateUse flag to	sim stack entries so that the eliminated send in a folded	constant still gets a pc map entry.CoInterpreter	Fix bug in checkLogIntegrity for an empty log.	Safety in activation printing (for backtraces etc).	SImulator	Run quitBlock on closing simulator window.' id 'e6521634-c406-479a-bf0f-23271ac0c930' date '28 January 2011' time '3:04:04.779 pm' author 'eem' ancestors ((name 'VMMaker-eem.713' message 'StackToRegisterMappingCogit:	Fix bug in repeated block compilation for initial nil handling.	Repeated attempts to insert the same block start are filtered out	instead of repeating all block inserts (which doesn''t work).	Fix bad bug in frameless block entry.  Don''t use	initSimStackForFramelessMethod:!	Add a target fixup for a conditional jump even if it is a jump on	true or false since the simStack must still be valid for merges.	Nuke as-yet-unused merge state in CogSSBytecodeFixup.	Add a subclass using image facilities to compute numnitialNils	correctly to compare against repeated block compilation.CoInterpreter:	comment an apparently unsent method to stop me from deleting it' id 'e166964b-d792-42f1-8492-e9c7962ed446' date '22 January 2011' time '1:04:53.599 pm' author 'eem' ancestors ((name 'VMMaker-eem.712' message 'Fix StackToRegisterMappingCogit being confused by initial pushNilsin blocks that provide parameters rather than initialize temps bytracking stack depth and recompiling if the depth is wrong at the endof the block.  Do this by refactoring compileMethodBody intocompileEntireMethod et al.Fix atCache leakage for super sends in machine code by assigningto lkupClass (since commonAt:[put:] use lkupClass to filter-outsuper sends).Simulator fixes and tidyups.' id '1e2d9558-ede0-48ae-9e07-bcd368d4c823' date '18 January 2011' time '10:12:28.575 pm' author 'eem' ancestors ((id '34744a1f-ebd7-4f47-a77a-c3c5d19df068')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(id '78f6932a-9375-4f02-8804-bf4218877f36')) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog-EstebanLorenzano.50' message 'fixes to work on Cocoa Cog. It compiles, but doesn''t run :(' id '706e521e-44a0-46e5-beb1-6d25bd6aecc2' date '4 March 2011' time '1:24:27 pm' author 'EstebanLorenzano' ancestors ((id '279087d0-4ec6-421d-950c-cfed0cabf5ea')) stepChildren ())(name 'VMMaker-oscog.51' message 'Threading subsystem.  CoInterpreterMT adds ability toshare VM amongst native threads under the constraint thatonly one thread "owns" (is running) the VM at any one point.See CogThreadManager''s class comment for design documentation.' id 'd213bf61-5898-475b-8a5c-e4a9bdad2415' date '16 March 2011' time '11:39:26.409 am' author 'eem' ancestors ((name 'VMMaker-eem.736' message 'Simulator needs to simulate with primTrace enabled (as per production)' id 'a0182697-3785-4395-92bd-0c21bca0ca13' date '16 March 2011' time '10:16:56.512 am' author 'eem' ancestors ((name 'VMMaker-eem.734' message 'Actually /use/ the ceSend: => ceSend:/ceSendAbort: refactoring!Doh!' id 'cf815676-05e1-44d8-be7f-62138a99b532' date '11 March 2011' time '10:58:38.832 am' author 'eem' ancestors ((name 'VMMaker-eem.732' message 'Fix compileOpenPICPrototype openPICSize bug.  Need to use a realselector to compute the right map size.' id '9763a367-cfc4-4ef6-9ef5-64c77255c398' date '6 March 2011' time '6:07:51.84 pm' author 'eem' ancestors ((name 'VMMaker-eem.731' message 'StackToRegisterMappingCogit:	Fix bug with storeRemoteTemp (e.g. StarMorph initialize in Cuis	3.x) which causes a stack off-by-one.	Rename merge:afterReturn: to merge:afterContinuation: and	revamp merge code to treat byte ode following an unconditional	branch the same as after a return.	Add spill tracing.Fix simulation of primitiveScanCharacters (send slotSizeOf: to objectMemory).' id 'a090576c-cc07-42a3-9847-e5057f4024d6' date '6 March 2011' time '5:50:24.157 pm' author 'eem' ancestors ((name 'VMMaker-eem.728' message 'Minor cleanups for recent blog posts:	Refactor ceSend:super:to:numArgs: pulling abort support out to		ceSendAbort:to:numArgs:	Rename activateInterpreterMethodFromMachineCode to		interpretMethodFromMachineCode	Remove unused linkSends: flag.Mske printProcsOnList: & printProcessStack: part of the VM api fordebug printing.Typos, use of splObj: instead of direct specialObjectsOop access' id '2a402e08-0733-4543-8408-ec053d592a2c' date '6 March 2011' time '9:13:53.765 am' author 'eem' ancestors ((name 'VMMaker-eem.727' message 'Fix super expansion when super expression is returned.  i.e.final return should only be elided if subclass method doesnot return the result of the super send.' id 'ddd40ec5-cf16-45d0-876f-d465abbddd04' date '22 February 2011' time '5:07:46.925 pm' author 'eem' ancestors ((name 'VMMaker-eem.726' message 'Slang: eliminate final explicit returns in super expansions since thesecan cause premature exit, failing to execute code in the subclassmethod.typo' id '43e02c62-a9e0-437f-8dac-bd880d4863b5' date '22 February 2011' time '4:23:28.917 pm' author 'eem' ancestors ((name 'VMMaker-eem.725' message 'Sista code genrator now compiles and runs for a short time (seemsfine in the simulator).cogit: macro allows excluding Sista-specific code from the CoInterpreter.Support for shortening objects (for shortening the Array result ofprimitiveSistaMethodPICAndCounterData).Support for sigusr1 stack dumping.' id '873e0b5d-57b8-4fde-9e7d-574e24c085b7' date '22 February 2011' time '3:20:43.64 pm' author 'eem' ancestors ((name 'VMMaker-eem.724' message 'CogMTVM source.  Minor refactor/rename for SistaStackToRegisterMappingCogit.Sista = Speculative inlining Smalltalk architecture.IsMethodReference/annotateMethodRef: => IsAbsPCReference/annotateAbsolutePCRef:CogMethodSurrogate hierarchy now holds cogit and clients defer to cogit to createthe CogMethodSurrogate determined by the Cogit, so that SistaStackToRegisterMappingCogitcan add a numCounters field to its CogMethod variant.Slang:Add a cogit: pragma to eliminate Sista-specific methods whengenerating a non-Sista VM. (but what about prim table?)' id '0c82b2c4-248a-4fb6-9f8e-3714a8450e0a' date '19 February 2011' time '9:26:34.078 pm' author 'eem' ancestors ((name 'VMMaker-eem.723' message 'Typo and redundant code in genSpecialSelectorComparison.Make genAndDis: take a doit string or a method.Define CogSimStackEntry''s inst vars in house style' id '7c13242a-a0b0-4fb2-a85a-431686fe9c6e' date '9 February 2011' time '1:23:34.358 pm' author 'eem' ancestors ((name 'VMMaker-eem.722' message 'Implement cannotInterpret: hook in the JIT.  Refactor JIT MNU handlingso that lookupMethodNoMNUEtcInClass: can answer the splObj: indexfor the selector to use to lookup failure (doesNotUnderstand: orcannotInterpret:).' id '3ba23962-c51b-4eea-a50c-042138f3c785' date '8 February 2011' time '5:42:19.224 pm' author 'eem' ancestors ((name 'VMMaker-eem.721' message 'Simulator cleanups (make simulated objectBefore: answer 0 on failure).print oop... & print frame... on the utilities menu.printop: prints fields of word objects.' id '899ccc4d-ca21-45a9-957e-c6a6f568dba1' date '8 February 2011' time '5:30:23.666 pm' author 'eem' ancestors ((name 'VMMaker-eem.720' message 'Fix primitiveExternalCall''s simulation version; specifically disablingMatrix2x3Plugin, because it broke bezier subdivision.' id 'faa9a216-cc39-42ac-b775-7040fa146f9b' date '8 February 2011' time '5:21:58.155 pm' author 'eem' ancestors ((id 'c3e429ed-65e8-4a61-b9fa-942d17f47702')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog.50' message 'Sista: Speculative-inlining Smalltalk architectureSistaStackToRegisterMappingCogit code generator countsconditional jumps (taken & untaken counts) calling back oncounter trip and provides a primitive to access inline cacheand counter state from methods.Sista code generator now compiles and runs for a short time (seemsfine in the simulator).cogit: macro allows excluding Sista-specific code from the CoInterpreter.Support for shortening objects (for shortening the Array result ofprimitiveSistaMethodPICAndCounterData).CogMTVM source.  Minor refactor/rename for SistaStackToRegisterMappingCogit.Sista = Speculative inlining Smalltalk architecture.IsMethodReference/annotateMethodRef: => IsAbsPCReference/annotateAbsolutePCRef:CogMethodSurrogate hierarchy now holds cogit and clients defer to cogit to createthe CogMethodSurrogate determined by the Cogit, so that SistaStackToRegisterMappingCogitcan add a numCounters field to its CogMethod variant.Slang:Add a cogit: pragma to eliminate Sista-specific methods whengenerating a non-Sista VM. (but what about prim table?)' id 'cc1d11ad-11f4-41d6-abfe-48f03fd9a405' date '16 March 2011' time '10:56:06.019 am' author 'eem' ancestors ((id 'a0182697-3785-4395-92bd-0c21bca0ca13')(name 'VMMaker-oscog.49' message 'Implement cannotInterpret: hook in the JIT.  Refactor JIT MNU handlingso that lookupMethodNoMNUEtcInClass: can answer the splObj: indexfor the selector to use to lookup failure (doesNotUnderstand: orcannotInterpret:).StackToRegisterMappingCogit:	Fix bug with storeRemoteTemp (e.g. StarMorph initialize in Cuis	3.x) which causes a stack off-by-one.	Rename merge:afterReturn: to merge:afterContinuation: and	revamp merge code to treat byte ode following an unconditional	branch the same as after a return.	Add spill tracing.Minor cleanups for recent blog posts:	Refactor ceSend:super:to:numArgs: pulling abort support out to		ceSendAbort:to:numArgs:	Rename activateInterpreterMethodFromMachineCode to		interpretMethodFromMachineCode	Remove unused linkSends: flag.Move the genExternalizePointersForPrimitiveCall andgenLoadCStackPointersForPrimCall to the front ofcompileInterpreterPrimitive so thata) reg args are pushed before any calls, andb) ceCheckProfileTick is run on the C stack.The first fixes the StackToRegisterBasedCogit''s crash when profiling.The second is safer than running it on a Smalltalk stack page.Fix simulation of the profling machinery (to debug the above).Make printProcsOnList: & printProcessStack: part of the VM api fordebug printing.Typos, use of splObj: instead of direct specialObjectsOop accessFix simulation of primitiveScanCharacters (send slotSizeOf: to objectMemory).Simulator cleanups (make simulated objectBefore: answer 0 on failure).print oop... & print frame... on the utilities menu.printop: prints fields of word objects.Fix primitiveExternalCall''s simulation version; specifically disablingMatrix2x3Plugin, because it broke bezier subdivision.Fix compileOpenPICPrototype openPICSize bug.  Need to use a realselector to compute the right map size.Typo and redundant code in genSpecialSelectorComparison.Make genAndDis: take a doit string or a method.Define CogSimStackEntry''s inst vars in house styleSlang:Eliminate final explicit returns in super expansions since thesecan cause premature exit, failing to execute code in the subclassmethod.Fix super expansion when super expression is returned.  i.e.final return should only be elided if subclass method doesnot return the result of the super send.' id '24fe55e7-63be-4845-b137-2f9714906c99' date '16 March 2011' time '10:45:47.822 am' author 'eem' ancestors ((id '9763a367-cfc4-4ef6-9ef5-64c77255c398')(id 'a4053f20-cb87-415d-aad3-3bb29b03724c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(id 'a2810aac-4423-6740-b70e-7e821b979cb4')) stepChildren ())) stepChildren ())(name 'VMMaker-oscog-IgorStasenko.54' message '- added disabling module loading support' id 'c98a0b6c-7f68-4af7-9012-85d3dfdf29ae' date '23 March 2011' time '5:30:42 pm' author 'IgorStasenko' ancestors ((id 'fb4c7e81-ea2e-1b45-a461-e382537797a0')) stepChildren ())) stepChildren ())(name 'VMMaker-oscog.dtl.56' message 'Add tests from VMMaker trunk to document various issues and verify presence of primitives.' id 'c1d30608-00e8-53b7-209a-34f7a46c1508' date '4 April 2011' time '10:06:00.292 pm' author 'dtl' ancestors ((name 'VMMaker-IgorStasenko.55' message '- merge with oscog.54' id '8d1251c2-47d7-4c19-8797-29ad9f8b47bd' date '4 April 2011' time '2:47:42 pm' author 'IgorStasenko' ancestors ((id '73c095bd-7fa5-4ef9-b9fc-60378cae64c7')(id 'c98a0b6c-7f68-4af7-9012-85d3dfdf29ae')) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog.dtl.57' message 'Generate C code for #repeat.Implementation by Igor Stasenko and Nicolas Cellier.' id 'c1d30608-04dd-53b7-209a-34f7a46c1508' date '11 April 2011' time '10:13:51.668 pm' author 'dtl' ancestors ((id 'c1d30608-00e8-53b7-209a-34f7a46c1508')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.88' message 'Slang: fix TAssignmentNode for as argument (enclose in parentheses).VMMaker: provide option: method tag to filter-out ceDynamicSuperSend:to:numArgs:.Eliminte cogit: method tag in favour of <option: #SomeKey>' id '364d19cb-0842-41b5-bf54-bbd79b230bf6' date '28 June 2011' time '11:02:51.215 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.87' message 'Cogit:Implement genDynamicSuperSendBytecodeImplement unalignedAt:[put:] in CogAbstractInstruction & subclasses.Rename the explicit/implicit receiver trampolines to eliminate "Push".Fix C compilation of the Newspeak Cogit VM (at least on WIndows)' id '5587fcb2-10cb-409d-9ebb-cdbd66bd910a' date '27 June 2011' time '7:17:18.412 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.86' message 'Integrate Igor''s fix from http://code.google.com/p/cog/issues/detail?id=46.Modify to use #= instead of #== (important in the simulator)' id '9fa2ae33-553f-4e81-b8d8-45c5ba299256' date '27 June 2011' time '4:09:22.641 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.85' message 'Cogit:Implement GC update and unlinking of pushImplicitReceiver anddynamic super sends.Implement dynamic super sends and push explicit outer.' id 'ddb80040-b647-4723-a62b-313ff83eb733' date '27 June 2011' time '3:48:00.385 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.84' message 'Cogit/CoInterpreter:Fix implementation of cePushImplicitReceiverFor: (support unalignedaccess - but only in simulation; what about translation??).Fix typo for fetchClass: in dynamicSuperSendBytecodeSimulator:Provide unalignedLongAt:[put:] and a test.Nuke  couple of unsent methods.' id '65d3d0e0-a9bb-4d56-ad24-df44e8dc0e37' date '25 June 2011' time '2:42:40.695 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.83' message 'Simulator:Eliminate duplication of byteAt:[put:], shortAt:[put:], fetchFloatAt:into:et al in simulator hierasrchy by always sending to objectMemory.Provide disassembleCodeAt: which does trampolines and methodsCogit:Fix typo bug in cePushImplicitReceiverFor:' id '800edb16-ae6e-4126-a375-b7a065715af2' date '25 June 2011' time '12:59:28.575 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.82' message 'Cogit:Implement Newspeak pushImplicitReceiver compilation.Implement Cogit side of dynamicSuperSend:- Make dynamicSuperSend entry-point alignment different from   send and superSend aligments.- generate the trampolines- fix offsetAndSendTableFor:annotation:into: for dynamicSuperSendVM:Fix symbolicMethod: for Newspeak bytecodes.Slang:Fix cppIf:ifTrue: for simulation (must return values)Plugins:Fix typo in FilePlugin>>fileRecordSize (slippery Slang)' id 'a5c2b2b1-450c-403b-824b-e4c75907b284' date '24 June 2011' time '8:30:01.585 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.81' message 'Cogit:Add IsNSSendCall for mapping Newspeak dynamicSuperSends.Refactor processing sends and mapped pcs in the method map toinclude IsNSSendCalls in the Newspeak VM.  UseoffsetAndSendTableFor:annotation:into: to assign offset and sendtable for linked sends using block for multiple return values pattern.Slang:Implement beta reduction for literal blocks sent value[:value:*] forinlining offsetAndSendTableFor:annotation:into:.Implement an asSpecified form of inlining where only methodsmarked <inline: true> are inlined.Fix expansion of cppIf: in expression contexts.Have define nodes print their name, not their value.Misccomment typos and fix to class name in openCogMultiWindowBrowser' id '63e1eab1-b44b-462e-ae5c-f2fc5bbcda4b' date '24 June 2011' time '10:14:09.945 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.80' message 'Initial Newspeak support in StackInterpreter.Add support for conditional compilation so that CoInterpreter canbe generated optionally with Newspeak support.  Can''t do this withinheritance, but could do it with mixins, hence for now this hack.FooInterpreter class>initialize => FooInterpreter class>initializeWithOptions: aDictionaryand initializeMiscConstants => initializeMiscConstantsWith: optionsDictionary.VMMaker options: pairs provides access to these options, hence e.g.	VMMaker		generate: CoInterpreter		and: StackToRegisterMappingCogit		with: #(NewspeakVM true IMMUTABILITY false)		to: ...and	CoInterpreter initializeWithOptions: (Dictionary newFromPairs: #(NewspeakVM true)).	CogVMSimulator new openAsMorph; runUse e.g. self cppIf: NewspeakVM if... and self cppIf: COGMTVM if... as appropriate.Add Newspeak bytecodes to StackInterpreter.Refactor FilePlugin simulation into FilePlugin to eliminate duplication of code in various interpreter simulator subclasses.Provide strncpy strcpy and strcmp implementations in VMClass for simulation.' id '0f62b9a2-0aef-4d39-8077-32f53b6e0e39' date '22 June 2011' time '5:27:55.772 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.79' message 'Use methodReturnValue: where appropriate in Alien plugins fornewspeak-style VMMirror argumentCount shenanigans.Clean up the Newspeak primitive table a little.' id 'd1cc45e3-9cc0-4399-a644-2bacab32b83b' date '19 June 2011' time '3:15:30.057 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.78' message 'Fix interp.h header generation.  Only Interpreter classes should beinvolved.' id '412444c6-36dc-48be-b5cd-a6ebc4ade0bb' date '16 June 2011' time '2:35:54.815 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.77' message 'Modify interp.h generation so that it includes defines for VM_PROXY_MAJOR & VM_PROXY_MINOR.  Seehttp://lists.squeakfoundation.org/pipermail/vm-dev/2011-June/008460.html.Add NewspeakVM and IMMUTABILITY to VMBasicConstants to allowcppIf: chicanery to harmonize NewspeakInterpreter code with otherVMs.' id '5ff1c24c-6347-4766-a661-f7f0d3f3db99' date '16 June 2011' time '1:59:00.745 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.76' message 'Fix primitiveChangeClass and primitiveAdoptnstance in the NewspeakVMto allow changing the class of the receiver to a compact class sinceone can always set the class field to a class even if that class is acompact class; one just ends up with a non-compact instance of acompact class.  Of course, the other way around can''t work withouta become:.' id '3ff12599-c75e-4b1d-ae5d-3eb3fc3c9263' date '15 June 2011' time '1:03:11.184 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.75' message 'Provide generate:and:to:platformDir:including:.  Commentgenerate:to:platformDir:including: correctly.' id 'e1bb08e3-482d-4bfd-a416-d203d9fe4c57' date '7 June 2011' time '5:02:56.703 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.74' message 'And of course all VMs could use a 4 argument primitiveExecuteMethodArgsArray.Harmonize the implementation.  Includes an untested one forInterpreter.' id 'a5f3613b-64bd-404a-982e-3528889c1d07' date '7 June 2011' time '3:21:02.765 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.73' message 'Newspeak''s VMMirror requires a 4 argument primitiveExecuteMethodArgsArray.' id '8ef988bb-d4c8-479d-a4d8-75f1ddc5f248' date '7 June 2011' time '11:11:04.178 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.72' message 'Fix sendInvokeCallbackContext: GC bug.  Cannot separatejustActivateNewMethod from fetchContextRegisters: if there couldbe a GC in between since IP is updated relative to method, notnewMethod.Add optional send and prim tracing to Newspeak VM (helped trackdown above bug).Merge with VMMaker.oscog-dtl.71 for Montgommery fix.Fix VMMaker''s plugin selection so that all plugins selected if platformis ''Cross''.Classify unclassified memory access methods.' id 'dcc88b7d-4b47-4bf1-8400-d1c6499e87d2' date '6 June 2011' time '1:45:30.54 pm' author 'eem' ancestors ((name 'VMMaker.oscog-dtl.71' message 'Montgomery multiplication bug fix from <http://lists.squeakfoundation.org/pipermail/vm-dev/2011-June/008350.html>Date: Sat, 4 Jun 2011 00:29:37 +0200From: Nicolas Cellier <nicolas.cellier.aka.nice@gmail.com>To: Squeak Virtual Machine Development Discussion <vm-dev@lists.squeakfoundation.org>Subject: [Vm-dev] BUG in Montgomery multiplicationRecent addition, montgomery multiplication, has a bug:it fails to correctly take last carry into account...You can see it with this example (if you have the Smalltalk mock up) :| m mInv a b |m := 15485863.mInv := 256 - ((m bitAnd: 255) reciprocalModulo: 256).a := 8826019 digitMontgomeryTimes: 8826019 modulo: m mInvModB: mInv.b := 8826019 naiveMontgomeryTimes: 8826019 modulo: m mInvModB: mInv.self assert: a = bCorrect result is given by naive mock up : 10626344The primitive gives a wrong result.I attach a correction for the LargeInteger plugin (and for theSmalltalk mock up too).Sorry for uncomplete tests.Please, update VMMaker ASAP.Nicolas' id 'f888ab51-e5b6-48f9-b48b-30f92e61ee50' date '4 June 2011' time '1:27:56.354 pm' author 'dtl' ancestors ((name 'VMMaker.oscog-eem.70' message 'Make pruneUnreachableMethods transitive (to eliminate all theNewspeak immutability methods from the non-Newspeak VMs).' id '36b63465-1b05-401f-bcb2-f9cae49422b8' date '2 June 2011' time '12:41:11.052 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.69' message 'Move the inIOProcessEvents switch code back into each ioProcessEventsimplementation, since various platform code calls ioProcessEvents,not just the interpreter.' id 'fd9c171e-3731-4093-912d-ad8fefb4800c' date '1 June 2011' time '4:45:22.032 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.68' message 'Add NewspeakInterpreter to this package.  Needs rev 2384 or betterof http://www.squeakvm.org/svn/squeak/branches/Cog.  Move somemethods up from NewObjectMemory to ObjectMemory.Merge with VMMaker.oscog-dtl.58/59/64/67.Fix potential bug in Cogit''s primitiveFlushCacheByMethod (must flushat cache).Move some context-specific primitives to StackInterpreterPrimitivesfrom InterpreterPrimitives.Streamline booleanCheatTrue & booleanCheatFalse (no need todecrement localIP and refetch byte).Drop use of CrLfFileStream.Fix arg count bug in BalloonEnginePlugin>>primitiveAddPolygon.Add Mac VMProfiler support plugin, but call it VMProfileMacSupportPlugin.Add STACKVM, COGVM & COGMTVM as simulation-timeconstants (not just interp.h constants) and use them to selectcorrect stack direction for Alien callout prims in IA32ABIPlugin.Make sure movement fiunctions in IA32ABIPlugin cope with backwardscopying (e.g. use memmove over memcpy).Add InterpreterPrimitives>>signalNoResume: for callbackserialization.Limit simulation screen size to 2/3 of the actual screen.Provide VMMaker class>>makerFor:and:to:platformDir:including:for more predictable plugin generation.Move some Object VMMaker-translation extensions down intoVMClass.Reorganize all moduleName and prepareMethods plugin methods tosame protocol.Minor formatting of VMMaker generation-time errors and warnings.Use literalAt; in place of literals first.' id '1fd12e1a-c0b3-4d41-91bb-26f029240bfe' date '31 May 2011' time '1:47:28.255 pm' author 'eem' ancestors ((name 'VMMaker-eem.743' message 'Fix snafu in cloneContext:.' id '3682a52e-2759-4cea-855e-cbabf9dd7ed2' date '26 April 2011' time '5:46:54.156 pm' author 'eem' ancestors ((name 'VMMaker-eem.741' message 'Implement shallowCopy (primitiveClone) and copyFrom:(primitiveCopyObject) correctly for contexts.' id '0bb32a0a-d661-4905-9dcd-773be27e0b51' date '26 April 2011' time '10:22:39.946 am' author 'eem' ancestors ((name 'VMMaker-eem.740' message 'CogVM:	Fix includesBehavior:ThatOf: for nil superclass.  Fixes FFI for	images that don''t have Alien installed.	Fix primitiveFlushCacheByMethod for objects-as-methods' id '3bc54245-f148-4436-91f8-fa30847dfca3' date '30 March 2011' time '11:08:10.752 am' author 'eem' ancestors ((name 'VMMaker-eem.738' message 'Fix removeQwaqPlugins to not remove thrwaded FFI plugins (doh!)' id '06645c46-5be9-4417-9f28-761d88601cbd' date '16 March 2011' time '10:59:58.149 am' author 'eem' ancestors ((id 'a0182697-3785-4395-92bd-0c21bca0ca13')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-dtl.67' message 'Synchronize with VMMaker-dtl.234 and VMMaker-dtl.233Mantis 7109:Change Set:		LargeIntegersPlugin-SpeedUp-BitShift-Patch-M7109-niceDate:			4 July 2008Author:			niceThese are small improvment to speed up LargeIntegersPlugin bitShift:See http://bugs.squeak.org/view.php?id=7109Mantis 7120:Change Set:		Integer-raisedTo-modulo-COGplugin-M7120-niceDate:			12 July 2008Author:			niceThis is a LargeInteger plugin extension to compute Montgomery modular multiplication((a * b ) / (d^n)) \\ mDigit d is set to 256 (LargeIntegers are Byte arrays)n is set to m digitLength.The negated inverse of m modulo 256 has to be provided on input' id '08000000-1508-4e03-1508-4e0314000000' date '16 May 2011' time '9:31:00.25 pm' author 'dtl' ancestors ((id '97bab5b0-51d6-4deb-8b58-5bcedd4747dc')) stepChildren ())(name 'VMMaker.oscog-eem.56' message 'Fix snafu in cloneContext:.' id 'fbf17bd2-ddbc-488f-b70d-3b9ba8906430' date '26 April 2011' time '5:49:36.229 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.55' message 'Implement shallowCopy (primitiveClone) and copyFrom:(primitiveCopyObject) correctly for contexts.Change package nameto correct Monticello branch  convention.' id '315353fc-7f75-4b5b-8a43-3a636cb1aa0b' date '26 April 2011' time '11:47:29.937 am' author 'eem' ancestors ((id '73c095bd-7fa5-4ef9-b9fc-60378cae64c7')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.89' message 'Make sure STACKVM''s interp.h includes NewspeakVM define if appropriate.Fix shortReversePrintFrameAndCallers:for null framePointer.  If erroron startup (eg. bad required compact class indices) platform errorhandler will attempt to dump a null stack.VMMaker:Check for generation being required after creating code generator toensure correct initialization.' id '36670f7a-02f4-4cc2-85c1-491c954095d3' date '29 June 2011' time '12:15:04.611 pm' author 'eem' ancestors ((id '364d19cb-0842-41b5-bf54-bbd79b230bf6')) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.90' message 'Slang:Fix translation of statement lists in context of ? : .Cogit:Fix remove inst var typos die to inst var renames.Fix assert.Cog Interpreters:Informative printing for Aliens.' id 'efb3c8a3-db33-4387-b560-49b3d9f04cde' date '30 June 2011' time '4:18:59.798 pm' author 'eem' ancestors ((id '36670f7a-02f4-4cc2-85c1-491c954095d3')) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.94' message 'A nt-very-good checker for missing #asSymbol slips.' id '822402e5-3f77-4920-829f-9b4791abdc78' date '6 July 2011' time '5:55:39.168 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.93' message 'Sprinkle more <option: #NewspeakVM> pixie dust to avoidNeewspeak contagion creeping into the standard VMs.' id 'a811c33a-a695-452b-9090-e0984e33c100' date '6 July 2011' time '3:32:10.018 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.92' message 'CogVM: allow cogMethods to refer to bytecoded methods without the bytecodedmethods having to refer back, for Newspeak anonymous accessors.  Since inlinerelinking/unlinking machinery needs cog metods to have correct selector andsicne accessors shared between classes using various selectors the VM can''tdepend on accessor methods having the right selector.Fix bug in ceSICMiss: for dynamic supere send relinking.  Use receiver arg, notobject at wrong offset on stack.Fix bug in computeEntryOffsets.  Compute dynSuperEntryAlignment.Fix bug in genDynamicSuperSendBytecode.  Anotate the send as IsNSSendCall.Fix bug in incrementUsageOfTargetIfLinkedSend:mcpc:ignored:.  UseoffsetAndSendTableFor:annotation:into: to get offset.Fix bug in remapNSIfObjectRef:pc:hasYoung:.  Remap the mixin slot.Fix bug in methodClassOf:.  Don''t assume methodClassAssociation is non-nil.Move a few more interpreter/object memory methods into the <api>.Slang:When generating code for the interpreter or cogit also collect the api methods ofthe dual so that CCodeGenerator>>selectorReturnsPointerToStruct: can answercorrectly for methods invoked in the api.' id '8e895f7e-f712-4117-8e8a-cbc8ebf37b00' date '6 July 2011' time '2:41:23.219 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.91' message 'Fix slip in ceSICMiss: that popped too much in dynamic super sends.Refactor implicitReceiverFor:mixin:implementing: so receiver isfetched correctly in machine code and interpreter.Refactror declaring of interpreterVersion.Results in apparently functional StackInterpreter Newspeak VM.Add a send breakpoint for push implicit receiver.' id 'd5a27862-3af2-4716-b40e-acfc86943ae7' date '4 July 2011' time '3:04:41.212 pm' author 'eem' ancestors ((id 'efb3c8a3-db33-4387-b560-49b3d9f04cde')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.107' message 'Fix generation of cogit.c for MT VM.  It must not define COGMTVM.' id 'e97a2dd5-e1e7-4281-bb49-cb97be511631' date '20 July 2011' time '10:40:22.075 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.106' message 'Merge BitBlt rule 41 changes from IgorStasenko.96.Fix loop bounds bug in initializeExtraClassInstVarIndices.' id '5e185229-3c2a-4912-a60f-e2a42fa627cb' date '19 July 2011' time '3:36:07.596 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.105' message 'Work around C compiler optimization bug with max negative valuein signed32BitValueOf: (fixes AlienSunit tests).Add vmParameters 70 & 71, the interpreter proxy major and minorversion numbers.Make CoInterpreter & CoInterpreterMT generate the same interp.hby defaulting COGMTVM to 0.  The two differing was insane.Speed up primitiveFail by using the primFailCode not trick.' id '79234f80-ee6a-404c-9e5c-2134e3b76463' date '18 July 2011' time '4:43:16.046 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.104' message 'Cogit:Fix ceImplicitReceiverFor:receiver:class: cache write to add method toyoungReferrers if eithe rthe class or the mixin are young.Change receiver of various longAt: and longAt:put: from coInterpreterto objectMemory (the ultimate destination).' id '3ca0990a-ad74-44f1-bd92-a8be337813a1' date '15 July 2011' time '6:46:41.674 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.103' message 'Cogit: StackToRegisterMappingCogit Newspeak bytecode support.Move endPCOf: from CoInterpreter into Cogit and use the bytecodetable to determine it.Rename cePushActiveContext[Trampoline] to ceActiveContext[Trampoline]since there''s no push in the StackToRegisterMappingCogit.Simulator: Add a NewspeakStackDepthFinder to check NewspeakStackToRegisterMappingCogit-generated code.' id '35c0fb21-5a12-4d75-99de-d55a76fde39f' date '14 July 2011' time '5:49:17.353 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.102' message 'Move inline cache probe for implicit receiver nto the trampoline,avoiding the slow interpreter cal for the common case.  Impliessupporting object references in the generated run-time since theclass fetch accesses SmallInteger and the compactClassTable.Fix NewObjectMemory>>lookupAddress: for Newspeak images(use thisClassIndex and classNameIndex from simulated image, notfrom simulating image).Fix parenthesizing in ? : with single statements.' id '3f0d76c6-2e4c-464d-9b74-0b56caaf0eb6' date '14 July 2011' time '1:11:00.075 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.101' message 'Another couple of option: NewspeakVM.' id 'dd839613-bebe-47f7-94a8-1bf3667f253f' date '13 July 2011' time '12:56:07.298 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.100' message 'Sigh; generateNewspeakRuntime must of course be option: NewspeakVM' id '0f2efd1e-0fd4-4544-b32b-91a0b38c6354' date '13 July 2011' time '12:29:46.147 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.99' message 'IA32ABI Alien plugins: Make accessor primitives fail for null-pointers.Fix compilation of StackToregisterMapping assert VMs (isQuick: ->isQuickPrimitiveIndex:).Simplify some cppIf:''s to eliminate generated braces.' id '3a15adab-a4d3-49c1-82a1-6ed02b158658' date '13 July 2011' time '11:14:18.809 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.98' message 'Fix return from ALien callbacks on Stack/Cog VMs.  The instruction-Pointer must be pushed and the page''s head frame pointers set sincewe''re returning from the page to the callout context.Make the Alien plugins use the new returnAs:ThroughCallback:Context:callback return plumbing for the older primReturnFromContextThroughreturn primitive.Implement majorVersion and minorVersion for the interpreter proxyand get the Alien plugins to test for minorVersion >= 12 (the newplumbing).' id '120a176d-c5ad-4b31-829d-2236efbb9278' date '12 July 2011' time '1:32:01.706 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.97' message 'Fix a missed trick in internalExecuteNewMethod (we know we''re inthe interpreter here).Add C stack alignment asserts to the callback entry-points.' id 'e5a88d4c-b638-4228-8a1d-39d5af02c8d8' date '11 July 2011' time '12:42:19.806 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.96' message 'and ceExplicitReceiverTrampoline passes its argument inSendNumArgsReg.  Doh!' id 'b9686449-0418-4b93-b40f-40049e108776' date '7 July 2011' time '2:48:53.575 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.95' message 'Cogit:push explicit outer send receiver is a 2 byte bytecode (doh!)' id '50e172c1-9923-4c81-a69e-7ab4f0eee0af' date '7 July 2011' time '2:18:50.037 pm' author 'eem' ancestors ((id '822402e5-3f77-4920-829f-9b4791abdc78')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.115' message 'Slang:Fix messageReceiverIsInterpreterProxy: to exclude builtins (byteAt: et al).Fix pluginClassesUpTo: which used to always answer a single class.' id '9e410250-c808-4f95-a591-ef67d54f978e' date '8 August 2011' time '11:26:37.816 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.114' message 'CoInterpreter: fix bad bug with primitiveClone of a compiled method.The clone should be an uncogged method irrespective of the state ofthe receiver.  Symptoms include rare crashes in become: duringMethodDIctionaryTest which copies a test method.  Fix by adding aversion of primitiveClone to CoInterpreterPrimitives.  Also change thelastPointer*: methods use of literalCountOf: so the code is inlined.Remove the now unnecessary overrides in newCoObjectMemory andadd an assert to headerOf: to spot stale references to cog methods.Cogit: Fix potential bug in become: with cogged methods.  Sincebecome can cause an object to gain a new reference cogged methodsthat gain new references must be added to youngReferrers.  Do thisby replacing inFullGC with gcMode and having a separate code pathfor remapping machine code for become.  Add pre/postBecomeActionmethods to handle the necessary housekeeping.Slang: builtins sent to interpreterProxy still need to be invoked oninterpreterProxy, i.e. interreterProxy->foo, not just foo.  Indentstatement lists emitted as expressions for readability.' id 'c9755705-e606-4e32-92f1-228c68774f30' date '7 August 2011' time '12:37:27.074 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.113' message 'Cogit: Refuse to jit noContextSwichValue until the relevant entryoffset has been computed.' id '14a788ee-4796-42f0-8d5f-13ec19ffe511' date '28 July 2011' time '10:45:01.193 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.112' message 'Newspeak Cogit:Add missing incremental GC code for implicit receiver cache.Fix markLiteralsAndUnlinkIfUnmarkedSendOrPushImplicit:pc:method:for empty cache.Cogit:Remove C compiler warnings in addressIsInFixups: & methodFor:.Slang:Fix bug on inlining that would redefine method arguments (seeTMethod>inlineFunctionCall:in:)Consequently correct some CoInterpreter methods which wereaccidentally getting the right signature.Also use TMethod>declarationAt:put: in more places.CogMemoryManager:Add an initial CogObjectHeader class.' id 'efadaaf2-156f-49df-95df-ea610c02b6b2' date '26 July 2011' time '3:15:08.606 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.111' message 'Fix bug in remapNSIfObjectRef:pc:hasYoung: implicit receiver sendcacheing.  If cachew tag or value are young method must remain inyoungReferrers.Fix comments in integer conversion routines.  Its not a compiler bug,but it is undefined behaviour in C.Fix some typos in CogMemoryManager header.Add an initial object header class for the new object representation.' id '119eefd3-e409-4891-9741-ae7fa472607e' date '25 July 2011' time '11:27:21.574 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.110' message 'Introspection to the rescue.  Fix generating bogus defines forSTACKVM, COGVM, COGMTVM et al using >> and literalsDo: ;)' id '3a1a55cd-2400-49d1-9252-f056b7d19af2' date '21 July 2011' time '3:40:06.576 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.109' message 'Fix ffiSupportsCallingConvention: which wasn''t doing anythingsensible.Reolace uses of == for object comparison with = since in simulationoops may be large integers and hence fail for == and succeed for =.' id '15132349-f464-4cfe-8200-20a6d6b201d3' date '21 July 2011' time '2:36:03.352999999 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.108' message 'Nuke ReentrantFFIPlugin in favour of ThreadedFFIPlugin, usingcppIf: COGMTVM to select threading-specific code.  This so thatthere only needs to be one SqueakFFIPrims.c for the reentrant(non-threaded) and threaded FFI plugins.  This is a much easierfix than somehow allowing the two files to exist side-by-side inthe file system.' id '06af30e4-7c67-4259-88dc-8ee2a10499c4' date '21 July 2011' time '1:45:28.048 pm' author 'eem' ancestors ((id 'e97a2dd5-e1e7-4281-bb49-cb97be511631')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.121' message 'Cogit/CoInterpreter: eliminate some compiler warnings.' id '8561f7f7-973d-4e7a-bf2d-5ae21509b2c5' date '22 August 2011' time '4:55:08.945 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.120' message 'Cogit:Put in a hard check that the number of opcodes allocated is sufficient.Bring the in-image compilation facade up-to-date.This was done to check that compiling primitive at: doesn''t generatetoo many opcodes now the interpreter primitive is caled on failure.' id '7b52067f-d52d-4a27-99ee-d5cd6639f3a2' date '22 August 2011' time '10:28:55.818 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.119' message 'CoInterpreter/StackInterpreter:Fix object accessing prims (at:, at:put: & size 60, 61 & 612) for contexts, becauseprimitives  60-62 are used for the mirror primitives in ContextPart (object:at: et al).Fix now obsolete, but still used primitiveContextAt et al (primitives 210, 211 & 212)to be varargs, since these might also be used from mirror primitives.  Pull thetemporary:in:[put:] code into a non-inlined wrapper to avoid bloating the commoncase.Cogit/CogObjectRepresentationForSqueakV3:Fix genInnerPrimitiveAt: & genInnerPrimitiveSize to fail for context receivers.Fix genInnerPrimitiveAt:, genInnerPrimitiveStringAt: & genInnerPrimitiveSize tocall the interpereter primitive on failure, to get the error code (not yet avoidingthe call if the method doesn''t use the error code; one thing at a time).Add symbolic constants for accessing instSpec/formatOfHeader:.  Make theseand their analogues for compact class index access macros.Slang:Fix TStmtListNode as-expression output for the forst or: in InterpreterPrimitives>primitiveSize.' id 'dedbaf07-59d6-4a97-b10a-af8a7f631287' date '19 August 2011' time '1:57:15.425 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.118' message 'Fix bug in checkIfValidObjectRefAndTarget: for the Newspeak VM.Fix assert uses of methodClassAssociationOf: tonoAssertMethodClassAssociationOf: in cases where a CogMethod''sobjectHeader may be invalid (i.e. during relocation).Fix some local variable name conflicts with globals.Add a longPrintOop: that printOopShort''s pointer fields.In the Newspeak VM hook up an anonymous method with one of itscogged forms if its original cogged method has been freed.Make the leak checker a little more informative.Use super for CoInterpreterMT>>loadInitialContext.' id '3b55b5fa-083b-4528-acc2-bb5f7aa1a3fe' date '17 August 2011' time '4:40:20.916 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.117' message 'Cogit:Fix bugs described in the "[Pharo-project] Troubles with #flushCache and #run:with:in:"thread http://lists.gforge.inria.fr/pipermail/pharo-project/2011-July/050858.html.The PIC machinery wrongly treated invoke-as-method sends as MNUs.Closely related, finally fully implement PIC MNU cacheing where, by calling a specialabort, a PIC is able to record that a gven selector is an MNU for a particular class.Speeds up a simple MNU benchmark by 33% (with more performance the deeperthe receiver''s cass hierarchy is).Refactor method cache flushing''s interface with the Cogit.  If doesNotUnderstand: isever redefined all closed PICs with MNU cases must be discarded.Change type of JumpLong: and JumpRT args for fewer casts.Comment typos (cePushImplicitReceiver => ceImplicitReceiver).CoInterpreter:fix receivers in primitiveClone.  Fix assert failure in cloneContext: by avoidingObjectMemory>>clone:.refactor printOopShort: and use this in new printMethodDictionary(Of), andalso in findString.Slang: Fix translation of $'' which needs to become ''\''''.' id 'a21465f6-8cd9-4284-8638-c30d5de21ce9' date '16 August 2011' time '2:31:47.752 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.116' message 'Improve validation checks for super expansion.  Args need to bevariables that have the same names as corresponding args in supermethod.  Fix two cases of disagreement (luckily this affects onlyassert code so no need to rebuild production VMs).' id '401abad7-7558-4242-8311-b5c362e31a58' date '9 August 2011' time '12:04:59.972 pm' author 'eem' ancestors ((id '9e410250-c808-4f95-a591-ef67d54f978e')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.137' message 'Fix primitiveContextAt[Put] for non-contexts (ContextPart subclassesother than MethodContext including BlockContext).  stObjectAt[Put]could fail so args should be popped only on success.  Fixes failuresin ClosureCompilerTest>testSourceRangeAccessForBlueBookInjectIntoas of VMMaker.oscog-eem.118.Add convenient shortPrintFrame:AndNCallers: for debugging.' id 'fbe64d98-6b1a-4c5b-b3f3-d2b1091406dc' date '9 November 2011' time '11:26:44.493 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.136' message 'Fix error codes for at: and at:put: primitive so that for non-indexableobjects they fail with #''bad receiver'', not #''bad index''.' id 'c62e0f35-616c-4547-b4e7-46765111b6a9' date '7 November 2011' time '11:20:47.175 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.135' message 'Filter-out attempts to create MNU pics with new selectors.  FixesStéphane Rollandin''s crash of 21/10/2011:	[((Compiler new evaluate: (''Beuh'' ifNuk: [yo]))		on: Error       		do: [:ex | ex description]) printString] fork' id '1c85e5ef-0fe8-4a1e-9421-ff0d53845fba' date '25 October 2011' time '11:21:12.168 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.134' message 'Fix remaining bug in context access fixes of VMMaker.oscog-eem.119.stObject:at: and stObject:at:put: need to use stackPointerForMaybeMarriedContext:not fetchStackPointerOf:, since the context''s stack pointer may be stale.Fix send trace printing.  Interpreter sends need also to be printed.(A better fix is probably to redo sendBreakpoint: but this will serve for now).N.B. this reassigns the sendtrace flag values.Add primitiveNotEquivalent with prim # 169.Merge with VMMaker-oscog-dtl.125/VMMaker-oscog-EstebanLorenzano.124for the BytesPerWord generation fixes.' id 'a0d46c48-3d9a-43f9-a769-51f31ce120e9' date '19 October 2011' time '10:36:08.493 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.133' message 'Tiny performance tweak to bytecodePrimMultiply.Added findStringBeginningWith: debugging facility.' id '1ca6557f-8901-4791-8473-e2c09d25bbf3' date '7 October 2011' time '3:56:54.295 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.132' message 'Fix yet another slip in Cogit>>lookup:for:methodAndErrorSelectorInto:for cannotInterpret: cases.  Fixes Mariano''s crash as of 2011/10/03.' id 'bd35186a-b5f6-490a-ad8b-2a9c487674fa' date '4 October 2011' time '7:41:37.687 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.131' message 'Make a couple of comments more honest.' id '7a963469-105d-4374-9162-62c6dbd745f4' date '3 October 2011' time '2:20:08.437 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.130' message 'Slang strikes again.  #interpret => #interpret asSymbol.' id '1460ba33-1ef5-45e4-a761-45df38a32de5' date '3 October 2011' time '2:13:49.813 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.129' message 'Deal with some realities in the minValidCallAddress checking code.At least on Mac OS under gcc -O, gcc will reorder code so thatprimitiveFail comes before interpret.Also firm up the signatures of rewriteInlineCacheAt:tag:target: &rewriteCallAt:target:.' id '1b6f9029-666c-4ca4-b58c-9973784bb7ba' date '3 October 2011' time '2:02:35.139 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.128' message 'Fix regression in object-as-method/cannot-interpret for single andpolymorphic inline cache misses (lookup:for:methodAndErrorSelectorInto:).Fix formatting bugette in context printing.' id '314823f6-cd6c-468f-9183-843b558f630b' date '27 September 2011' time '5:43:54.942 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.127' message 'Fix MNU PIC creation not to answer an error code to the interpreter.This is the demon call 0x00000013 bug.' id '35927684-7e1e-4ff8-ad9f-90ecec7bb9a0' date '23 September 2011' time '1:44:07.265 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.126' message 'Cogit:Fix cPICEndSize mis-computation caused by using rounded-upclosedPICSize.  Compute cPICEndSize and /then/ round-up closedPICSize.Fix for simulation callTargetFromReturnAddress: asserts in relocation calls.' id '6af3249f-6c5c-4e1b-8a69-f59e542154c5' date '22 September 2011' time '6:02:25.985 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.125' message 'Cogit:Add callsite link/relocate checks to catch the call 0x00000013 MNUcallsite relinking bug.Reduce the size of the simStack to something proportional toLargeContextSize.CogMemoryManager:Use a 5-bit format field to encode all of indexability, weak/ephemeron,hence gaining a bit.' id '539c10db-ab19-4fc7-ada1-4ffae6463ed1' date '21 September 2011' time '3:24:21.37 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.124' message 'CoInterpreterMT:Fix an assert failure/thread state issue with threadSwitchIfNecessary:from:.Make willingVMThread return highest priority thread wanting ownership.Interpreters, as part of CogMemoryManager work:Nuke assertClassOf:is:compactClassIndex: in favour ofis:instanceOf:compactClassIndex: et al.  (Next step is to hide compact classindices in ObjectMemory, by implementing isFloatOop:, isFloatNonInt: etc).Refactor various float conversion routines to call the core floatValueOf:	method.Eliminate a SLang warning in compactClassAt:.Elsewhere, as part of buildup to changing semantics of translating symbols:Fix the one use of #Symbol => C string in initializeExtraClassInstVarIndices where#Array was expected to translate to "Array".Convert type sends to pragmas in various pragmas.CogMemoryManager:Transcribe David Ungar''s generation scavenger into Smalltalk.' id '6dc066ca-29ab-4d2f-b988-60cc2c425779' date '9 September 2011' time '5:34:05.923 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.123' message 'Cog:Refactor, moving isContextNonInt:, instSpecOfClass:and sufficientSpaceToInstantiate:indexableSize: to ObjectMemory.Fix the 1Gb allocation bug, Use formatOfHeader: instead of raw foo >> 8 bitAnd: 15.Fix gcc compiler warnings in getStackPointer and printOop.' id '9c524903-b0c7-46a8-a37a-5dfda6fcd1f3' date '6 September 2011' time '4:36:50.618 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.122' message 'Slang:Fix bug in generaitng code for builtins, specifically integerObjectOf:.In an interpreterProxy send, the receiver should be elided only forthe kernel builtins that do memory access, not for interpreterProxy''sprotocol.  SO builtin: => kernel: & builtin:.Refactor the sizeof: code so that e.g. self sizeof: aByteArray answersthe size of the byte array (i.e. alignedByteSizeForClient: => alignedByteSizeOf:forClient:).Cog:Move noInlineTemporary:in: from CoInterpreter to StackInterpreterRemove the undef of halt following includes of sqAssert.h.sqAssert.h should not implement halt.  This will temporarily breakbuilds until sqAssert.h is updated.Make Cogit''s halt: invoke warning, not error.' id '3dcdc732-75f6-4bc4-934c-9d76770dfbb4' date '5 September 2011' time '10:08:18.436 am' author 'eem' ancestors ((id '8561f7f7-973d-4e7a-bf2d-5ae21509b2c5')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog-dtl.125' message 'Support for FreeTypePlugin.Arrange for emitCConstantsOn: to retain BytesPerWord as a constant even in not present in the globals, as will be the case if BytesPerWord is magically generated by the code generator rather than being defined as a global. Intended for oscog branch, not required for VMM trunk, which no longer uses BytesPerWord.' id 'a1805ec0-e992-407a-a3db-ed1899c91c5a' date '6 October 2011' time '11:25:15.484 pm' author 'dtl' ancestors ((name 'VMMaker-oscog-dtl.124' message 'Support plugins (e.g FreetypePlugin) that use #bytesPerWord or #baseHeaderSize by adding these selectors to the C translation dictionary.These changes produce no change to generated code for the VM except for the case of ''self bytesPerWord'' which is now translated to the expected ''BytesPerWord'' on oscog.Class variables BytesPerWord and BaseHeaderSize (and others) do not exist in trunk VMMaker. These are now controlled at compile time rather than at C code generation time to support support a single generated code base for 32/64 bit object memory VMs.' id '22506b93-842d-45e3-b57d-42b84f1657ae' date '7 September 2011' time '7:47:23.321 am' author 'dtl' ancestors ((id '9c524903-b0c7-46a8-a37a-5dfda6fcd1f3')) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.139' message 'Replace bogus fix for frameless foo: arg instVar := instVar code genbug (apparent failure to pop spills on frameless return), with correctfix, which is not to flush the top of stack when pop/storing receiverand/or temp vars.  i.e. ssFlushUpThroughReceiverVariable: &ssFlushUpThroughTemporaryVariable: skip the entry at simStackPtr.' id 'c2849383-9768-4948-b9b2-a5c22d482b07' date '18 November 2011' time '9:38:13.812 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.138' message 'Fix frameless foo: arg instVar := instVar code gen bug (failure to popspills on frameless return).Correct receivers of noAssertMethodClassAssociationOf: forsimulation (starting up a Newspeak image).Bring CurrentImageCoInterpreterFacade up to date for simulation.Bring NewCoObjectMemorySimulator up to date for simulation.Make Alien plugins simulate data manipulation calls.Use more hex printing in frame/oop printing.Log time without milliseconds.' id 'f9a63bdf-7bbc-4ae5-9634-ecd6fd814c9d' date '17 November 2011' time '4:02:46.915 pm' author 'eem' ancestors ((id 'fbe64d98-6b1a-4c5b-b3f3-d2b1091406dc')) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.142' message 'Load function pointer early in ThresdedFFIPlugin''s invocationchecking sequence.  This must come early for compatibility with the old FFIPlugin.  Image-level code may assume the functionpointer is loaded eagerly.' id '5b4312fa-5b57-4639-b12d-a45e13e5bbdc' date '1 February 2012' time '5:51:55.863 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.141' message 'Add some coverage analysis to check for unimplemented opcodesin the Cogit.  Implement AndCwR & OrCwR in CogIA32Compiler.' id '8dc3fa63-a227-4a8b-9f98-ba759064d001' date '24 January 2012' time '2:49:19.653 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.140' message 'Stop the backward jump compilation variables being localised tointerpret.  If this happens the unoptimized debug VM can behavevery differently to the optimized VMs.Use definedAsMacro in tryToInlineMethodsIn: instead of accessingproperties directly (i.e. as other senders of definedAsMacro).' id '2487009c-2c13-4609-b89e-77f0e195f433' date '9 December 2011' time '4:15:07.432 pm' author 'eem' ancestors ((id 'c2849383-9768-4948-b9b2-a5c22d482b07')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.148' message 'Make multiple bytecode sets code cope with nilling of method duringinitialization, GC, etc.' id 'bb53aa60-4173-48ed-874b-dc0ff5a48992' date '20 February 2012' time '11:41:41.038 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.147' message 'Fix code egneration for the var: #bytecodeSetSelector declareC: ''#define bytecodeSetSelector 0'' hack hack.Perhaps var: #bytecodeSetSelector declareC: ''const int bytecodeSetSelector = 0'' is better?' id '9ebc4007-56c3-4a6d-8eec-a3de3e08a1fe' date '20 February 2012' time '9:55:07.958 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.146' message 'Support for multiple bytecode sets.  The sign bit of a method''sheader can select an alternative bytecode set.  This is implementedby adding 256 to currentBytecode when dispatching.  The overheadis avoioded for slow machines using macrology.  But in tests on afast MacBook Pro adding the offset can actually be faster becauseother effects dominate dispatch performance on modern machines(e.g. code placement).' id 'b6c14447-ad5d-4a58-8479-63e47d215c0b' date '19 February 2012' time '11:42:38.406 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.145' message 'Nuke obsolete SoundGenerationPlugin primitives.  SGP gets itsprimitives from AbstractSound translatedPrimitives.' id '7f3d6fd8-ce44-45ac-82f8-d0ed70d6f188' date '18 February 2012' time '5:45:00.971 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.144' message 'Make primitiveObjectAtPut fail if used to store other than aSmallInteger into the method header.' id 'bafb8042-095a-42f3-9058-ee7bd133da50' date '16 February 2012' time '2:24:47.042 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.143' message 'Better error message for inability to thread.' id 'a6a2d0c7-ce82-480a-8ba9-58f96628dd82' date '12 February 2012' time '2:49:43.607 pm' author 'eem' ancestors ((id '5b4312fa-5b57-4639-b12d-a45e13e5bbdc')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.154' message 'Fix bad conceptual bug with become on methods.  Unlike full andincremental GC, the reference from a Cog method to its methodobject must not be remapped since they''re two halves of the sameobject.' id '5cbb57c7-0a54-4b7e-848c-1f292759f1fa' date '3 April 2012' time '1:42:00.802 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.153' message 'Fix header file generation for bytecodeSetSelector.Make sure BytesPerOop is initialized in initializeWithOptions:.Add longPrintReferencesTo:.Search for configurations in package extensions to VMMaker.Comment fixes.' id '8ace2909-a8c0-4bcf-8274-55850a71487d' date '31 March 2012' time '1:36:50.547 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.152' message 'Fix tricky context state bug that can cause crashes in the GC.Contextpart>runUntilErrorOrReturnFrom: may pop the last argument.Hence if a frame is married in this state its spouse context won''t haveits last argument slot initialized.  If later the frame is divorced and thearguments are not updated the last argument slot can be left with thisuninitialized slot and ... bang.The sloution is to update arguments as well as stack contents whendivorcing.  This is good also becausde it removes the VM''s assumptionthat method arguments are read-only, and that''s only enforced by theSmalltalk bytecode compiler, not by the bytecode.' id 'd39d62b0-45ca-4621-8f67-e3981bbe1875' date '3 March 2012' time '12:46:18 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.151' message 'Various clean-ups in debugging VM crash (fixes to follow).Provide checkedOkayOop: et al for checking (no fatal error).Correct some receivers in simulation (objectMemory vs coInterpreter).Provide shortPrintFramesInPage:' id '04f1d165-afc5-4f65-8b65-3be15e84b11d' date '3 March 2012' time '12:31:42.725 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.150' message 'Disable filling of the weakRoots table during fullGC.Move the boinds check to the point of insertion.' id 'f2172fad-371a-4789-a4e6-cae3c679bcd2' date '28 February 2012' time '4:38:28.752 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.149' message 'Fix assert failures in mapVMRegisters due to new multiple bytecodeset support.Report remappable oop and weak root table overflows as errors.Make the default VM generation scripts methods.' id '48257b02-cacd-4cc2-b747-c9e6df6e2530' date '28 February 2012' time '10:15:02.63 am' author 'eem' ancestors ((id 'bb53aa60-4173-48ed-874b-dc0ff5a48992')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker-oscog-LucFabresse.124' message 'merge SocketPlugin from VMMaker-dtl.261new primitives for name resolving and ipv6' id '78c0ad24-981f-4353-b333-02ef8210fd0e' date '4 January 2012' time '1:20:45 pm' author 'LucFabresse' ancestors ((id 'f8c5573e-7fd1-4959-91fc-e0c24d967e03')) stepChildren ())) stepChildren ())(name 'VMMaker-oscog-EstebanLorenzano.158' message 'using Eliot''s indentation ' id '82eded98-68af-4c80-a472-4f6de293adcf' date '26 April 2012' time '2:55:07.124 pm' author 'EstebanLorenzano' ancestors ((id 'a0bb1fe3-aac7-084b-8d5b-2252b9cf5b05')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.227' message 'Not so fast...  Its a pointer type, not a struct type.' id '3b0a509e-7c27-4289-9194-29efc7936437' date '30 November 2012' time '3:59:40.915 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.226' message 'typo.' id '55513140-771d-4f43-931c-b61a61832d23' date '30 November 2012' time '3:54:54.206 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.225' message 'Fixes for cog issue 109, base frames and CallPrimitive, and mergewith VMMaker.oscog-lw.224.Cogit:StackToRegisterMappingCogit, cog issue 109.Fix pc mapping for popped folded constants as in, e.g. 1-1.  Need tocheck for annotateUse on popping a stack descriptor.Fix a typo in generateNewspeakRuntime.CoInterpreter:Fix makeBaseFrame: for methods with CallPrimitive that get restarted.e.g. on:do:.  We could make the CallPrimitive bytecode check forbeing at the start of a method, but I have decided, for strictness, tomake executing CallPrimitive an error for the moment.  This meansthat thater we could use it to embed primitive calls in the middle of methods.Refactor inverse pc mapping check and make StackInterpreter''sand CoInterpreters makeBaseFrame: closer.Streamline once again activation sequence to make setting method(actually bytecodeSetSelector) faster and on primitive failure toincrement pc past CallPrimitive before checking for err code store.Make ensureMethodIsCogged: answer the cogged method, again forefficiency.Add tracing of stack overflows.Fix bug in printing of bytecode addresses in long/printOop: onCompiledMethods.Fix bug in printStringOf: so that it prints ... when truncating.Add missing case to isNullExternalPrimitiveCall:.Streamline long/printReferencesTo:.Simulator:Make startInContextSuchThat: return on error, allowing one toproceed past a failure to find a suitable context on startup.Slang:Fix bug in super expansion to avoid renaming arguments.  Onlylocals should be renamed to avoid conflicts.  Arguments are shared.Improve formatting of code for cppIf:ifTrue:.' id '222bea80-06c8-4893-b1e1-d191688f36e6' date '30 November 2012' time '3:00:22.493 pm' author 'eem' ancestors ((name 'VMMaker.oscog-lw.224' message 'my image couldn''t compile TMethod>>removeFinalSelfReturn as it was delivered with commit 220. This small change fixed it for my system.' id 'a51717bf-aca8-3447-b4cc-24b24b75d804' date '30 November 2012' time '10:13:46.707 am' author 'lw' ancestors ((name 'VMMaker.oscog-eem.223' message 'Make sure primitiveIndexOfMethod:header: is inlined as was theolder primitiveIndexOfMethodHeader:.Add more info to logging and remove ceCheckForInterrupts''s falsedependency on interpreter vars.' id '62151b21-ad34-403a-b5a0-63d83c023cdd' date '26 November 2012' time '5:07:25.123 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.222' message '<blush>oops</blush>' id '9255d122-7216-4700-8ead-493416ce0cf6' date '26 November 2012' time '4:04:40.806 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.221' message 'Slang:Write the generator to the transcript to help remember what''s been done.' id '6154db02-9e04-4941-88ca-8201d7713110' date '26 November 2012' time '4:02:55.678 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.220' message 'Slang:Deal with ^self''s when inlining e.g. ADPCMCodec>>nextBits:put:.Don''t coerce results if return type is void.Make CCodeGenerator>>addMethodsForPrimitives: usecompileToTMethodSelector:in: for creating TMethods.Fix a bug in shift generation when casting a type that doesn''t includea variable name.Add support for asUnsignedLong cast (longs being guaranteed tobe large enough to contain a pointer).Make external plugin generation log only when pliugin is generated.Do not elide final ^self if it is explicit.Plugins:Fix some warnings.Cogit:Rename jumpTargetAt: to the more accurate jumpTargetPCAt:.' id '47ddca03-a770-4fe1-8ac8-ca9ecff907d3' date '26 November 2012' time '3:30:47.084 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.219' message 'Use "var := expr. expr ifTrue:" in rewritten instantiation prims toregain inlining of sufficientSpaceToInstantiate:indexableSize:.' id '2f9005ca-b06d-4bfc-ae65-c6be901a999a' date '21 November 2012' time '12:22:55.295 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.218' message 'Revert to Esteban''s CCodeGenerator>>emitCConstantsOn: whichforces def of BytesPerWord in all plugins.  Mine also definedMULTIPLEBYTECODESETS in all plugins which is wrong but thankfullyobsolete.' id 'aea72579-80d2-40c0-9866-80fe8d3488fc' date '20 November 2012' time '4:50:20.433 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.217' message 'Hide extA, extB & bytecodeSetSelector from vanilla VMs, now thatthe code is neater in using cppIf:ifTrue:[ifFalse:].' id '8d1d7d80-fce3-4a84-9f8f-b07f482d81f7' date '20 November 2012' time '3:31:56.014 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.216' message 'Remove obsolete `entry'' from the list of C reserved words.DeflatePlugin has a variable called entry.' id '204e1409-e5aa-4ba1-8cde-50abacf98c78' date '20 November 2012' time '11:29:06.373 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.215' message 'Make instantiation primitives pop arguments, not assume arg count,for Newspeak.  Make them answer error codes, and streamline,avoiding using self success.' id '91c4320a-7127-4488-8997-7aff2e49ee37' date '20 November 2012' time '11:18:46.058 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.214' message 'ThreadedFFIPlugin:Fix bug with not attempting to run GC enough times for COGMTVM tofreeze arguments.Fix bug in ffiCall:ArgArrayOrNil:NumArgs: not checking for an error case.Simulators:Add setBreakCount to other simulators also.Slang:Track variables in nested cppIf:ifTrue:[ifFalse:]''s so that both arms ofnested occurrences aren''t duplicated (code is less confusing).Simplify TMethod>>exitVar:label:.Neaten up spotting duplicated code in cases by avoiding generatingasm labels when printing cases for duplication tests.  Also avoidsincrementing the asm label counters unnecessarily.Comment nodesDo: implementations to be bottom-up.' id '4bf85ad2-0e8f-4dc1-8fa1-7d6369f5fb10' date '19 November 2012' time '5:54:17.791 pm' author 'eem' ancestors ((name 'VMMaker.oscog-lw.213' message 'Merged back in the ''set break count'' changeIn my image, there is no method #setBreakCount, so I used the block version also used eg. one line below.' id 'efc971b1-5d38-f24e-ba68-7e43ca9201c8' date '19 November 2012' time '10:38:01.443 am' author 'lw' ancestors ((name 'VMMaker.oscog-eem.212' message 'Complete multiple bytecode set support plus NewsqueakV4 bytecode set.Main change apart from bytecode set is to move the primitive index from a CompiledMethod''s header into a callPrimitive: bytecode, and use the bits to expand the num literals field to 16 bits, adding a "has primitive" field to the header.VMClass:Change generateNewspeakCogVM & generateNewspeakStackVM to generate VMs with MUTLIPLEBYTECODESETS.StackInterpreter/CoInterpreterAdd bytecode table for NewspeakV4. Rename shortConditionalJump to shortConditionalJumpFalse.  Rename bytecodePrimBlockCopy to bytecodePrimSpecialSelector24.  Make sure non-inlined special selector bytecodes (e.g. bytecodePrimDo) no longer assume argumentCount.Refactor primitiveIndexOfMethodHeader: to primitiveIndexOfMethod:header: to allow extraction of prim index from callBrimitve: bytecode.  Likewise callers of primitiveIndexOfMethodHeader:, e.g. canContextSwitchIfActivating: => canContextSwitchIfActivating:header:.Move fetchNextBytecode after setMethod: in commonCallerReturn so that bytecodeSetSelector is correct on fetch.Abstract out block creation from block creation bytecodesAbstract out detecting the prim err code store in method activation routines.Abstract out backwards branch event checking from backward branch bytecodesConsolidate the simulated bytecode implementations that override out-of-order fetchNextBytecode using cCode:inSmalltalk: and delete the simulated ones.Add process switched from to process switch trace.Add bytecode address and header print to longPrintOop: (and bytecopde address to printOop:) for compiled method.Fix printing oop twice for invalid oops in printOop:.Change a few ~~''s to ~=''s.Fix some receivers self => objectMemory.Change some users of BytesPerWord to BytesPerOop (e.g. internalPop:).Use Objectmemory>>booleanObjectOf: where aprpopriate.Add ImmediateTagMask & SmallIntegerShift and initialize them in initializeImmediates.  Use for testing the V4 "has primitive" header flag.Implement Newsqueak/Newspeak absent receiver sends in the StackInterpreter (but not yet in the KIT) in terms of shuffleArgumentsAndStoreAbsentReceiver:.Add index 65 to primitiveVMParameter to answer a boolean indicating if the VM supports MUTLIPLEBYTECODESETS and hence understands the new alternative CompiledMethod header format.  If the VM answers nil it does not understand the new format.  If i answers false it does, but does not implement an alternate bytecode set.SimulatorProvide startInContextSuchThat: to allow avoidance of as-yet-untimulateable Newspeak image startup.Junk old symbolic method printing and use VMCompiledMethodProxy to defer on image''s symbolic printing.Add RelativeDetailedInstructionPrinter to allow comparing stack depths in methods with different bytecode sets. Refactor stack depth checking and add it to ceCheckForInterruptsFix allObjectsDo: to use freeStart as limit, not endOfMemory.Move promptHex: up to VMClass and fix it for negative numbers.Provide a set break block... dialog.Fix couldBeFramePointer: for StackInterpreter (negative stack pointers).Add ioLocalMicroseconds for Newspeak simulation.Cogit:Add NewsqueakV4 bytecode generators.Add extension bytecode handling to all relevant scan, compilation and map traversal routines.  Change signature of span and branch distance routines to take number of extensions.  Make byte0 include bytecodeSetOffset.Make genSpecialSelectorComparison cope with extensions on following conditional branch.Change block descriptor format (ceClosureCopyDescriptor: argument) to increase range of num args and numCopied with V4 bytecode.Eliminate generation of unnecessary long store code for prim err code, given that prologue already stores it.Abstract out block creation bytecode size, push nil detection and push nil bytecode size, and firstSpecialSelectorBytecodeOffset.Add the bytecode table initializers for NewsqueakV4 and clean-up all bytecode table initializers and generatorTableFrom:.Eliminate isBackwardBranch and isBranch from CogBytecodeDescriptor and use spanFunction instead.Move initializations in initializeMiscConstantsWith: around so that MULTIPLEBYTECODESETS et al are not zeroed when initializing the JIT after initializing the CoInterpreter.Fix pc mapping tests so they''re more efficient for in-image methods.  Fix several bugs, add new methods and simplify CurrentImageCoInterpreterFacade for multiple bytecode sets. Make tests check bc & mc selectors match.Rename traceLinkedSends to more general traceFlags.Add options: to in-image cog:selector: to allow testing MULTIPLEBYTECODESETS jitting.In disassembly, print bytecode pc next to annotation, and include selector in mapRePluginEliminate some iuses of cCode: inSmalltalk: which were disabling inlining.Slang:Change sharedCodeNamed:inCase: so that one can supply a bytecode rouitne name instead of a case index, e.g. sharedCodeNamed: ''commonReturn'' inCase: 120 => sharedCodeNamed: ''commonReturn'' inCase: #returnReceiver.Make bytecode switch generation scan for duplicate cases to avoid duplication in MULTIPLEBYTECODESET form.  Do so by refactoring bindVariableUsesIn: to bindVariableUsesIn:andConstantFoldIf:in:.  Constant-fold so that currentBytecode bitAnd: mask looks the same even if currentBytecode differers by multiples of mask + 1.Emit code at end of case as an expression.  Include goto nodes in this.Make gnuifier insert an assert at start of interpret that checks that the breakTable is the rigth size for MULTIPLEBYTECODESETS.Improve formatting of comments in TParseNode, etc.Fix bug with while creation that changed code generated if generated a second time.  This made it easier for switch generation to detect shared cases.Fix inlining of pointerForOop: et al by adding them to kernel: selectors.  Eliminate warning in allocateMemory:minimum:imageFile:headerSize: using pointerForOop:.  Use allocateMemory:minimum:imageFile:headerSize: in StackInterpreter>readImageFromFile:HeapSize:StartingAt:.Add breakSrc/DestInlineSelector for better inlining debugging.' id '845ad894-9bd6-460c-a858-0aaf8f01f4a4' date '18 November 2012' time '4:52:01.673 pm' author 'eem' ancestors ((name 'VMMaker.oscog-lw.211' message 'fixed a bug in the VMSimulator:breakCount can now be used' id 'bd23351a-d76f-984a-8c13-4a102aedb17d' date '17 November 2012' time '11:08:11.256 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.210' message 'because of the new call implementation, adapt #isCallPreceedingReturnPC' id '825aedb9-4486-c84d-bedd-87b09fa9fb62' date '17 November 2012' time '10:09:25.206 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.209' message 'included the changed call implementation:instead of using BL directly, push the jump back address first, to comply with CoInterpreter expectations' id 'f46008f0-431e-8b4d-8d3e-5a4d7a1e5089' date '17 November 2012' time '7:16:57.599 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.210' message 'fixed problem with wrong jumping offset:	when including a push instruction, we also need to compute the offset differently' id '8e9623e2-6a1a-b143-b93f-9198b43cafd3' date '17 November 2012' time '6:52:45.272 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.209' message 'Branch of VMMaker including LR push changes' id 'dac53fec-b0f2-7743-9ca5-0c5a645e821a' date '17 November 2012' time '5:55:52.612 pm' author 'lw' ancestors ((name 'VMMaker.oscog-eem.208' message 'Cogit: Call a spade a spade.  Rename bytecodePointer to bytecodePC.' id '97c8f02b-309a-4c65-80eb-644a640ca60d' date '2 November 2012' time '10:53:23.296 am' author 'eem' ancestors ((name 'VMMaker.oscog-lw.207' message '- added a class comment to the ARMCompiler- added CArg0Reg-CArg3Reg register numbers to ARMCompiler class.- moved Temp, Class, Result and RISCTempReg from r0-r3 to r7-r10, because then we don''t have to save them when calling back to the Interpreter (they are callee saved). Subsequently, we needed to update the tests.- Reimplemented genPassConst and genPassReg to reflect the correct ARM ABI, and not IA32 ABI.' id '052f916f-09bd-754b-80f8-2473b0654afb' date '24 August 2012' time '8:15:36.393 pm' author 'lw' ancestors ((name 'VMMaker.oscog-eem.206' message 'Rename compileProlog to compileAbort.' id '01f091ac-8e0a-4e7c-86ff-ba89dd10fafd' date '22 August 2012' time '10:46:10.191 am' author 'eem' ancestors ((name 'VMMaker.oscog-lw.205' message 'depending on the configuration of the disassembler, ldmfd or push is returned.' id 'db76622e-2954-de47-b65e-026a6286a843' date '18 August 2012' time '2:31:19.265 pm' author 'lw' ancestors ((name 'VMMaker.oscog-eem.204' message 'Integrate primitiveUtcWithOffset and add David Lewis'' implementationof 64-bit usec prims to Interpreter (since they conflict with thosein InterpreterPrimitives).' id 'c98d555c-fbda-404f-9ebe-0a4e0c6dc800' date '16 August 2012' time '12:53:08.745 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.203' message 'Emit comments on blocks (TStmtList).Add another enumerator for TParseNode.' id '7f3eefb4-e338-4309-9ea9-4f45ab13f03e' date '14 August 2012' time '7:12:41.248 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.202' message 'Eliminate some warnings in cointerp using gcc.Fix the Gnuifier (register decls need to include the register keyword).Expand cppIf: at translation time if the xpression is a variable in theoptions dictionary, to cut down on e.g. noise ofMULTIPLEBYTECODESETS expansion of fetchNextBytecode..' id '3222e5fb-4b4b-4f71-b66a-10728b2fdf3d' date '14 August 2012' time '4:31:58.12 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.201' message 'Make sure youngReferrersList has room for every method sincebecome/cache implicit receiver can cause any method to gain ayoung reference.  Do so by counting methods in the zone.Refactor type name manipulation to moveextractTypeFor:fromDeclaration: from TMethod to CCodeGenerator.Rename CogMethodZone>>zoneLimit to freeStart.Fix assert in interpretMethodFromMachineCode.Fix return type of jumpTargetAddress & longJumpTargetAddress.Fix simulation of rewritePrimInvocationIn:.Nuke unused methodBytesFreedSinceLastCompaction method.' id '56cdd078-6771-401a-8bed-68402a0e283d' date '13 August 2012' time '6:30:31.048 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.200' message 'Fix another ^self slip uncovered by VMMaker.oscog-eem.196 fix.' id '5a8e1270-adca-4f75-9712-0c0deda989d2' date '10 August 2012' time '4:47:24.263 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.199' message 'Rename parameter to eliminate translation-time warning.' id '1b0cff66-2042-49a7-ae74-5fa119256732' date '10 August 2012' time '2:09:02.546 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.198' message 'Make overflowing the youngReferrers list a hard error (appears tohappen quite often in Newspeak code).Clarify remapNSIfObjectRef:pc:hasYoung:.' id '03c8603b-bb83-42f6-8e04-a161f808aace' date '10 August 2012' time '1:58:46.571 pm' author 'eem' ancestors ((name 'VMMaker.oscog-lw.197' message 'Fix of #concretizeConditionalJumpLong:.Refactoring of computeMaximumSize, with the goal to be translatable to C.' id '083108ce-456b-f845-be3e-9178a073a073' date '9 August 2012' time '9:20:25.228 pm' author 'lw' ancestors ((name 'VMMaker.oscog-eem.196' message 'Fix generation of CogAbstractInstruction typedefs now there aremultiple concrete subclasses.Eliminate a few warnings by setting return type of startOfMemory.Fix bug in inliner with leaf methods.  Fix ^self slip uncovered by fix.Elimnate unnecessary blocks around first args of cppIf:ifTrue:...' id '01753d70-0311-46ec-a06b-a8be6d8697fb' date '8 August 2012' time '2:36:30.063 pm' author 'eem' ancestors ((name 'VMMaker.oscog-lw.195' message 'Changed runCmpRdRd to allow compiler without FP support to skip this abstract test.Fixed two bugs in connection with conditional jumps, which make the three abstract conditional jump tests green.' id '688e3bfe-33cb-a74f-a6df-a41bee506615' date '8 August 2012' time '2:41:47.364 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.194' message 'Results of a nice pair programming session with Eliot.- Changed nopsFrom:To: to padIfPossibleWithNopsFrom:To:, because on arm, a nop is 4 byte long. Therefore, on IA32, this is padded with nop, on ARM, all 4byte chunks are filled with nop, the rest is zero-padded.- Changed the addressSpaceMask, because ARM (without Thumb) can only jump to 4-divisible addresses.- Refactored printStateOn: to accomodate for register names which are not part of RTLOpcodes- Fixed bugs in the jump-construction in ARM. When you want to reset the state, go back as far as #cog:selector:. There, the state is reset and you can step into the generation, if needed.' id 'c7f87bb5-3022-db47-9d6b-76fa8f5b2d13' date '7 August 2012' time '8:54:48.906 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.193' message '- added some more concretize methods, namely some move methods with multiplication (e.g. MoveRXwrR), and LoadEffectiveAddressMwrR- added tests for PrefetchAw, MoveCwR and PushR. MoveCwR is used in half the opcodes, whenever there is a word-constant. Therefore testing was important.- changed the preamble of Call, because for call, there should not be sane address checks.' id '930a01b6-2f8b-9b4e-b8c2-a1357af8276c' date '1 August 2012' time '2:00:23.969 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.192' message 'Implemented all the methods used when initializing the Simulator for any of the Stack organizations. Now the debugging begins.' id '78ce4bd7-8218-dc4e-9469-0c6ac53a8ced' date '31 July 2012' time '5:24:08.957 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.191' message '- added the shift opcodes- added AddCqR and SubCqR, which test for negative immediates, which allows the compiler to exchange Add r0, r0, #-2 to Sub r0, r0, #2 and thus saves 4 instructions, 16 byte- changed all the remaining AbstractInstructionTests test cases to allow multiple single stepping- added NegateR test as another place of documentation for the NegateR opcode (twos complement, not ones)- extracted the offset computation which is the same in all the different concretizeConditionalJump methods. Unfortunately, the computation includes a constant, which might get the address to overflow. In the image, this would result in a large integer, while in C, this would result in a negative number. Therefore, the methods signature is weird (CogAbstractInstruction>>computeJumpTargetOffsetPlus:).' id '646aea3c-a1b4-ab40-a9e6-46861b3c0aa2' date '31 July 2012' time '3:46:30.782 pm' author 'lw' ancestors ((name 'VMMaker.oscog-eem.190' message 'Document RTL opcode condition code assumptions.Remove obsolete genWriteCResultIntoReg:.Rewrite runAddCqR: to eliminate numberOfStepsIn:.' id '9184763d-c605-432b-b73e-8a3029eca4c8' date '25 July 2012' time '11:26:29.951999999 am' author 'eem' ancestors ((name 'VMMaker.oscog-lw.189' message 'Refactored all the data operations implemented so far and unified them. Subsequently added all the misssing data-operations (except for MUL, because that has a special format).Refactored the different load word operations to ARMCompiler>>at:moveCw:intoR:. Operations which can be implemented using the lowest byte of that word as offset may just write those numbers twice, or rather change just the upper bits of the last instruction, which specify the actual instruction.Added a test for the Add operation and made the AbstractInstructionTest>>testRunAddCqR &AbstractInstructionTest>>testRunAddRR green.Added "TODO" comments to those places in my code, where I am not sure about using extract method refactoring.' id 'b89b77ba-e03f-fb45-bb5f-ca55b387ee00' date '25 July 2012' time '7:14:32.722 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.188' message '- Added STMFD and LDMFD opcodes to the ARMCompiler. FD refers to Full Decrementing stack, which should be the normal one.- added class variables for the conditional codes 0-14. They are used with the conditional jumps- introduced c:t:o:s: in an attempt to help illustrating the internal structure of ARM-opcodes and step (a small step) away from long constants. The problem is, that the type is 3 bit, therefore it''s not as good as I hoped for. But still...- added genSaveRegisters, where is genLoadRegisters?' id '0713a475-a782-614e-ab93-464cf9b1da16' date '25 July 2012' time '12:25:15.718 am' author 'lw' ancestors ((name 'VMMaker.oscog-eem.187' message 'Allow the opts dictionary to select the CogAbstractCompiler class.Use cCode:inSmalltalk: to collapse the integerObjectOf: &isIntegerValue: implementations down to a few.' id 'c8ef3fdf-8bac-484b-95c4-7234902bc88f' date '18 July 2012' time '5:34:45.179 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.186' message 'Replace CogAbstractInstruction''s NumberOfRegisters andMachineCodeSize class vars with accessors.  Provide commentedsubclass responsibilities for these and genSaveRegisters.Eliminate IA32-specifics from CogARMCompiler>>dispatchConcretize.Add a rump CogARMCompiler>>genSaveRegisters for Lars to implement.' id '39e5f171-8ca8-4a8b-9430-bd393687a156' date '17 July 2012' time '3:22:27.571 pm' author 'eem' ancestors ((name 'VMMaker.oscog-lw.185' message 'Added multiple functions which are called when starting the simulator. The simulator still does require more methods.Pulled up genAlignCStackSavingRegisters:numArgs:wordAlignment:,because the ARMCompiler implementation would have been the same except for the constant. Added that constant as NumberOfRegisters to AbstractInstruction.' id '6f27e321-2227-2540-8b08-0e6a2cea3a99' date '17 July 2012' time '10:38:20.729 pm' author 'lw' ancestors ((name 'VMMaker.oscog-eem.184' message 'Parameterize Cogit creation with the ISA to use for Lars Wassermann''sARM work (!!!!).Add some ill-considered fluff about instance-specific behaviours inthe new object representation.' id 'dc778ede-e64d-4e6c-8d51-53a93e5f80de' date '11 July 2012' time '10:59:28.555 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.183' message 'Fix the simulated memcpy which used strncmp and hence stopped ata null byte.' id 'b044afd7-a1c6-4f20-ae81-96ceffa744e7' date '4 July 2012' time '6:25:44.228 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.182' message 'Make arrayInitializerCalled:for:type: create literal string initializers,not arrays of characters.Convert embedded carriage returns in string literals into \n''s.' id '57f7399d-992c-49ef-8f0d-258d1b70027c' date '29 June 2012' time '6:09:22.966 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.181' message 'Check for variable name clashes with C reserved words.Comment touch:' id '37760187-3a5c-4411-9352-754a4782fa29' date '29 June 2012' time '1:05:25.822 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.180' message 'Use workaround for broken Squeak4.3 progress exception whengenerating VM source.' id 'd742fc84-467e-47f9-be9e-4ba2dfa74d88' date '28 June 2012' time '9:04:19.784 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.179' message 'Fix str:n:cmp: implementation for short strings' id '1d88b152-8a22-4ca4-a96d-06022751a128' date '27 June 2012' time '8:23:19.924 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.178' message 'Fix receiver if isBytes: in printOopShortInner:.Include inst var offset in longPrintOop:.Make doesNotUnderstand: redirection warnings more informative.' id '8a31722d-f528-4495-bcf0-33544f9c93af' date '27 June 2012' time '8:14:54.544 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.177' message 'Add internalStackValue:put:.Comment the purpose of the prim response routines.' id '4d05e29b-763c-451f-9354-f5f0cef201a1' date '27 June 2012' time '12:25:12.409 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.176' message 'Some nicer syntactic sugar for determinign instances of Array ByteString Character and Float.' id '6bd2ee1f-4fbf-4172-8f57-1b7b5d7aa05c' date '26 June 2012' time '3:33:34.126 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.175' message 'Warn about api methods being removed.Move stringForCString: up to StackInterpreter.' id 'a4adf9bf-b651-46c9-babd-bcc27b62d599' date '26 June 2012' time '1:02:32.636 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.174' message 'Comment some return implementations.Make the array initializer creator non-static (clients can prepend"static" if required).Make frame flags printing more concise.' id '28bc956b-53cc-4f7c-a763-09fb8a576071' date '26 June 2012' time '12:28:31.674 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.173' message 'Fix simulator dev MNUs for unimplemented methods.' id 'abe6a6dd-40dd-4e34-98b2-ae778d5f7e03' date '26 June 2012' time '9:40:33.301 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.172' message 'Finish moving add of bytecodeSetSelector to fetchNextBytecode frominterpret.  Various simulation print/debug routines need to changeor revert.' id 'c6173744-0587-45bd-9e94-4f7996c90e47' date '26 June 2012' time '9:27:13.912 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.171' message 'Fix super expansions once again.  Eliding the final return is ok, butit means ReturnNode needs to add it back in.  Further, AssignmentNodewould need to do something special for super expansions withreturns at other than the last statement, so raise an error if seen.Move add of bytecodeSetSelector to fetchNextBytecode frominterpret so that e.g. dispatch in sqGnu.h doesn''t have to duplicateoffset by bytecodeSetSelector.' id 'c7fe70ad-ea30-4ba0-9645-a4060894480e' date '25 June 2012' time '7:52:11.789 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.170' message 'Fix super expansions of the form e.g.	ok := super foo.	...	^okParameterise primitive table generastion (for multiple primitive tables).Fix a send of remapOop:in: in the LargeIntegersPlugin.' id 'e776e9dc-4b1c-4857-b356-91910024d9c8' date '25 June 2012' time '2:10:13.946 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.169' message 'Add support for in-line literal array constants (currently ByteArrayonly).  gen code of form	 { static type aLiteralArray = { .... };		var = aLiteralArray;	 };for e.g.	var = self cCoerce: #[...] to: ''unsigned char *''Add a cutesy development-time MNU for redirecting to cogitand objectMemory if in a doit only.' id '932f0574-1b33-407c-8eb7-130fac92ab8d' date '24 June 2012' time '4:41:55.493 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.168' message 'Rename metaclassSizeBytes to metaclassSizeBits.Nuke unused shortPrintRelative:.' id '9735eb86-c5f3-405e-a4e2-0788c5eca335' date '24 June 2012' time '12:11:04.735 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.167' message 'Fix but in changeClassFrom:to: if receiver is a compact classinstance with a large header.Restore ye olde object printing style.Use bitClear: instead of wrong-for-64-bits bitInvert32 to clearseveral bit fields.' id '89fa3b26-2b31-41ee-861c-68062ff3e443' date '23 June 2012' time '7:36:44.881 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.166' message 'Nuke bogus strlen: siumulations.  The one in VMClass is the true one.' id '3cf5bdaf-bad3-46dd-9836-33e806128aa1' date '23 June 2012' time '5:15:11.135 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.165' message 'Nuke tempCountOfMethodHeader: in favour of temporaryCountOfMethodHeader:.Refactor frame marriage to allow subclasses to specify saving of temps.' id '4e4f16aa-51e6-4806-8764-613b5d38d7df' date '23 June 2012' time '2:18:33.789 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.164' message 'Add shortPrintOop: to printReferencesTo:.  Fix cascade  transformationfor same.  Add addrtess offset to bytecode printing in printOop.' id '4d03e08d-186b-4360-8d3b-8d14d8c7db82' date '23 June 2012' time '11:23:07.021 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.163' message 'Fix warning due to wakeHighestPriority changes.Add abstractions for setting frame context and frame has context flag.Set all unused StackInterpreter frame offsets to #undefined in CoInterpreter.Fix asking to close the VM window twice.Ask before nuking the transcript.' id '886d6e40-a3f6-4483-bdfc-f71a846f0737' date '21 June 2012' time '1:41:16.462 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.162' message 'Make wakeHighestPriority filter-out zombie processes (to fixNewspeak/Glue crash).Describe a heap walking scheme for the new object representation.Fix typos and var name/method clashes.' id '36d9eb65-b5ba-4cf1-bb28-a02cb0d35e49' date '21 June 2012' time '10:38:46.248 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.161' message 'Integrate ipv6 socket prims.  Fix a typo.' id 'd9d960b4-9f66-43a2-9d90-4fb58d541adc' date '7 June 2012' time '12:13:51.191 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.160' message 'Avoid assigning to a block argument in inlineCaseStatement-BranchesIn:localizingVars:Fix a comment.' id 'c9667f5a-0f6f-464a-99a7-d4ef8e7821b0' date '5 May 2012' time '3:33:23.184 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.159' message 'Plugins:Fix ThreadedFFIPlugin''s preambleCCode for Pharo''s mingw config.Merge fix for JPEGReadWriter2Plugin (http://bugs.squeak.org/view.php?id=7691)Merge with VMMaker version s of plugins	JPEGReaderPlugin,	KlattSynthesizerPlugin	Matrix2x3Plugin	Mpeg3Plugin' id 'cbf7f95a-6fe2-4578-898e-47afb8524be4' date '2 May 2012' time '11:42:18.255 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.158' message 'Describe 60-bit immediate float format in CogMemoryManager.Decompose methodUsesAlternateBytecodeSet: into something thattakes a methodHeader.Slang:more robust test inliningSimulator:Replace some references to Transcript with coInterpreter transcript.' id '43778e3f-147b-4e94-aed1-1dbe8dbd58fa' date '21 April 2012' time '1:27:45.662 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.157' message 'Stack/CoInterpreter/Cogit:Implement proper bounds checking for byte access to compiledmethods.  Raise errors for accesses outside initialPC to size.Simulator:Nuke an old breakpojnt method in the simulator.' id '9a11acbe-4a62-43ce-81de-934f351598cc' date '17 April 2012' time '11:08:52.202 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.156' message 'CoInterpreter:Provide a thorough flush primitive for CompiledMethods that discardsall machine code and makes sure that any contexts using the methodhave bytecode pcs.  Primitive #215 (same as 116 in the Stack VM).This is much slower than 116 (flushCache) since it has to enumerateover all heap contexts.Provide an xray primitive for CompiledMethod that answers if amethod has machine code, and if so if it''s machine code is frameless,and/or refers to a young object.  No primitive number.  Used to testthe above.Make printOopShort: print Association keys.  Useful forlongPrintOop:, and hence printReferencesTo: etc.Nuke theFP ~= framePointer assert in externalDivorceFrame:andContext: since both clients are careful enough to either avoidor deal with this case.Slang:Avoid annoying objectRepresentation already removed warnings ongeneration.Reformat some Slang code in trying to understand mis-inliningof [inlinedSend] whileTrue.  [I know, IIABDFI, but sometmes one has	to format to read and comprehend].Collapse generateWhileForeverBreakFalse/TrueLoop:on:indent:methods  to one taking a parameter.' id 'f03602f8-cb8a-4ae7-9a2e-921b5b77cf01' date '12 April 2012' time '6:35:41.665 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.155' message 'Refactor bytecode table initialization in the Cogits to mimic initializationin the Stack/CoInterpreter.  Refactor Cogit class initialization so thatonly the concrete class need be initialized.' id '09dcf403-f832-4bee-9665-6a3b9dfdeb11' date '6 April 2012' time '3:59:00.584 pm' author 'eem' ancestors ((id '5cbb57c7-0a54-4b7e-848c-1f292759f1fa')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.255' message '[New[Co]]ObjectMemory:Fix freeing of objects for becomeForward:.  Remove freed youngroots from the rootsTable.  Filter freed objects pointet to from theextraRootsTable (because these locations can change it is wrongto remove entries from the extraRootsTable).Abstract away use of the RootBit into isYoungRoot[Header]:StackToRegisterMappingCogit:Fix marshalling of absent receiver sends.  The items beneath thearguments (and to-be-pushed receiver) must be spilled beforethe receiver is pushed.Improve code quality for numArgs > numRegArgs sends whenreceiver is not a spill and there are no uses of ReceiverResultRegamongst args.  e.g. now avoids loading ReceiverResultReg from stackin code such as 1 with: 2 with: 3 .' id '51e53ec1-8caf-41f6-9293-1088ef4b82d8' date '12 January 2013' time '6:28:41.398 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.254' message 'Fix becomeForward: so that objects whose references are deleted arefreed and can no longer be resurrected via allObjects or allInstances.Make primitiveIdentityHash pop all arguments, for Newspeak VMMirrors.Simulator:Fix stack depth assert checking for NewsqueakV4 methods.  Absentreceiver sends have a different stack delta to normal sends.Make disassembly display and skip oops in implicit receiver caches.Fix off-by-one limit check bug in disassembleMethodFor:.Provide a filter on perform: to allow the simulator to avoid runningunsimulateable primitives/start-up code such asObjectiveCAlien class>>startUp:.Fix detauledSymbolicMethod: for Newspeak methods containingabsent receiver sends.Make priomptHex: accept C hex constants.' id '74e6a299-691e-4f7d-986c-1a7d3d0ec02c' date '11 January 2013' time '7:05:37.389 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.253' message 'Implement absent receiver dynamic super send bytecode in the JIT.This was an oversight from implementing absent receiver send.Refactor the dynamic super send code to accomodate the new send.' id '4a3ac3fb-d367-478b-ad95-ad3bb8b6216f' date '10 January 2013' time '3:26:03.577 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.252' message 'Issue 117.  Fix primitiveRemLargeIntegers.The result should be negated iff receiver negative.' id '50d6c392-d32d-49a5-9251-32ad9c299572' date '8 January 2013' time '6:08:27.042 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.251' message 'Give primitiveRemLargeIntegers primitive # 20.' id 'beb7dbb2-ac3b-4628-8fca-330de6592c00' date '7 January 2013' time '2:33:11.56 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.250' message 'Improve absent receiver send marshalling to only shuffled currentlyspilled args.Revert rush-of-blood-to-the-head change to ceImplicitReceivertrampoline, but use Arg1Reg rather than Arg0Reg.Fix (old) bug in ssAllocateRequiredRegMask:upThrough:that would flush entire stack if allocating any register.' id 'e0de5572-7682-4c5e-b5a0-ca2f32cf0c81' date '7 January 2013' time '1:30:28.165 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.249' message 'Implement absent receiver sends in the Cogits.Refactor pushImplicitReceiver into genGetImplicitReceiverFor: andclients and use genGetImplicitReceiverFor: for absent receiver sends.No longer use Arg0Reg in ceImplicitReceiverTrampoline.Fix CurrentImageCoInterpreterFacade for Newspeak methods.Fix initialization of COGMTVM for simulation.' id 'f55f4646-2800-4e27-b885-c25b0eddd43e' date '7 January 2013' time '9:40:44.287 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.248' message 'Fix snafu in revised build info generation.' id '325b96ad-3c25-438e-af36-04a93839f195' date '3 January 2013' time '1:48:51.874 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.247' message 'Integrate directed shift changes from cog issue 111 that affect theCoInterpreter and Cogit.Refactor Monticello build info so that plugin classes can override.Make the trnalsated primitive plugins include info from theirprimitive supplying classes.' id '16558e1b-de42-458d-a01d-6f2230d165b7' date '3 January 2013' time '1:34:32.442 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.246' message 'Integrate changes from VMMaker-dtl.293 which use >> & << shiftsin place of slower bitShift: code in plugins.' id '1e176c89-522a-4632-ba15-e12f800d1022' date '2 January 2013' time '5:53:50.542 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.245' message 'Add width failure cases to BMPReadWriterPlugin read & write 24Bmpprims.Use ClassByteString var in preference to ClassString var.' id '3b27b42f-4c48-40b7-8261-2f05e76d11f2' date '2 January 2013' time '5:44:32.298 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.244' message 'Restore Cogit wanting COGMTVM to be determined oncommand line.  Probably broke in VMMaker.oscog-eem.218' id 'c9625bb4-bc55-4b75-942c-084c12ea9648' date '2 January 2013' time '12:03:44.839 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.243' message 'Integrate issue 112.  Add ULL suffix to > 32 bit integer literals.Add a test for integer literal generation (doesn''t yet test negativevalues).' id '72a4a123-e10e-4d32-90dd-0b74014f02d3' date '2 January 2013' time '11:34:09.193 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.242' message 'Cog issue 115.  Fix FFIPlugin/ThreadedFFIPlugin unsignedShortAt:' id '239a00e7-4aed-4e7b-b564-0088b6af5dd0' date '2 January 2013' time '10:34:42.111 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.241' message 'Correct the const declarations in the Cogit.Comment the MULTIPLE_BYTECODE_SETS vm parameter #65.' id '8ddbe9c0-6584-4c40-82c8-8e48a1dcf02a' date '20 December 2012' time '4:32:52.325 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.240' message 'Back out of the wrong-headed attempt to give compact class indicesto long header objects in changeClassOf:to:, and comment why(markAndTrace: reuses header type bits and depends on compactclass and size fields to reconstruct type bits after traverse).Consequently fix isClassOfNonImm:equalTo:compactClassIndex: soit will still accept long-header objects that are insances of compactclasses but don''t have a compact class index.Clean-up accesses to the compactClassesArray so that they gothrough the compactClassAt: where appropriate.Use the short-hand class determinators such as isInstanceOfClassFloat:in place of the long-winded is:instanceOf:compactClassIndex:.Move the determinators to InterpreterPrimitives where they arebetter-placed (but should eventually end up in Objectmemory andsiblings).Remove obsolete use of cCode: ''magnitude >> 32'' in the integerconversion routines signed64BitIntegerFor: et al now that Slanggenerates the correct cases for right-shift.Eliminate the compactClassTable accessor.  CompactClasses and splOb:are both in scope in CogObjectRepresentationForSqueakV3.Override sweepPhase in NewObjectMemory and hence eliminateinitializeFreeBlocksPreSweep.Fix off-by-one error in okayOop:.Make longPrintOop: print header type info.Make allAccessibleObjectsOk answer a result.Don''t inline loadInitialContext for gdb breakpointing convenience.Declare some constant variables as const in the Cogit.Simulator:Fix several sends to be to objectMemory, not self.Make the storePointer: overrides bounds-check index.Remove several obsolete overrides in StackInterpreter simulatorsof methods now moved to ObjectMemory and subclasses.Add printCallStackOf: menu access.Add print of freeStart to GC overrides.Add a printMemoryFrom:to:.Implement vmProxyMajor/MinorVersion so that simulation can stillload plugins in new plugin interpreterProxy api access regime.' id 'f72e2cd1-8b0e-45af-acd7-06ba9bbc2a50' date '20 December 2012' time '12:21:03.98 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.239' message 'Third time lucky.  Fix bug in changeClass:from: so that if receiver haslong header and class is compact, receiver still gets compact classfield set, not cleared.  No matter what header an instance has, if itsclass is compact it should have the compact class index set.' id '3087e16d-bf3c-4fdc-b2ec-14791deff66f' date '18 December 2012' time '10:35:18.772 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.238' message 'Restore ThreadedFFIPlugin wanting COGMTVM to be determined oncommand line.  Probably broke in VMMaker.oscog-eem.218' id 'a3d10eab-6079-4c91-99f6-3dcf58d1446f' date '17 December 2012' time '11:33:38.555 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.237' message 'Once again fix bug in changeClass:from: so that if receiver has longheader and class is compact, receiver still gets compact class fieldset, not cleared.  No matter what header an instance has, if its classis compact it should have the compact class index set.' id '208e5eb6-429e-447b-9caa-dbf379192cf8' date '17 December 2012' time '10:38:49.275 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.236' message 'Fix bug in changeClass:from: so that if receiver has long header andclass is compact, receiver still gets compact class field set, notcleared.  No matter what header an instance has, if its class iscompact it should have the compact class index set.' id '009ced90-5c50-461c-8550-f7eca297fa09' date '17 December 2012' time '10:16:49.557 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.235' message 'Fix doubling of include file declarations in plugins (now plugincode is generated an exctra time to extract usedf functions wemust avoid adding headers twice in emitCHeaderOn:).Provide a hook, InterpreterPlugin class>>exportBuildInfoOrNil, forbuild info comments as in the UnixOSProcessPlugin.Make constant generation look for method var and return types soas not to nuke types introduced as #defines viaaddConstantForBinding: (again a la UnixOSProcessPlugin).EMit constants more carefully, not converting defs that contain acomment into C literals, again so that UnixOSProcessPlugin candeclare FILEHANDLETYPE et al.Add all headers through addHeaderFile[First]: so that warnings canbe issued aboud multiple defs etc.Fix MNU handler for missing NullStream protocol as per trunk4.3.Nuke a duplicate include in VMProfileMacSupportPlugin.' id '954df856-3f83-498c-9735-6cd3777ba9c7' date '14 December 2012' time '12:40:24.977 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.234' message 'Fix semicolons appearing after the #endif on expanding expandDereferenceInterpreterProxyFunctionTable' id '66acafd1-cad0-4f20-b786-ab8f48201d82' date '13 December 2012' time '3:58:19.013 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.233' message 'Change translation of symbols so that they are translated directlyand one does not need to use #asSymbol.  This for e.g.self cppIf: #''SA_ONSTACK'' defined ifTrue: ...The relevant changes to the code generator are	BlockNode>>isPotentialCCaseLabel	CCodeGenerator>>cFunctionNameFor:	CCodeGenerator>>cLiteralFor:	CCodeGenerator>>cLiteralFor:name:	CCodeGenerator>>generateFlag:on:indent:	CCodeGenerator>>initializeCTranslationDictionary	TConstantNode>>printOn:level:	TParseNode>>allCallswith this convenience method added:	Symbol>>definedAll the others are corrected uses with the #asSymbol dropped.' id '8720e836-68d5-48bd-a664-5d39a9e2e211' date '12 December 2012' time '12:22:33.362 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.232' message 'Merge LargeInteger primitive fixes from VMMaker-dtl.286 andtests from VMMaker-dtl.289.' id '9ecffa1b-c204-4dbd-b148-79e209e6470a' date '11 December 2012' time '5:47:49.686 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.231' message 'Rename misnamed internameIsMutable: and internalIsImmutable:to isOopMutable: and isOopImmutable:.  Affects sqVirtualMachine.c,but only part of api used in Newspeak VMs.' id '3222a519-8cd5-4e1a-9689-6534df290217' date '11 December 2012' time '4:41:13.926 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.230' message 'Fix stackPage headroom calculation in CoInterpreter.  Was gettingthings backward.  This increases the stack page headroom by 62%from 1564 bytes to 2532 bytes.  Shootout benchmarks unchanged,so reduction in frames per page is not an issue for typical code.This should result in fewer crashes on linux where the dynamiclinker, if it kicked in during a signal handler, could cause a deepcall chain at interrupt time and trample the start of the adjoiningstack page.Use self alloca: nbytes over cCode: ''alloca(nbytes)''' id '735cb4f0-6d2a-4916-bbd0-cd517917da4e' date '11 December 2012' time '3:16:18.03 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.229' message 'Streamline ObjectMemory>>instantiateClass:indexableSize: (hdrSizeand header3 change together).Optimize the debug VM by making startOfMemory a macro thatanswers heapBase instead of a method.Improve stack page printing, and make stack trace printing morerobust (findClass/SelectorOfMethod:forReceiver:).Make temporary:in:put: et al answer their values. For stObject:at:put:.Remove dead code in TMethod (typedByPropagation).make jumpTable size err message more explanatory.typos.' id 'd0568065-8deb-4e6e-8c98-798d0983ef52' date '11 December 2012' time '2:03:55.958 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.228' message 'Change generation of plugin code so that internal plugins call VMroutines directly and external plugins call through their own localcopies of the function pointers in InterpreterProxy.  External pluginscopy the InterpreterProxy functions to their local copies insetInterpreter:.Fix a couple of prims in BalloonEnginePlugin that had variables calledisArray which now clash with the funciton of the same name.Add the ImmX11Plugin.Change implementations of stObject:at:put: to return their value, tomatch the declaration in InterpreterProxy.Delete some obsolete code in SmartSyntaxPluginCodeGenerator(emitLoad:asBooleanValueFrom:on: et al).Add a class to test consistency between *Interpreter(Primitives)implementations and InterpreterProxy implementations.  Thesediffer because void result functions are still declared as sqInt resultfunctions in InterprerterProxy/struct VirtualMachine.' id 'd0ee0b3a-efb3-4092-a37d-b6dfd1036b49' date '11 December 2012' time '1:56:43.108 pm' author 'eem' ancestors ((id '3b0a509e-7c27-4289-9194-29efc7936437')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.264' message 'Fix snapshot primitive failure in the StackVM and Cogit.  Theprimitive should fail, not merely return the receiver.  Also if inCogit, need to back-up instrufiton pointer on failure.Make reportMinimumUnusedHeadroom more informative (also printavailable headroom).Back out of named SerialPlugin primitives (comprehensiveplatform support is lacking).Fix simulation of forceInterruptCheck when snapshotting.Fix simulation of writeImageFileIO: when image file is not writable.Fix generateSqueakStackVM.' id '64e76092-8af7-449f-9188-e65f3bd1f08d' date '5 February 2013' time '6:37:47.099 pm' author 'eem' ancestors ((name 'VMMaker.oscog-lw.263' message 'refactored the minimization of immediate 12bit valuesadded send site updates' id 'bf23be20-f2a7-1040-a675-76e097a7f431' date '3 February 2013' time '6:09:52.492 pm' author 'lw' ancestors ((name 'VMMaker.oscog-lw.262' message 'updated numberOfSaveableRegisters to reflect the correct number of registers saved in genSaveRegisters: 0.compileFrameBuild expects lr to be pushed before the frame pointer. This is done now.' id 'e873534c-eaea-3e44-b57c-66c588bed675' date '2 February 2013' time '12:10:15.453 am' author 'lw' ancestors ((name 'VMMaker.oscog-eem.261' message 'Merge with VMMaker.oscog-lw.260, but put push of link registerwhere I think it should go in trampolines.Move determination of the ammount of headroom to the platform inosCogStackPageHeadroom (in the various sqFooMain.c files).Provide a routine to monitor the ammount of unused headroom,which requires the stack memory be zeroed before use.  Assumethe platform will provide a -reportheadroom flag for enabling thereport.  Provide primitiveMinimumUnusedHeadroom for in-imageaccess.Add some asserts to check that a page''s frame pointer is alwaysin range (setHeadFP:andSP:inPage: already did this).Implement some missing prototypes in InterpreterProxy.  Add acomment to preDeclareInterpreterProxyOn: to eyeball all prototypes.' id 'eeb310a3-23e0-41f6-8a92-5749b798e623' date '30 January 2013' time '5:12:32.411 pm' author 'eem' ancestors ((name 'VMMaker.oscog-lw.260' message 'reverted all the changes done which were based on the implementation of RTLOpcode Call as (push {pc}, BL)added abstract register LinkRegchanged trampolines as suggested on mailinglistadded assert in callTargetFromReturnAddress' id '6ee6c419-5fb3-e34f-ac21-e2051a2076cd' date '30 January 2013' time '9:38:08.186 am' author 'lw' ancestors ((name 'VMMaker.oscog-eem.258' message 'Fix becomeForward: when the rootTbale overflows.  There were twobugs here.  One is that initializeMemoryFirstFree: used to clear theneedGCFlag so if the rootTable overflowed noteAsRoot:headerLoc:''s setting of the needGCFlag would be undone after the sweep.The other is that rooitTbale overflow was indicated byrootTableCount >= RootTableSize which could be undone bybecomeForward: freeing roots which need to be removed fromthe rootTable.  At some point in becomeForward the rootTable wouldfill but at a later point a root would be freed, causing the table tobecome not full.The fix is two fold.  1. Add an explicit rootTableOverflowed flaginstead of relying on rootTableCount >= RootTableSize.2. move the clearing of the needGCFlag to the GC routines.Remove unnecessary senders of needGCFlag: false, and removethe accessor.As a side effect rewrite primitiveRootTable in terms of a newObjectMemory>>rootTableObject.  Remove the rootTable: accessor.Implement checkAllAccessibleObjectsOkay &checkOkayInterpreterObjects: (used to debug the above).Fix NewObjectMemory initialization to set freeStart at the sametime as setting endOfMemory.  This allows load-time scans andassert code to use freeStart instead of endOfMemory.Simplify markAndTraceStackPage: ; since the two implementationsare distinct they don''t need to contain the isCog if-then-else.Implement NewObjectMemory>>shorten:toIndexableSize: so thatthe last object is correctly shortened (cut back freeStart).  Refactorthe allocation check filling code intomaybeFillWithAllocationCheckFillerFrom:to:.Make longPrintOop: print the class oop.Fix bug in printCallStackOf:currentFP: for widowed contexts.Use fputs for print: instead of printf.' id 'da1433f1-de50-475f-be33-f462b300a2ea' date '18 January 2013' time '11:01:23.072 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.257' message 'Fix snafu in last stack page  hanges (last two parameters to stackpage init funcs are unused) and simplify.Integrate the named serial primitives plus Luc Fabresse''s latest fix.' id 'cc766916-2d42-4637-b147-e37206b7c669' date '16 January 2013' time '10:38:33.013 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.256' message 'Rewrite the stackLimit computation after a moment of clarity.  Allowthe system to reduce the space for frames by up to an 1/8th.Make sure there''s at least as much headroom as asked for.  Thischanges the stack page size from 4096 to 2048 and much reducesthe interpreterAllocationReserveBytes.Don''t round up interpreterAllocationReserveBytes to a power of two.Simulator:Initialize numStackPages to the default for experimenting withstackPage dimensions.Implement ioRelinquishProcessorForMicroseconds: inStackInterpreter a la CoInterpreter.In internalFindNewMethod use splObj: SelectorDoesNotUnderstandinstead of sloooow self stringOf: messageSelector.' id 'bfea3efd-4e81-4e85-922e-cf4f58ee5d64' date '16 January 2013' time '8:37:11.561 am' author 'eem' ancestors ((id '51e53ec1-8caf-41f6-9293-1088ef4b82d8')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.266' message 'Support one-way become on cogged methods that have the samecode, for e.g. Pharo''s setSourcePosition:inFile:.  Add error checks fortwo-way becomming cogged methods, becomming married contexts,and for freeing any of these during become.Refactor freeObject: and restoreHeaderOf: to allow subclasses toadd their error checks efficiently (i.e. avoiding fetching baseHeadermore than once).Bring endPCOf: out of simulation-only land for code comparison.Make assert in rawHeaderOf:put: accept forwarding.Tiny speed-up in using byteLengthOf: instead of byteSizeOf: in cogit.Add asLong to CCodeGenerator andthere-by  eliminate printfwarnings in reportMinimumUnusedHeadroom.  Eliminate warningin instVar:ofContext:put:.Add asserta: to functions not inlined to get neater printing ofasserta failures.Nuke obsolete Cogit>>byteAt:put:.' id 'ee4e0b6e-91a8-432c-847b-132d682bc79b' date '20 February 2013' time '3:47:06.471 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.265' message 'Fix bug in assigning pc which can cause stackPage to not be mostrecently used.Minor cleanups:Move InterpreterPrimitives primitives that use framePointer and/orstackPointer down into StackInterpreterPrimitives.Eliminate obsolete 64-bit check in primitiveBeCursor.Improve class comments for VM simulators, including current launchinstructions.Include the AioPlugin in Squeak Cog VM generation.Fix short frame printing (eliminate an exc=tra newline and use hexfor receiver).' id 'c8c5b4d1-706a-4eb6-ad85-566811e2b239' date '20 February 2013' time '9:36:51.617 am' author 'eem' ancestors ((id '64e76092-8af7-449f-9188-e65f3bd1f08d')) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.270' message 'Fix the become issue where methods that are identical are failingthe code test because their penultimate literals are different objects.Add a flag "cmUsesPenultimateLit" to jitted methods, stealing bitsfrom stackCheckOffset (which was way larger than needed).Shrink stackCheckOffset to 12 bits (still an order of magnitude largerthan needed) and add an error check on assigning it.Also add a check for max method size (2^16-1 bytes) and refuse tojit a method that generates too much code.When comparing code, use the cmUsesPenultimateLit flag to decideif comparison includes penultimate lit or not.This is mildly insane, but the VM really doesn''t know about thepenultimate literal and it shouldn''t depend on knowing it can beignored.  Note that the CoInterpreter knows about the last literal;it uses this in supersends.  With this hack, Pharo''s condenseSourcesworks.Fix simulation of primitiveMillisecondClockMask.' id '014f0153-bb02-49b7-b544-d8f3ac2deef6' date '1 March 2013' time '5:10:47.701 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.269' message 'Fix bug in primitiveClone/cloneContext: that causes the copy to be aword short.Move isContext: to ObjectMemory where it belongs.Implement the heap map check for simulation, plus a test class.Implement mem:mo:ve: for simulation.Use isPointerNonInt: and isContextNonInt: in a few places.' id '49173296-5145-4de1-a2d9-defc8579acc6' date '28 February 2013' time '1:19:23.804 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.268' message 'Merge VMMaker-dtl.301.  Add IncludedMethodsTest to VMMaker-Tests.' id '5fdf7a63-1080-44b2-985d-0850b60cbbc3' date '26 February 2013' time '10:39:50.779 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.267' message 'Implement unknownBytecode.  Send unknownBytecode to theactiveContext on unknown bytecode if the selector is in thespecialObjectsArray.Reuse the index reserved for the Sista counter tripped selector asthis has yet to see the light of day.' id '8b17ccab-cf2b-4810-8e9a-ac9571eafef5' date '21 February 2013' time '11:09:20.986 am' author 'eem' ancestors ((id 'ee4e0b6e-91a8-432c-847b-132d682bc79b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.272' message 'Fix unknownBytecode processing to leave pc at unknown bytecode.Fix case of process switch to an interior frame.Fix some assert function signatures in the stack vm.Use symbols for types instead of strings in stack page funcs.' id '8f4167f2-5bf0-4d90-9b7f-5355c741c68f' date '8 March 2013' time '3:33:01.637 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.271' message 'Integrate VMMaker-oscog-EstebanLorenzano.235.- it is possible to build stackvm again' id '8943dd74-9b0c-4423-b878-187204349978' date '8 March 2013' time '1:04:37.342 pm' author 'eem' ancestors ((id '014f0153-bb02-49b7-b544-d8f3ac2deef6')) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.285' message 'Eliminate some excessive use of push/popRemappableOop[:]in the SocketPlugin.  Use addressOf: instead of cCode:.' id 'cb7737d2-7959-4494-ba87-9be6e6f1226b' date '12 April 2013' time '3:14:22.998 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.284' message 'Add Callback LIFO ordering support to the new-style Callback returnprimitives.  Fix some compiler warnings.Fix typos in RiscOSVMMaker' id '4f939b96-e07b-4888-9880-d2e9465edbe3' date '10 April 2013' time '4:03:06.024 pm' author 'eem' ancestors ((name 'VMMaker.oscog-tpr.283' message 'Make it work for RISC OS; simple changes to use the RiscOSVMMaker class, not do the gnuify step, use RISC OS tolerabel filenames etc.Also fixes apparent bug for all platforms in VMPluginCodeGenerator>>emitCCodeOn:doInlining:doAssertions:' id 'd2f9d806-1112-4c6e-a21d-3228b51fa2e8' date '10 April 2013' time '12:59:03.611 pm' author 'tpr' ancestors ((name 'VMMaker.oscog-eem.282' message 'Slang: Fix SmartSyntaxPlugin support method affected by the fixesfor generating to:by:do: loops in VMMaker.oscog-eem.279.' id '6c2f2048-555b-4d37-a9eb-4d9252acf3b9' date '3 April 2013' time '4:14:26.273 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.281' message 'Cogit: Fix *HORRIBLE* yet ancient bug with the CogObjectRep.Both CogObjectRepresentationForSqueakV3>>couldBeObject: &CogObjectRepresentationForSqueakV3>>shouldAnnotateObjectReference:used signed comparisons for oops and so once the heap sizepushes oops into the upper half of the address space constantoops in machine code were no longer being updated by the GC.StackInterpreter: reqrite the login for printing methods so thatprinting the frame of a bad receiver won''t seg fault.' id '64be55df-6421-4087-a712-5c07419806c7' date '3 April 2013' time '3:27:02.058 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.280' message 'Add primitivePathToUsing which mimics the PointerFinder and can hence be used todebug it.Remove unnecessary forceInterruptCheck in NewObjectMemory>>become:with:twoWay:copyHash:.(heartbeat does this for us).Fix bug in assert in NewCoObjectMemory>>restoreHeaderOf:to:.Slang:Move SmartSyntaxPluginTMethod>>oopVariable: to TMethod.' id '8caedff8-7423-4f1d-a007-19ea906a098b' date '3 April 2013' time '3:19:05.275 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.279' message 'Slang:Fix translation of to:by:do: loops so that the limit is not re-evaluatedon each iteration if it may have side-effects.As part of this change make TMethod locals a Set, and sort only whenemitting locals.  Alas this causes a number of methods to change.' id '300e6a42-3856-465e-bd25-d3026399ab6c' date '31 March 2013' time '5:12:29.172 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.278' message 'and include the correct AioPlugin (UnixAioPlugin)' id '7fdfd7e4-1e18-4a12-92e3-832126e924a5' date '22 March 2013' time '1:16:52.735 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.277' message 'Include SqueakSSLPlugin in the configurations.' id '23bfa9b8-fad8-4d7a-b0e8-e84cdd7e67d4' date '22 March 2013' time '1:06:29.943 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.276' message 'Cogit:Stop reporting EncounteredUnknownBytecode with an error message.Fix slip in ceSICMiss: that didn''t link new PIC if an MNU case.Better document the calling conventions.Add an assert to genGetImplicitReceiverFor:forPush: that checksthe appropriate use of the IsNSSend annotation.Fix simulation bug in CogMethodSurrogate>>nextOpenPIC.Slang:Nuke unused InterpreterSimulationObject.' id '52d03a8f-11ec-4454-9c4a-ea1c383f339a' date '21 March 2013' time '4:43:39.056 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.275' message 'Remember to flush PushImplicit/SendAbsentImplicit caches onglobal cache flush and flush cache by method.  Fix comment forflush-cache-by-method workhorse.  Streamline the code.' id '69d4c949-ec25-4846-a014-417705bb4611' date '19 March 2013' time '9:27:45.262 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.274' message 'Fix PC-mapping for NewspeakV4.  Absent receiver sends must notbe maped twice, once for IsNSSend and once for IsSend.  Sointroduce class vars that state whether instructioon set usesPushImplicitReceiver (NSSendIsPCAnnotated is true) orSendAbsentImplicit (NSSendIsPCAnnotated is false).' id '559311c1-938a-409c-9ee4-e17fb0e2b85f' date '18 March 2013' time '5:58:39.263 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.273' message 'Integrate VMMaker-dtl.302:A WordArray parameter in the parameter list of a primitive declaration should be declared as (unsigned *) not (usqInt *) in the generated C code. Fix WordArray class>>ccgDeclareCForVar: code generation and provide a unit test.Also remove redundant type declaration in HostWindowPlugin>>primitiveShowHostWindow:bits:width:height:depth:left:right:top:bottom: which was an ineffective attempt to work around the code generation bug.Cogit in-image tests:Fix the facade now that absent-receiver inline caches aredisassembled prettily.Allow supplying VM config options to pc-mapping tests.Put VMClass defaultIntegerBaseInDebugger in a class var for quickflipping between decimal and hex.' id '0a8e74b7-9351-45ea-b8a3-56969530c62e' date '18 March 2013' time '1:20:54.297 pm' author 'eem' ancestors ((id '8f4167f2-5bf0-4d90-9b7f-5355c741c68f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.298' message 'Change the VMProfileLinuxSupportPlugin to follow symlinks,answering pairs of module name, dereferenced symlink or nil.' id 'da5c90a8-14fa-4f7a-a58f-40f16337392c' date '10 June 2013' time '6:12:31.011 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.297' message 'Fix 3 (!!) bugs in primitiveDLSymInLibrary' id 'cb5c5783-9e64-4e06-ac22-1303b40171e9' date '10 June 2013' time '1:57:07.909 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.296' message 'Fix bug in eden filling/object overwrite checking.  must use unsignedvars in the fill loop.' id 'ca2924d5-7bfb-4690-a7ce-9ec8d2222043' date '6 June 2013' time '12:35:37.502 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.295' message 'Cast primitiveUtcWithOffset in terms of a new ioLocalSecondsOffset' id 'cb649291-541e-4d32-8b85-bf22a4449a51' date '5 June 2013' time '1:04:16.829 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.294' message 'add VMProfileLinuxSupportPlugin to configurations' id '9f0fd793-5a49-476d-9a76-c84180415334' date '5 June 2013' time '12:22:34.175 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.293' message 'tweak VMProfileLinuxSupportPlugin''s class comment' id '1aa1e0a0-8883-4493-b0eb-226057aaabe3' date '5 June 2013' time '12:11:06.561 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.292' message 'Add a plugin to support the VMProfiler on linux (now Steve Reeshas told us how to get proper thread priorities on newer linuxes).' id '5dd88aa9-3dbc-4c32-be81-398516000a13' date '4 June 2013' time '5:39:57.646 pm' author 'eem' ancestors ((name 'VMMaker.oscog-tpr.291' message 'Fix typo in SQ_USE_GLOBAL_STRUCT_REG.Insert batshit insane C macro double expansion lunacy to make use of -DUSE_GLOBAL_STRUCT_REG=r6 convert to register struct foo * foo asm("r6"); in final code.This does now build a Raspbian vm with global reg var for the pointer to the global struct. Doesn''t seem to be any faster though. :-(' id 'ec89405f-12f5-4a55-98f7-b246fcbec660' date '15 May 2013' time '6:08:02.276 pm' author 'tpr' ancestors ((name 'VMMaker.oscog-tpr.290' message 'Clean up some global struct code;- remove need to build separate sources to accomodate use of register global ptr to struct- clean up recording/testing for use of global struct in methods- define USE_GLOBAL_STRUCT_REG to use the global struct reg; right now machine factors require a different define for each machine/OS. Maybe this can be improved' id '31707f84-deff-4c57-8d55-df4e7407682f' date '15 May 2013' time '1:05:58.213 pm' author 'tpr' ancestors ((name 'VMMaker.oscog-tpr.289' message 'USe asmLabel: false pragma to stop asm lables being put into floatValueOf and safeObejctAfter so that gcc -o3 doesn''t fuck up; it tends to put the label in twice for some reason and then complains about that. Typical...' id '522ae12f-76a5-465d-9b22-0a418d901ad2' date '14 May 2013' time '3:19:03.426 pm' author 'tpr' ancestors ((name 'VMMaker.oscog-eem.288' message 'Fix typo in NewObjectMemory>>freeStart to repair USE_GLOBAL_STRUCT=1 regime.' id 'fe94950e-9d0b-4da7-ae1b-6a0700c87a88' date '10 May 2013' time '1:52:10.136 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.287' message 'Fix mistaken use of MFrameSlots in StackInterpreter>>interpreterAllocationReserveBytes.Some asserts in the allocation routines to attempt to catch what appeared to have been a compiler bug.Use addressCouldBeObj: in oopHasAcceptableClass:.' id '11b3f2a0-e1f5-47f5-b57e-52c93081cefe' date '6 May 2013' time '2:57:40.075 pm' author 'eem' ancestors ((name 'VMMaker.oscog-dtl.286' message 'Replace broken primitiveUtcWithOffset with a version that works.' id '8be237d9-7812-4792-9723-90f9cff0c2e9' date '4 May 2013' time '11:29:25.237 am' author 'dtl' ancestors ((id 'cb7737d2-7959-4494-ba87-9be6e6f1226b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-tpr.301' message 'Faster bitblt integration, pt 1.Add #define switch for use of new code - ''ENABLE_FAST_BLT''.makefile related stuff still to come.Also fix bug in VMMakerTool.' id 'df2e88d5-5589-4cc2-b52d-3069e8d746a3' date '21 June 2013' time '6:54:41.276 pm' author 'tpr' ancestors ((name 'VMMaker.oscog-eem.300' message 'Fix type errors in the Cogit that prevent the Cogit working whencompiled with clang.  Specifically void * pointers are not comparable.Make sure that fetchPointer:ofObject: & isIntegerValue: are declaredin cointerp.h.' id 'b52f5f3d-b4e2-4bfb-ba9a-a6b55c71a8d3' date '21 June 2013' time '4:34:38.785 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.299' message 'Fix bad performance regression that on certain platforms (linux)results in all send misses causing a discarded PIC creation followedby a slow hash lookup.' id 'e51057f5-4de2-4c2b-82ce-844d130e2f33' date '14 June 2013' time '4:47:32.815 pm' author 'eem' ancestors ((id 'da5c90a8-14fa-4f7a-a58f-40f16337392c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.314' message 'Fix bug in transferTo:(from:) when doing a code compaction whenensuring there is a machine code method when switching to aprocess whose context has a machine code pc.Add an assert to commenceCogCompiledCodeCompaction to catchthe actual bug (pushing the instructionPointer twice).Improve inlining via inlineSend:directReturn:exitVar:in: by refactoringargAssignmentsFor:args:in:''s innards.  Now global variables areinlined if they are only read within the code being inlined.Implement warningat in term of warning so one only has to rememberto set a breakpoint in warning, not both.' id 'e8cba0d1-78b9-4058-820f-62d6e02e180b' date '29 July 2013' time '3:13:51.976 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.312' message 'Add tracing of GCs and code compactions to primTraceLog.' id 'c3721341-0803-4acd-aa1e-48ab09aca8e3' date '25 July 2013' time '4:51:01.71 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.311' message 'primitiveTerminateTo needs one more assertValidStackedInstructionPointers:' id '1532d343-6ca3-4722-acfd-f56c1f3cc306' date '25 July 2013' time '11:06:54.686 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.310' message 'Fix some assert:s that should be assert:l:s' id 'd05bf462-ca3e-4094-9350-b57f667e30ec' date '25 July 2013' time '10:06:49.832 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.309' message 'The Peugeot commit.Use assertValidStackedInstructionPointers: in primitiveTerminateTo.Fix the assert to use framePointer when on current page andinstructionPointer ~= 0.Fix assertValidStackedInstructionPointersIn:line: usage incommenceCogCompiledCodeCompaction.Simplify relocateCallBeforeReturnPC:by: and elide bogus use ofsignedIntToLong there-in.Add a guard to findClassOfMethod:forReceiver:.' id '2ee24067-8c61-4855-b4b3-4bb419b4fe7f' date '24 July 2013' time '12:34:18.688 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.308' message 'Add an assert that checks all the instructionPointers in all stackpages.  Use the assert in code compaction.  (tracking down a rarecrash at Cadence).Fix the assert in CogIA32Compiler>>relocateCallBeforeReturnPC:by:that was being triggered by relocating calls toceSendFromInlineCacheMiss: in open PICs.Do this by making simulated addresses +ve, i.e. putting them in thetop of the bottom half of the address space, not the top of theaddress space, to clear their sign bits.Beef up the assertValidExecutionPointe:r:s:imbar:line: assert forinterpreted frames (i.e. check savedIP if pc is ceRetrnToInterpreter)' id '66681ccb-5127-4525-a519-55ee71410844' date '23 July 2013' time '5:20:45.148 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.307' message 'Fix simulation of ImageSegmentTest by using correct receivers, andby fixing the cast to char * in FilePlugin>>primitiveFileRead.  ChangeFilePlugin>>primitiveFileWrite to match.Rename kernel: and builtin: to isKernelSelector: and isBuiltinSelector:.Add cCoerce:to: and cCoerceSimple:to: to kernel selectors.Make simulator check for last object overwritten after callingfunctions through dispatchFunctionPointer: and handleCallOrJumpSimulationTrap:.Add checks for writing past freeStart to byteAt:put: and simulatedstorePointer:ofObject:withValue: et al.Delete a number of bogus reverseBytesFrom:to: implementations infavour of ObjectMemory>>reverseBytesFrom:to:.Move printMemoryFrom:to: to NewObjectMemory.Fix overriding base in promptHex:' id '737feb1e-5228-463a-8f3e-0f55f10fc3c9' date '19 July 2013' time '11:12:32.01 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.306' message 'Add an assertValidExecutionPointers to the front side of processswitch.Restore the simulator after adding the MaxStackAllocBytes limitcheck to allocateOpcodes:bytecodes:ifFail: by adding sizeapproximations for CogAbstractInstruction et al.Make cppIf:ifTrue:[ifFalse:] accept a symbol, thereby restoring thesimulator after Tim''s ENABLE_FAST_BLT changes.' id 'ef4dab92-e348-4081-8041-92ae24d73bea' date '18 July 2013' time '12:07:47.208 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.305' message 'Limit the ammount of space the Cogit will stack allocate when compiling.This limits the maximum number of bytecodes in a method that theCogit will compile.  Currently set at 1.5Mb of stack space from empiricaltests of alloca on Mac OS X 10.6, linux 2.6 & Windows XP.Merge initializeCompilationWithConstantsOptions: intoinitializeMiscConstantsWith:.' id 'ca4b6f0d-e113-4cd5-b859-527f897bd29b' date '17 July 2013' time '2:02:59.495 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.304' message 'Make deferStackLimitSmashAround:[with:] answer true so it can beinvoked in an assert and hence be optimized out in a non-assert VM,hence optimizing away assertValidExecutionPointe:r:s:imbar:line:.' id '79d06b10-06eb-49bc-a33a-a36bd68ab3c2' date '17 July 2013' time '12:25:05.226 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.303' message 'Add assert:l: and asserta:l: which take line numbers.Refactor assertValidExecutionPointe:r:s:imbar: to take a line numberand supply it to assert:l: et al, for more informative assert failures.Use sqLowLevelMFence in deferStackLimitSmashAround:with: et al.Refactor preambleCCode emission so that a comment indicating itssource is generated.' id '99b81fe2-3c89-43bb-8a2c-2541842da7e0' date '16 July 2013' time '3:45:37.149 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.302' message 'Fix bug when assigning to some context inst vars from generatedmethods.  Add accessors to document the context inst var accessscheme.Fix a compiler warning comparing an error code in cog:selector:' id '2ac39432-ac54-4584-964e-b129c90792f4' date '12 July 2013' time '3:52:19.037 pm' author 'eem' ancestors ((id 'df2e88d5-5589-4cc2-b52d-3069e8d746a3')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'VMMaker.oscog-eem.333' message 'Fix cogit.c for non-Newspeak by marking the unpaired method listmethods with <option: #NewspeakVM>.' id '84da9cb8-7f30-4cb7-b4fb-239a11f63b54' date '22 August 2013' time '8:59:24.657 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.332' message 'Fix snapshotting in the Newspeak VM.  Make removing from theunpaired method list cope with somethign not on the list.' id 'f7cb4758-7c5c-4617-89dc-9527ab2ee66b' date '21 August 2013' time '7:21:26.485 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.331' message 'Speed-up Newspeak significantly (e.g. -28% in one compile-intensive benchmark)by maintaining unpaired methods (compilations of anonymous accessors) on alinked list instead of searching the entire method zone.Do this by adding a NewspeakCogMethod and surrogates that add a nextMethodfield.  Update surrogate accessor generation so that accessors can answer andreceive surrogates and nils.  Also add a nop before the dynSuperEntry so as tochange its alignment now that (in the Newspeak VM) CogMethod has changed sizein gaining a field.Send fetchClassOf: to the right receiver inexplicitOuterReceiver:withObject:withMixin:Slang: fix various bugs in header and typedef generation so that only one CogMethodtypedef is produced.' id '37d2e4b0-2f37-4e2d-8313-c63637785e59' date '21 August 2013' time '7:00:38.722 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.330' message 'Refactor ancilliaryClasses and ancilliaryStructClasses to pass inoptions to allow selecting different classes as required.i.e. collapse ancilliaryClasses and ancilliaryStructClasses ontoancilliaryClasses: optionsDictionary.  This also requires changingrequiredMethodNames and exportAPISelectors to take options too.(this is prior to adding a NewspeakCogMethod class for maintaininga list of anonymous methods).Simplify CoInterpreter class>>exportAPISelectors: by marking a fewmethods as <api>.Eliminate CogStackPage, collapsing it onto InterpreterStackPage(it only has a class side).Use temporaryCountOfMethodHader: instead of tempCountOf: inSimpleStackBasedCogit>>compileFrameBuild (header is in hand).Reimplement CCodeGenerator>>structClassesForTranslationClasses:to keep the sort stable (ChangeSet superclassOrder: is a stable sortbut structClassesForTranslationClasses: used a set).' id '836f976a-35fa-404c-aa5a-c4af1c58852f' date '21 August 2013' time '2:20:31.076 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.329' message 'Set the inBlock variable in scanBlock and scanMethod.  Change theargument to the needsFrameFunction to be the stack delta.Change genSpecialSelectorClass''s needsFrameFunction toneedsFrameIfStackGreaterThanOne: which better handles e.g.TextColor>>dominates: other ^self class == other classthan needsFrameIfFollowsSend:.' id '5bf1ecce-8cdb-48fd-bc66-b41b4cff2efe' date '17 August 2013' time '7:06:11.213 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.328' message 'Reinstate the new framelessness now that the problem is found tobe the genPrimitiveClass bug.' id 'd9a4d11d-3a72-437e-b617-92de227ffdde' date '17 August 2013' time '2:40:07.623 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.327' message 'Fix StackToRegisterMappingCogit>>genPrimitiveClass for case wherenumArgs > 0 (must use other than ReceiverResultReg, e.g. objectClass:).Improve register usage in genSpecialSelectorClass.Save & restore methodOrBlockNumTemps in compileBlockBodies for symmetrywith needsFrame & methodOrBlockNumArgs.Fix disassembly of methods with blocks (avoid printing block dispatch twice).Delete CoInterpreter class>>initialize; it breaks the simulator.Fix disassembly of e.g. Character literals when using in-image compilation.Slang: fix formatting of WhileForeverBreakIf loops.' id '29b87ba8-cc32-406e-9698-6c022ab7abbd' date '17 August 2013' time '2:30:43.831 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.326' message 'Snafu.  The experimental initializers need to use needsFrameIfFollowsSend:.' id '0ae2d369-8cd0-4bdf-9f5b-a360e942dad8' date '16 August 2013' time '1:39:38.865 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.325' message 'Fix disassembleMethod:on: for frameless blocks.Update in-image facade for refactored context inst var checking.' id '9b61ee96-d09f-4314-beb9-a589bd69eed9' date '16 August 2013' time '11:27:47.266 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.324' message 'Fix CurrentImageCoInterpreterFacade for running in-image teststhat enumerate over many methods.' id '9a823c96-a04e-41a7-b61f-3e5723096cb1' date '16 August 2013' time '11:12:26.475 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.323' message 'Add some class initializers so the in-image compilationworks wthout first having to run the VM simulator.Tweak startPCOrNilOfLiteral:in: to filter-out arrays from itscheck for closure literals.Revert the new framelessness back to experimental status(problem not yet identified but e.g. debugger is broken).Comment typos.' id 'db5479c8-21ae-460d-912c-66acdf16c850' date '16 August 2013' time '10:09:00.308 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.322' message 'Tweak frameless inst var store to avoid a register copy from Arg0Reg.Upgrade CurrentImageCoInterpreterFacade to cope with the scan forclean blocks.' id '15da84de-4866-48ae-b478-c2c96002c5eb' date '15 August 2013' time '11:50:09.807 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.321' message 'Add Cogit support for clean blocks by scanning literals looking forBlockClosures on the current method.Refacor Cogit>>compileCogMethod: so thatSistaStackToRegisterMappingCogit''s version is no longer needed.' id '6134e40b-c38c-41ec-8f31-64a7f1c002b3' date '14 August 2013' time '4:29:01.96 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.320' message 'Add a prevBCDescriptor to the StackToRegisterMappingCogitscanners.  This enables needsFrameIfFollowsSend:.Avoid spilling in frameless methods (now that pushTempVar can beframeless and hence inst var setters such at setX:Y: are nowframeless) by adding needsFrameIfFollowsSend: used for specialselectors #class & #==.Make the new frameless regime the default.  Hence nuke the experimentalgenerator initializers.' id '543f6d09-e921-41db-955f-b2a6942817cb' date '14 August 2013' time '2:08:09.177 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.319' message 'Avoid compiling frameless methods with stack depth > 1.  This is acrude way of avoiding the spilling issues in e.g.TextColor>>#dominates: other	^ other class == self class	Better way to follow.' id '2f166f6b-54bc-4eba-b688-182c0d0fff11' date '14 August 2013' time '11:42:37.906 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.318' message 'Make primitiveObjectAtPut fail if changing the header word and thenew header has a different literal count.  Avoids crashing the VMwhen inadvertently changing the header, as a Newspeak bootstrapdid recently.Implement frameless inst var store from arguments, so e.g.Point>>setX:Y: is frameless.  Needs heavy testing so not yetthe default.' id '8925d5a6-c7d2-41a7-b776-b1d53ec31cfc' date '13 August 2013' time '5:48:34.574 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.317' message 'Remove debugging instrumentation accidentally committed.' id '18267235-d270-4acf-8626-28095c535f32' date '1 August 2013' time '12:48:57.99 pm' author 'eem' ancestors ((name 'VMMaker.oscog-eem.316' message 'Correct several uses of literalCountOf:, using LiteralStart insteadof 1, and BytesPerOop instead of BytesPerWord.Correct some uses of #== to #=.Prune the isNode:substitutableFor:inMethod:in: search for calls atasserts.' id 'db273bad-0d96-4432-9470-f4c21d785531' date '1 August 2013' time '11:54:30.18 am' author 'eem' ancestors ((name 'VMMaker.oscog-eem.315' message 'Copy 314 transferTo:from: fix to CoInterpreterMT.Fix become for cog methods that are not paired with theirbytecoded methods (e.g. Newspeak accessors).Eliminate dead code around contextInstructionPointer:context:.Eliminate duplicate methodClass asserts in ce*(Send: and simplifysome in code compaction & code freeing.Don''t inline freeStackPage:Slang:Revise the inlining change.  Global vars passed as parameters mustnot be read after any non-trivial call.Use CCodeGenerator>>isAssertSelector: to check for all assert: calls(these are not inlined).  hence fix assert:l: uses.Add some more inlining selector breakpoint checks.' id 'edf4f6ec-fb34-404f-a50a-f3690c4f6dbb' date '31 July 2013' time '3:32:56.875 pm' author 'eem' ancestors ((id 'e8cba0d1-78b9-4058-820f-62d6e02e180b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())